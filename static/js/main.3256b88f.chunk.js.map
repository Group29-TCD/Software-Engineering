{"version":3,"sources":["legend.svg","Components/TitleContainer.js","Components/Navbar.jsx","Components/HomeNavContainer.js","Components/HomeStats.js","Pages/HomePage.jsx","Utils/History.js","Backend/APIWrapper.js","Backend/FeedData.js","Components/Feed.jsx","Components/GraphCard.jsx","Components/SimpleBarGraph.jsx","Components/PieChart.jsx","Pages/GraphPage.jsx","Pages/MostActiveUsers.jsx","Pages/MostActivePages.jsx","Pages/UsersByMostEditsPage.jsx","Pages/RecentEditSize.jsx","Pages/TestPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TitleContainer","className","this","props","title","subtitle","React","Component","NavbarLocal","state","history","activePage","window","location","href","Navbar","Collapse","Nav","Link","as","to","endsWith","HomeNavContainer","style","btnTitle1","btnTitle2","btnLink","type","btnStyle","btnText","HomeStats","text","errorCode","updateStats","$","ajax","url","success","response","html","find","intervalID","setInterval","clearInterval","ListGroup","horizontal","Item","id","HomePage","icon","faBars","faChartLine","faUser","createBrowserHistory","getMostEditsUsers","a","async","compare","b","editcount","users","query","action","format","list","auprop","aulimit","auwitheditsonly","auactiveusers","then","data","allusers","sort","getRecentEditsWithSize","edits","rcprop","rclimit","result","recentchanges","getRecentLargestEdits","editList","forEach","item","value","Math","abs","newlen","oldlen","getMostActivePages","prevTimestamp","queryRecentChanges","recentChanges","newTimestamp","activePages","countPageOccurances","getRecentActiveUsers","activeUsers","countUsers","tmpTimestamp","Date","toISOString","rcstart","rcend","getUserGroups","userNames","itemsKey","items","params","batches","Array","createBatch","results","map","batch","batchString","join","push","catch","err","Promise","all","batchQuery","usprop","groups","queryResult","userObj","name","n","paramsString","URLSearchParams","toString","API_ENDPOINT","fetch","json","titleCounts","change","actions","titles","Object","entries","userCounts","user","numActions","username","array","size","length","splice","FeedData","maxItems","changes","newTimeStamp","usernames","unshift","pop","getTimeDifference","toCompare","round","getTime","Feed","useState","feedData","paused","setPaused","setRecentChanges","useEffect","refresh","onChange","prevPause","index","key","timestamp","GraphCard","onClick","pageLink","graph","Card","tag","Body","Title","SimpleBarGraph","tooltip","click","src","indexValue","loadData","getData","settings","bind","smlData","slice","fullGraph","setState","loaded","method","refreshMethod","refreshInterval","refreshTime","margin","label","classname","clickable","legend","colorBy","top","right","bottom","left","keys","indexBy","padding","colors","scheme","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","xAxis","legendPosition","legendOffset","axisLeft","yAxis","enableLabel","animate","isInteractive","motionStiffness","motionDamping","legends","innerRadius","padAngle","cornerRadius","enableRadialLabels","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","enableSlicesLabels","slicesLabelsSkipAngle","slicesLabelsTextColor","defs","background","color","stagger","rotation","lineWidth","spacing","match","GraphPage","explanation","handlePause","MostActiveUsersGraphSettings","fullData","console","log","userAdditions","i","undefined","includes","bot","human","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","open","MostActiveUsers","event","MostActivePagesGraphSettings","pageAdditions","MostActivePages","UsersByMostEditsGraphSettings","UsersByMostEditsPage","target","RecentEditSizeSettings","RecentEditSize","require","alt","PieChart","class","CardDeck","App","exact","path","process","component","TestPage","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2MAAAA,EAAOC,QAAU,IAA0B,oC,oKCc5BC,E,iLATP,OACQ,yBAAKC,UAAU,cACV,wBAAIA,UAAU,wBAAuB,2BAAIC,KAAKC,MAAMC,QACpD,4BAAKF,KAAKC,MAAME,e,GALRC,IAAMC,W,0BC+CpBC,E,YA7Cb,WAAYL,GAAQ,IAAD,8BACjB,4CAAMA,KACDM,MAAQ,CAAEC,QAAS,EAAKP,MAAMO,SAFlB,E,sEAMjB,IAAIC,EAAaC,OAAOC,SAASC,KACjC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAOC,SAAR,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIC,KAAL,CACEC,GAAID,IACJE,GAAG,IACHnB,UACEU,EAAWU,SAAS,KAAO,mBAAqB,YAJpD,QASA,kBAACJ,EAAA,EAAIC,KAAL,CACEC,GAAID,IACJE,GAAG,QACHnB,UACEU,EAAWU,SAAS,SAAW,mBAAqB,YAJxD,QASA,kBAACJ,EAAA,EAAIC,KAAL,CACEC,GAAID,IACJE,GAAG,QACHnB,UACEU,EAAWU,SAAS,SAAW,mBAAqB,YAJxD,e,GA9Bcd,aCgBXe,E,iLAdb,OACC,yBAAKrB,UAAU,QAEd,wBAAIA,UAAWC,KAAKC,MAAMoB,OAASrB,KAAKC,MAAMqB,WAC9C,wBAAIvB,UAAWC,KAAKC,MAAMoB,OAASrB,KAAKC,MAAMsB,WAC9C,6BACA,kBAAC,IAAD,CAAML,GAAKlB,KAAKC,MAAMuB,SACpB,4BAAQC,KAAK,SAAS1B,UAAWC,KAAKC,MAAMyB,UAAY1B,KAAKC,MAAM0B,e,GAT1CtB,a,0BC8ChBuB,E,2MA3CbrB,MAAQ,CACPsB,KAAM,YACNC,UAAW,c,EAcTC,YAAc,WACjBC,IAAEC,KAAK,CACHC,IAAK,uFACLT,KAAM,MACNU,QAAS,SAASC,GACnBJ,IAAE,SAASK,KAAKL,IAAEA,IAAEI,GAAUE,KAAK,4BAA4BA,KAAK,2BAClEN,IAAE,SAASK,KAAKL,IAAEA,IAAEI,GAAUE,KAAK,yBAAyBA,KAAK,2BACjEN,IAAE,SAASK,KAAKL,IAAEA,IAAEI,GAAUE,KAAK,yBAAyBA,KAAK,2BACjEN,IAAE,SAASK,KAAKL,IAAEA,IAAEI,GAAUE,KAAK,gCAAgCA,KAAK,+B,mFAnBxD,IAAD,OACnBtC,KAAK+B,cACL/B,KAAKuC,WAAaC,aAChB,kBAAM,EAAKT,gBACX,O,6CAIFU,cAAczC,KAAKuC,c,+BAiBpB,OACC,yBAAKxC,UAAU,OACf,kBAAC2C,EAAA,EAAD,CAAWC,YAAU,GACnB,kBAACD,EAAA,EAAUE,KAAX,CAAgB7C,UAAU,yBAAwB,wBAAI8C,GAAG,QAAS7C,KAAKO,MAAMuB,WAAgB,sCAC7F,kBAACY,EAAA,EAAUE,KAAX,CAAiB7C,UAAU,uBAAsB,wBAAI8C,GAAG,QAAS7C,KAAKO,MAAMuB,WAAgB,sCAC5F,kBAACY,EAAA,EAAUE,KAAX,CAAiB7C,UAAU,yBAAwB,wBAAI8C,GAAG,QAAS7C,KAAKO,MAAMuB,WAAgB,sCAC9F,kBAACY,EAAA,EAAUE,KAAX,CAAiB7C,UAAU,wBAAuB,wBAAI8C,GAAG,QAAS7C,KAAKO,MAAMuB,WAAgB,mD,GAtC1EzB,a,iBCuETyC,E,YA/Db,WAAY7C,GAAQ,IAAD,8BACjB,4CAAMA,KAEDM,MAAQ,CAAEC,QAAS,EAAKP,MAAMO,SAHlB,E,sEAOjB,OACE,yBAAKT,UAAU,YACb,kBAAC,EAAD,CAAQS,QAASR,KAAKO,MAAMC,UAC5B,yBAAKT,UAAU,8DACrB,yBAAKA,UAAY,SACR,kBAAC,EAAD,CACEG,MAAM,gBACNC,SAAS,2EAGjB,yBAAKJ,UAAY,SACjB,yBAAKA,UAAW,OAChB,yBAAKA,UAAU,SACf,wBAAIA,UAAU,YAAW,kBAAC,IAAD,CAAiBgD,KAAMC,OAC1C,kBAAC,EAAD,CACE3B,MAAM,4BACfK,SAAS,mCACAJ,UAAU,WACnBC,UAAU,OACDI,QAAQ,OACRH,QAAQ,WAGhB,yBAAKzB,UAAU,SACd,wBAAIA,UAAU,cAAa,kBAAC,IAAD,CAAiBgD,KAAME,OAC7C,kBAAC,EAAD,CACE5B,MAAM,8BACfK,SAAS,qCACAJ,UAAU,WACnBC,UAAU,YACDI,QAAQ,YACRH,QAAQ,WAGhB,yBAAKzB,UAAU,SACf,wBAAIA,UAAU,aAAY,kBAAC,IAAD,CAAiBgD,KAAMG,OAC3C,kBAAC,EAAD,CACE7B,MAAM,6BACfK,SAAS,oCACAJ,UAAU,OACnBC,UAAU,OACDI,QAAQ,QACRH,QAAQ,2BAMnB,yBAAKzB,UAAY,2CACX,kBAAC,EAAD,Y,GAzDeM,a,QCVR8C,gB,yBCqBFC,EAAoB,4BAAAC,EAAAC,OAAA,uDACzBC,EAAU,SAACF,EAAGG,GAAJ,OAAUA,EAAEC,UAAYJ,EAAEI,WAUpCC,EAAQC,EATC,CACbC,OAAQ,QACRC,OAAQ,OACRC,KAAM,WACNC,OAAQ,mBACRC,QAAS,MACTC,gBAAiB,IACjBC,cAAe,KA9BC,GAiCfC,MAAK,SAAAC,GAAI,OAAIA,EAAKT,MAAMU,YACxBF,MAAK,SAAAT,GAAK,OAAIA,EAAMY,KAAKf,MAbG,kBAcxBG,GAdwB,sCAwCpBa,EAAyB,0BAAAlB,EAAAC,OAAA,uDAQ9BkB,EAAQb,EAPC,CACbC,OAAQ,QACRC,OAAQ,OACRC,KAAM,gBACNW,OAAQ,4BACRC,QAAS,OAnEO,GAqEuBP,MACvC,SAAAQ,GAAM,OAAIA,EAAOhB,MAAMiB,iBATW,kBAW7BJ,GAX6B,sCAiBzBK,EAAwB,0BAAAxB,EAAAC,OAAA,kEAAAD,EAAA,MACZkB,KADY,cAC7BO,EAD6B,QAG1BC,SAAQ,SAAAC,GACfA,EAAKC,MAAQC,KAAKC,IAAIH,EAAKI,OAASJ,EAAKK,QACzCL,EAAKnC,GAAKmC,EAAK9E,SAGjB4E,EAASR,MAAK,SAACjB,EAAGG,GAAJ,OAAUA,EAAEyB,MAAQ5B,EAAE4B,SARD,kBAU5BH,GAV4B,sCA4BxBQ,EAAqB,SAAMC,GAAN,uBAAAlC,EAAAC,OAAA,yDACMkC,EAAmBD,GADzB,mBACzBE,EADyB,KACVC,EADU,KAE1BC,EAAcF,EAActB,MAAK,SAAAsB,GAAa,OAClDG,EAAoBH,MAHU,WAAApC,EAAA,MAKlBsC,GALkB,+BAKLD,EALK,qEAerBG,EAAuB,SAAMN,GAAN,uBAAAlC,EAAAC,OAAA,yDACIkC,EAAmBD,GADvB,mBAC3BE,EAD2B,KACZC,EADY,KAE5BI,EAAcL,EAActB,MAAK,SAAA2B,GAAW,OAAIC,EAAWD,MAF/B,WAAAzC,EAAA,MAGpByC,GAHoB,+BAGPJ,EAHO,qEAoCvBF,EAAqB,SAAAD,GAChC,IAAIS,EAAe,IAAIC,KACjBP,EAAeM,EAAaE,cAelC,OAdAF,GAA8B,IAC9BA,EAAe,IAAIC,KAAKD,GAAcE,cAa/B,CAHevC,EATP,CACbC,OAAQ,QACRC,OAAQ,OACRC,KAAM,gBACNW,OAAQ,2BACRC,QAAS,MACTyB,QAASH,EACTI,MAAOb,GAzKS,GA2K+BpB,MAC/C,SAAAC,GAAI,OAAIA,EAAKT,MAAMiB,iBAEEc,IAUZW,EAAgB,SAAAC,GAkB3B,OApEwB,SAAOC,EAAUC,EAAOC,GAAxB,mBAAApD,EAAAC,OAAA,uDACpBqB,EAAS,GACT+B,EAAU,KACcA,EAAxBF,aAAiBG,MAAiBC,EAAYJ,EA1I7B,IA2IN,CAAC,CAACA,IACXK,EAAUH,EAAQI,KAAI,SAAMC,GAAN,eAAA1D,EAAAC,OAAA,uDACpB0D,EAAcD,EAAME,KAAK,KAC/BR,EAAOF,GAAYS,EAFO,kBAGnBrD,EAAM8C,EA9IG,GA+IbtC,MAAK,SAAAC,GAAI,OAAIO,EAAOuC,KAAK9C,MACzB+C,OAAM,SAAAC,GAAG,OAAI,SALU,wCALJ,WAAA/D,EAAA,MAYlBgE,QAAQC,IAAIT,IAZM,gCAajBlC,GAbiB,qCA0DT4C,CAPH,UAOmBjB,EANhB,CACb1C,OAAQ,QACRC,OAAQ,OACRC,KAAM,QACN0D,OAAQ,WAEwCrD,MAAK,SAAAC,GACrD,IAAMqD,EAAS,GAOf,OANArD,EAAKW,SAAQ,SAAA2C,GACGA,EAAY/D,MAAMD,MAC1BqB,SAAQ,SAAA4C,GACRA,EAAQF,SAAQA,EAAOE,EAAQC,MAAQD,EAAQF,cAGhDA,MAcL9D,EAAQ,SAARA,EAAe8C,EAAQoB,GAAf,iBAAAxE,EAAAC,OAAA,gEAEJwE,EAAe,IAAIC,gBAAgBtB,GAAQuB,WAC3C9F,EAAM+F,sCAAqBH,EAAe,YAHtC,WAAAzE,EAAA,MAIG6E,MAAMhG,GAAKiC,MAAK,SAAA/B,GAAQ,OAAIA,EAAS+F,WAJxC,2EAMA,IAANN,EANM,uDAAAxE,EAAA,MAOGM,EAAM8C,EAAQoB,EAAI,IAPrB,kGA8BRjC,EAAsB,SAAAH,GAC1B,IACM2C,EAAc,GACpB3C,EAAcV,SAAQ,SAAAsD,GACpB,IAAMC,EAAUF,EAAYC,EAAOnI,QAAU,EAC7CkI,EAAYC,EAAOnI,OAASoI,EAAU,KAExC,IAAMC,EAASC,OAAOC,QAAQL,GAAatB,KAAI,yCAAoB,CACjEjE,GAD6C,KAE7CyF,QAF6C,SAK/C,OADAC,EAAOjE,MAVS,SAACjB,EAAGG,GAAJ,OAAUA,EAAE8E,QAAUjF,EAAEiF,WAWjCC,GASHxC,EAAa,SAAAN,GACjB,IAAMlC,EAAU,SAACF,EAAGG,GAAJ,OAAUA,EAAE8E,QAAUjF,EAAEiF,SAClCI,EAAa,GACnBjD,EAAcV,SAAQ,SAAAsD,GACpB,IAAMM,EAAON,EAAOM,KACdC,EAAaF,EAAWC,IAAS,EACvCD,EAAWC,GAAQC,EAAa,KAElC,IAAMlF,EAAQ8E,OAAOC,QAAQC,GAAY5B,KAAI,yCAA0B,CACrE+B,SAD2C,KAE3CP,QAF2C,SAIvChC,EAAY5C,EAAMoD,KAAI,qBAAG+B,YAK/B,OAJAxC,EAAcC,GAAWnC,MAAK,SAAAsD,GAC5B/D,EAAMqB,SAAQ,SAAA4C,GAAO,OAAKA,EAAQF,OAASA,EAAOE,EAAQkB,aAC1DnF,EAAMY,KAAKf,MAENG,GAWHkD,EAAc,SAACkC,EAAOC,GAE1B,IADA,IAAMrC,EAAU,GACToC,EAAME,OAAS,GACpBtC,EAAQQ,KAAK4B,EAAMG,OAAO,EAAGF,IAE/B,OAAOrC,GC5QMwC,E,WAtBb,WAAYC,GAAW,oBACrBnJ,KAAKoJ,QAAU,GACfpJ,KAAKmJ,SAAWA,EAChBnJ,KAAKuF,eAAgB,IAAIU,MAAOC,c,sDAGvB,IAAD,SAC8BV,EAAmBxF,KAAKuF,eADtD,mBACDE,EADC,KACc4D,EADd,KAER5D,EAActB,MAAK,SAAAiF,GACjB,IAAME,EAAYF,EAAQtC,KAAI,SAAAuB,GAAM,OAAIA,EAAOM,QAC/CtC,EAAciD,GAAWnF,MAAK,SAAAsD,GAAM,OAClC2B,EAAQrE,SAAQ,SAAAsD,GACdA,EAAOZ,OAASA,EAAOY,EAAOM,MAC9B,EAAKS,QAAQG,QAAQlB,GACjB,EAAKe,QAAQJ,OAAS,EAAKG,UAAU,EAAKC,QAAQI,eAI5DxJ,KAAKuF,cAAgB8D,M,YCiBzB,IAAMI,EAAoB,SAAAC,GAAS,OACjCxE,KAAKyE,MACHzE,KAAKC,KAAI,IAAIc,MAAO2D,UAAY,IAAI3D,KAAKyD,GAAWE,WAAa,MAGtDC,EA7Cf,WAAiB,IAAD,EACKC,mBAAS,IAAIZ,EAAS,KAAlCa,EADO,sBAEcD,oBAAS,GAFvB,mBAEPE,EAFO,KAECC,EAFD,OAG4BH,mBAAS,CACjDtD,MAAO,KAJK,mBAGPf,EAHO,KAGQyE,EAHR,KAmBd,OAZAC,qBAAU,WACR,IAAMC,EAAU5H,aAAY,WACrBwH,GAAQD,EAASK,UACtBF,EAAiB,CAAE1D,MAAOuD,EAASX,YAClC,KACH,OAAO,kBAAM3G,cAAc2H,MAC1B,CAACL,EAAUC,IAOZ,6BACE,wBAAIjK,UAAU,uBAAd,wBACA,0BAAMA,UAAU,YAAYsK,SAPhC,WACEJ,GAAU,SAAAK,GAAS,OAAKA,OAOpB,+BACE,2BAAO7I,KAAK,aADd,YAIF,wBAAI1B,UAAU,cACX0F,EAAce,MAAMM,KAAI,SAAC9B,EAAMuF,GAAP,OACvB,wBAAIxK,UAAU,4BAA4ByK,IAAKD,GAA/C,eACWvF,EAAK2D,KADhB,mBAC+B3D,EAAKvD,KADpC,eAEIuD,EAAK9E,MAFT,YAGMuJ,EAAkBzE,EAAKyF,WAH7B,uB,SCJKC,E,YA1Bb,WAAYzK,GAAQ,IAAD,8BACjB,4CAAMA,KAoBR0K,QAAU,WACR,EAAKpK,MAAMC,QAAQ0G,KAAK,EAAK3G,MAAMqK,WApBnC,EAAKrK,MAAQ,CACXC,QAAS,EAAKP,MAAMO,QACpBN,MAAO,EAAKD,MAAMC,MAClB0K,SAAU,EAAK3K,MAAM2K,SACrBC,MAAO,EAAK5K,MAAM4K,OANH,E,sEAWjB,OACE,kBAACC,EAAA,EAAD,CAAMH,QAAS3K,KAAK2K,QAASI,IAAI,IAAIhL,UAAU,cAC7C,kBAAC+K,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYlL,UAAU,cAAcC,KAAKO,MAAML,OAC9CF,KAAKO,MAAMsK,Y,GAhBExK,a,0BCkIT6K,E,YAjIb,WAAYjL,GAAQ,IAAD,8BACjB,4CAAMA,KAURkL,QAAU,SAASC,EAAOlJ,GACxB,OACE,yBAAKnC,UAAU,oBACb,4BACEsL,IAAKnJ,EAAMkJ,EAAME,WACjBvL,UAAU,SACVG,MAAM,uBAjBK,EAuBnBqL,SAAW,8BAAAlI,EAAAC,OAAA,uDACLkI,EAAU,EAAKvL,MAAMwL,SAASD,QAAQE,KAA5B,gBADL,WAAArI,EAAA,MAEQmI,KAFR,OAELpH,EAFK,OAGLuH,EAAUvH,EAAKwH,MAAM,EAAG,EAAKrL,MAAMsL,UAAY,GAAK,IACxD,EAAKC,SAAS,CACZC,QAAQ,EACR3H,KAAMuH,IANC,sCAvBQ,EAiCnBvB,QAAU,0BAAA/G,EAAAC,OAAA,mDACH,EAAKrD,MAAM+J,OADR,uBAEFgC,EAAS,EAAK/L,MAAMwL,SAASQ,cAAcP,KAAlC,gBAFP,WAAArI,EAAA,MAGA2I,KAHA,sCA/BR,EAAKzL,MAAQ,CACXwL,QAAQ,EACR3H,KAAM,KACNyH,UAAW,EAAK5L,MAAM4L,WAGxB,EAAKN,WARY,E,iFAwCE,IAAD,OAClBvL,KAAKkM,gBAAkB1J,aAAY,oBAAAa,EAAAC,OAAA,kEAAAD,EAAA,MAC3B,EAAK+G,WADsB,uCAEhCpK,KAAKC,MAAMwL,SAASU,e,+BAIvB,IAAIC,EAAS,GACTC,EAAQ,KACRC,EAAY,GACZ3B,EAAU,KACV4B,GAAY,EACZpB,EAAU,KACVqB,EAAS,GACTC,EAAUzM,KAAKC,MAAMwL,SAASgB,QAC9BzM,KAAKC,MAAMwL,SAASgB,QACpB,QAwBJ,OAvBIzM,KAAKO,MAAMsL,WAEXO,EADEpM,KAAKC,MAAMwL,SAASW,OACbpM,KAAKC,MAAMwL,SAASW,OAEpB,CAAEM,IAAK,EAAGC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAE9C7M,KAAKC,MAAMwL,SAASe,SACtBA,EAAS,CAACxM,KAAKC,MAAMwL,SAASe,SAEhCH,GAAQ,EACRC,EAAY,uBACRtM,KAAKC,MAAMwL,SAASd,UACtBA,EAAU3K,KAAKC,MAAMwL,SAASd,QAC9B4B,GAAY,GAEVvM,KAAKC,MAAMwL,SAASN,UACtBA,EAAUnL,KAAKC,MAAMwL,SAASN,QAAQO,KAAK1L,SAG7CoM,EAAS,CAAEM,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAC9CR,GAAQ,EACRC,EAAY,wBAGZ,6BACItM,KAAKO,MAAMwL,OAGX,yBAAKhM,UAAWuM,GACd,kBAAC,IAAD,CACElI,KAAMpE,KAAKO,MAAM6D,KACjB0I,KAAM9M,KAAKC,MAAMwL,SAASqB,KAC1BC,QAAS/M,KAAKC,MAAMwL,SAASlB,MAC7B6B,OAAQA,EACRY,QAAS,GACTC,OAAQ,CAAEC,OAAQlN,KAAKC,MAAMwL,SAASwB,QACtCR,QAASA,EACTU,YAAa,CAAEC,KAAM,QAASC,UAAW,CAAC,CAAC,SAAU,OACrDC,QAAS,KACTC,UAAW,KACXC,WAAY,CACVC,SAAU,EACVC,YAAa,EACbC,aAAc,GACdnB,OAAQxM,KAAKC,MAAMwL,SAASmC,MAC5BC,eAAgB,QAChBC,aAAc,IAEhBC,SAAU,CACRN,SAAU,EACVC,YAAa,EACbC,aAAc,EACdnB,OAAQxM,KAAKC,MAAMwL,SAASuC,MAC5BH,eAAgB,SAChBC,cAAe,IAEjBG,YAAa5B,EACb1B,QAAS4B,EAAY5B,EAAU,aAC/BuD,QAAS7B,EACT8B,cAAe9B,EACf+B,gBAAiB,GACjBC,cAAe,GACflD,QAASA,EACTmD,QAAS9B,KArCb,kB,GApFmBnM,a,kBCgJd6K,E,YA/Ib,WAAYjL,GAAQ,IAAD,8BACjB,4CAAMA,KAURkL,QAAU,SAASC,EAAOlJ,GACxB,OACE,yBAAKnC,UAAU,oBACb,4BACEsL,IAAKnJ,EAAMkJ,EAAMvI,GACjB9C,UAAU,SACVG,MAAM,uBAjBK,EAuBnBqL,SAAW,8BAAAlI,EAAAC,OAAA,uDACLkI,EAAU,EAAKvL,MAAMwL,SAASD,QAAQE,KAA5B,gBADL,WAAArI,EAAA,MAEQmI,KAFR,OAELpH,EAFK,OAGLuH,EAAUvH,EAAKwH,MAAM,EAAG,EAAKrL,MAAMsL,UAAY,GAAK,IACxD,EAAKC,SAAS,CACZC,QAAQ,EACR3H,KAAMuH,IANC,sCAvBQ,EAiCnBvB,QAAU,oBAAA/G,EAAAC,OAAA,gDACH,EAAKrD,MAAM+J,QACd,EAAKuB,WAFC,sCA/BR,EAAKhL,MAAQ,CACXwL,QAAQ,EACR3H,KAAM,KACNyH,UAAW,EAAK5L,MAAM4L,WAGxB,EAAKN,WARY,E,iFAuCE,IAAD,OAClBvL,KAAKkM,gBAAkB1J,aAAY,oBAAAa,EAAAC,OAAA,kEAAAD,EAAA,MAC3B,EAAK+G,WADsB,uCAEhCpK,KAAKC,MAAMwL,SAASU,e,+BAGf,IAAD,EACHC,EAAS,GACTC,EAAQ,KACRC,EAAY,GACZ3B,EAAU,KACVQ,EAAU,KAgBd,OAfInL,KAAKO,MAAMsL,WACbO,EAAS,CAAEM,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACjDR,GAAQ,EACRC,EAAY,uBACRtM,KAAKC,MAAMwL,SAASd,UACtBA,EAAU3K,KAAKC,MAAMwL,SAASd,SAE5B3K,KAAKC,MAAMwL,SAASN,UACtBA,EAAUnL,KAAKC,MAAMwL,SAASN,QAAQO,KAAK1L,SAG7CoM,EAAS,CAAEM,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAC9CR,GAAQ,EACRC,EAAY,wBAGZ,6BACItM,KAAKO,MAAMwL,OAGX,yBAAKhM,UAAWuM,GACd,kBAAC,KAAD,GACElI,KAAMpE,KAAKO,MAAM6D,KACjBgI,OAAQA,EACRmC,YAAa,GACbC,SAAU,EACVC,aAAc,EACdxB,OAAQ,CAAEC,OAAQ,UAClBwB,mBAAoBrC,EACpBsC,sBAAuB,GACvBC,wBAAyB,EACzBC,sBAAsB,UACtBC,uBAAwB,EACxBC,+BAAgC,GAChCC,iCAAkC,GAClCC,4BAA6B,EAC7BC,sBAAuB,CAAE9B,KAAM,SAC/B+B,mBAAoB9C,EACpB+C,sBAAuB,GACvBC,sBAAsB,UACtBnB,SAAS,EACTE,gBAAiB,GACjBC,cAAe,GACfiB,KAAM,CACJ,CACEzM,GAAI,OACJpB,KAAM,cACN8N,WAAY,UACZC,MAAO,2BACPzG,KAAM,EACNiE,QAAS,EACTyC,SAAS,GAEX,CACE5M,GAAI,QACJpB,KAAM,eACN8N,WAAY,UACZC,MAAO,2BACPE,UAAW,GACXC,UAAW,EACXC,QAAS,KAGbjF,QAASA,EACTQ,QAASA,GA3CX,qBA4CQ,CACJ,CACEtI,GAAI,QACJpB,KAAM,eACN8N,WAAY,UACZC,MAAO,2BACPE,UAAW,GACXC,UAAW,EACXC,QAAS,MApDf,qBAuDQ,CACJ,CACEC,MAAO,CACLpO,KAAM,QAERoB,GAAI,WA5DV,KAHF,kB,GAtEmBxC,aCwCdyP,G,YAvCb,WAAY7P,GAAQ,IAAD,8BACjB,4CAAMA,KAEDM,MAAQ,CACXC,QAAS,EAAKP,MAAMO,QACpBN,MAAO,EAAKD,MAAM2H,MALH,E,sEAUjB,OACE,yBAAK7H,UAAU,YACb,kBAAC,EAAD,CAAQS,QAASR,KAAKO,MAAMC,UAClC,yBAAKT,UAAY,OACX,yBAAKA,UAAU,WACb,4BAAKC,KAAKO,MAAML,OAChB,4BACA,2BAAIF,KAAKC,MAAM8P,aACf,2BACE,0BAAM1F,SAAUrK,KAAKC,MAAM+P,aACzB,+BACE,2BACEvO,KAAK,WACLoB,GAAG,SACH+E,KAAK,SACL3C,MAAOjF,KAAKC,MAAM+J,SACjB,IACF,aAKRhK,KAAKC,MAAM4K,Y,GAjCIxK,aCEX4P,GAA+B,CAC1CzE,QAAS,gCAAAnI,EAAAC,OAAA,kEAAAD,EAAA,MAC0BwC,GAC/B,IAAII,MAAOC,gBAFN,0CACF9B,EADE,KACIsB,EADJ,KAIPtB,EAAOA,EAAKwH,MAAM,EAAG,IACrB5L,KAAK8L,SAAS,CACZoE,SAAU9L,EACVmB,cAAeG,IAPV,kBASAtB,GATA,gDAWT+H,YAAa,IACbF,cAAe,sCAAA5I,EAAAC,OAAA,kEAAAD,EAAA,MACoBwC,EAC/B7F,KAAKO,MAAMgF,gBAFA,mCACRnB,EADQ,KACFsB,EADE,KAIb1F,KAAK8L,SAAS,CAAEvG,cAAeG,IAC/ByK,QAAQC,IAAIhM,GACZ+L,QAAQC,IAAIpQ,KAAKO,MAAM6D,MACvBA,EAAOA,EAAKwH,MAAM,EAAG,IACjB5L,KAAKO,MAAM2P,UACTA,EAAWlQ,KAAKO,MAAM2P,SAC1B9L,EAAKW,SAAQ,SAAAsL,GAEX,IADA,IAAI9F,GAAS,EACJ+F,EAAI,EAAGA,EAAIJ,EAASlH,OAAQsH,GAAK,EACpCJ,EAASI,GAAGzH,WAAawH,EAAcxH,WACzC0B,EAAQ+F,IAGG,IAAX/F,EACF2F,EAAS3F,GAAOjC,SAAW+H,EAAc/H,QAEzC4H,EAAShJ,KAAKmJ,MAGlBH,EAAS5L,MAAK,SAACjB,EAAGG,GAAJ,OAAUA,EAAE8E,QAAUjF,EAAEiF,WACtC4H,EAAStE,MAAM,EAAG,KACdD,EAAUuE,EAAStE,MAAM,EAAG5L,KAAKO,MAAMsL,UAAY,GAAK,KACpD9G,SAAQ,SAAA4D,QACM4H,IAAhB5H,EAAKlB,QAAwBkB,EAAKlB,OAAO+I,SAAS,QACpD7H,EAAK8H,IAAM9H,EAAKL,QAChBK,EAAK+H,MAAQ,IAEb/H,EAAK8H,IAAM,EACX9H,EAAK+H,MAAQ/H,EAAKL,YAItBtI,KAAK8L,SAAS,CAAEoE,SAAUA,EAAU9L,KAAMuH,MAEtCA,EAAUvH,EAAKwH,MAAM,EAAG5L,KAAKO,MAAMsL,UAAY,GAAK,IAExD7L,KAAK8L,SAAS,CAAE1H,KAAMuH,KAxCX,iDA2CfmB,KAAM,CAAC,MAAO,SACdvC,MAAO,WACPqD,MAAO,WACPI,MAAO,UACPf,OAAQ,OACRR,QAAS,KACTD,OAAQ,CACNmE,SAAU,OACVC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,UAAW,IACXC,WAAY,GACZC,cAAe,gBACfC,YAAa,IACbC,WAAY,GACZC,QAAS,CACP,CACEC,GAAI,QACJnQ,MAAO,CACLgQ,YAAa,MAKrBjF,OAAQ,CAAEM,IAAK,EAAGC,MAAO,IAAKC,OAAQ,GAAIC,KAAM,IAChDlC,QAAS,SAASS,GAChB1K,OAAO+Q,KACL,sCAAwCrG,EAAME,WAC9C,WAGJH,QAAS,SAASC,GAChB,OAAOpL,KAAKmL,QAAQC,EAAO,yCAuChBsG,G,YAlCb,WAAYzR,GAAQ,IAAD,8BACjB,4CAAMA,KAOR+P,YAAc,SAAA2B,GACZ,IAAI3H,EAAS,EAAKzJ,MAAMyJ,OACxB,EAAK8B,SAAS,CAAE9B,QAASA,KARzB,EAAKzJ,MAAQ,CACXC,QAAS,EAAKP,MAAMO,QACpBwJ,QAAQ,GAJO,E,sEAcjB,OACE,kBAAC,GAAD,CACEgG,YAAahQ,KAAKgQ,YAClBhG,OAAQhK,KAAKO,MAAMyJ,OACnB+F,YACE,kJAGFlF,MACE,kBAAC,EAAD,CACEgB,WAAW,EACXJ,SAAUwE,GACVjG,OAAQhK,KAAKO,MAAMyJ,SAGvBpC,KAAM,0B,GA9BgBvH,aChGjBuR,GAA+B,CAC1CpG,QAAS,gCAAAnI,EAAAC,OAAA,kEAAAD,EAAA,MAC0BiC,GAC/B,IAAIW,MAAOC,gBAFN,0CACF9B,EADE,KACIsB,EADJ,KAIPtB,EAAOA,EAAKwH,MAAM,EAAG,IACrB5L,KAAK8L,SAAS,CACZoE,SAAU9L,EACVmB,cAAeG,IAPV,kBASAtB,GATA,gDAWT+H,YAAa,IACbF,cAAe,sCAAA5I,EAAAC,OAAA,kEAAAD,EAAA,MACoBiC,EAC/BtF,KAAKO,MAAMgF,gBAFA,mCACRnB,EADQ,KACFsB,EADE,KAIb1F,KAAK8L,SAAS,CAAEvG,cAAeG,IAC/BtB,EAAOA,EAAKwH,MAAM,EAAG,IACjB5L,KAAKO,MAAM2P,UACTA,EAAWlQ,KAAKO,MAAM2P,SAC1B9L,EAAKW,SAAQ,SAAA8M,GAEX,IADA,IAAItH,GAAS,EACJ+F,EAAI,EAAGA,EAAIJ,EAASlH,OAAQsH,GAAK,EACpCJ,EAASI,GAAGzN,KAAOgP,EAAchP,KACnC0H,EAAQ+F,IAGG,IAAX/F,EACF2F,EAAS3F,GAAOjC,SAAWuJ,EAAcvJ,QAEzC4H,EAAShJ,KAAK2K,MAGlB3B,EAAS5L,MAAK,SAACjB,EAAGG,GAAJ,OAAUA,EAAE8E,QAAUjF,EAAEiF,WACtC4H,EAAStE,MAAM,EAAG,IACdD,EAAUuE,EAAStE,MAAM,EAAG5L,KAAKO,MAAMsL,UAAY,GAAK,IAE5D7L,KAAK8L,SAAS,CAAEoE,SAAUA,EAAU9L,KAAMuH,MAEtCA,EAAUvH,EAAKwH,MAAM,EAAG5L,KAAKO,MAAMsL,UAAY,GAAK,IAExD7L,KAAK8L,SAAS,CAAE1H,KAAMuH,KA7BX,gDAgCfmB,KAAM,CAAC,WACPvC,MAAO,KACPqD,MAAO,QACPI,MAAO,UACPf,OAAQ,UACRtC,QAAS,SAASS,GAChB1K,OAAO+Q,KAAK,iCAAmCrG,EAAME,WAAY,WAEnEH,QAAS,SAASC,GAChB,OAAOpL,KAAKmL,QAAQC,EAAO,oCAuChB0G,G,YAlCb,WAAY7R,GAAQ,IAAD,8BACjB,4CAAMA,KAOR+P,YAAc,SAAA2B,GACZ,IAAI3H,EAAS,EAAKzJ,MAAMyJ,OACxB,EAAK8B,SAAS,CAAE9B,QAASA,KARzB,EAAKzJ,MAAQ,CACXC,QAAS,EAAKP,MAAMO,QACpBwJ,QAAQ,GAJO,E,sEAcjB,OACE,kBAAC,GAAD,CACEgG,YAAahQ,KAAKgQ,YAClBhG,OAAQhK,KAAKO,MAAMyJ,OACnB+F,YACE,0IAGFlF,MACE,kBAAC,EAAD,CACEgB,WAAW,EACXJ,SAAUmG,GACV5H,OAAQhK,KAAKO,MAAMyJ,SAGvBpC,KAAM,0B,GA9BgBvH,aC1DjB0R,GAAgC,CAC3CvG,QAAS,0BAAAnI,EAAAC,OAAA,kEAAAD,EAAA,MACUD,KADV,cACHgB,EADG,yBAEAA,GAFA,sCAIT+H,YAAa,IACbF,cAAe,WACbjM,KAAKuL,YAEPuB,KAAM,CAAC,aACPvC,MAAO,OACPqD,MAAO,QACPI,MAAO,aACPf,OAAQ,SACR9B,QAAS,SAASC,GAChB,OAAOpL,KAAKmL,QAAQC,EAAO,yCAkChB4G,G,YA7Bb,WAAY/R,GAAQ,IAAD,8BACjB,4CAAMA,KAOR+P,YAAc,SAAA2B,GACZ,EAAK7F,SAAS,CAAE9B,OAAQ2H,EAAMM,OAAOhN,SAPrC,EAAK1E,MAAQ,CACXC,QAAS,EAAKP,MAAMO,QACpBwJ,QAAQ,GAJO,E,sEAajB,OACE,kBAAC,GAAD,CACEgG,YAAahQ,KAAKgQ,YAClBhG,OAAQhK,KAAKO,MAAMyJ,OACnBa,MACE,kBAAC,EAAD,CACEgB,WAAW,EACXJ,SAAUsG,GACV/H,OAAQhK,KAAKO,MAAMyJ,SAGvBpC,KAAM,4B,GAzBqBvH,aCnBtB6R,GAAyB,CACpC1G,QAAS3G,EACTsH,YAAa,IACbF,cAAepH,EACfI,MAAO,SAAAD,GACLE,KAAKC,IAAIH,EAAKI,OAASJ,EAAKK,SAE9BoH,QAAS,OACTQ,OAAQ,UACRtC,QAAS,SAASS,GAChB1K,OAAO+Q,KAAK,iCAAmCrG,EAAMvI,GAAI,WAE3DsI,QAAS,SAASC,GAChB,OAAOpL,KAAKmL,QAAQC,EAAO,oCAgDhB+G,G,YA3Cb,WAAYlS,GAAQ,IAAD,8BACjB,4CAAMA,KAOR+P,YAAc,SAAA2B,GACZ,IAAI3H,EAAS,EAAKzJ,MAAMyJ,OACxB,EAAK8B,SAAS,CAAE9B,QAASA,KARzB,EAAKzJ,MAAQ,CACXC,QAAS,EAAKP,MAAMO,QACpBwJ,QAAQ,GAJO,E,sEAcjB,OACE,kBAAC,GAAD,CACEgG,YAAahQ,KAAKgQ,YAClBhG,OAAQhK,KAAKO,MAAMyJ,OACnB+F,YACE,6BACG,6MAED,2BACE,yBACEhQ,UAAU,SACVsL,IAAK+G,EAAQ,KACbC,IAAI,aAKZxH,MACE,kBAACyH,EAAD,CACEzG,WAAW,EACXJ,SAAUyG,GACVlI,OAAQhK,KAAKO,MAAMyJ,SAGvBpC,KAAM,6B,GAvCevH,aCwEdyC,G,YAhFb,WAAY7C,GAAQ,IAAD,8BACjB,4CAAMA,KAEDM,MAAQ,CACXC,QAAS,EAAKP,MAAMO,SAJL,E,sEASjB,OACE,yBAAKT,UAAU,YACb,kBAAC,EAAD,MACA,yBAAKwS,MAAM,sCACT,yBAAKA,MAAM,0CACT,yBAAKA,MAAM,iBACT,kBAAC,EAAD,QAGJ,yBAAKA,MAAM,0CACT,yBAAKxS,UAAU,kBACb,kBAACyS,EAAA,EAAD,CAAUzS,UAAU,QAClB,kBAAC,EAAD,CACEG,MAAM,sBACN0K,SAAS,sBACTpK,QAASR,KAAKO,MAAMC,QACpBqK,MACE,kBAAC,EAAD,CACEb,QAAQ,EACR6B,WAAW,EACXJ,SAAUsG,OAIhB,kBAAC,EAAD,CACE7R,MAAM,oBACN0K,SAAS,oBACTpK,QAASR,KAAKO,MAAMC,QACpBqK,MACE,kBAAC,EAAD,CACEb,QAAQ,EACR6B,WAAW,EACXJ,SAAUwE,QAKlB,kBAACuC,EAAA,EAAD,CAAUzS,UAAU,QAClB,kBAAC,EAAD,CACEG,MAAM,oBACN0K,SAAS,oBACTpK,QAASR,KAAKO,MAAMC,QACpBqK,MACE,kBAAC,EAAD,CACEb,QAAQ,EACR6B,WAAW,EACXJ,SAAUmG,OAIhB,kBAAC,EAAD,CACE1R,MAAM,uBACN0K,SAAS,mBACTpK,QAASR,KAAKO,MAAMC,QACpBqK,MACE,kBAACyH,EAAD,CACEtI,QAAQ,EACR6B,WAAW,EACXJ,SAAUyG,gB,GApET7R,a,OC4BRoS,OA1Bf,WACE,OACE,yBAAK1S,UAAU,OACb,kBAAC,IAAD,CAAQS,QAASA,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEkS,OAAK,EACLC,KAAMC,yBACNC,UAAW/P,IAEb,kBAAC,IAAD,CAAO4P,OAAK,EAACC,KAAK,QAAQE,UAAWC,KACrC,kBAAC,IAAD,CACEJ,OAAK,EACLC,KAAK,uBACLE,UAAWb,KAEb,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,qBAAqBE,UAAWnB,KAClD,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,oBAAoBE,UAAWV,KACjD,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,qBAAqBE,UAAWf,KAClD,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,QAAQE,UAAW3J,QCtB3B6J,QACW,cAA7BrS,OAAOC,SAASqS,UAEe,UAA7BtS,OAAOC,SAASqS,UAEhBtS,OAAOC,SAASqS,SAASnD,MACvB,2DCZNoD,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpP,MAAK,SAAAqP,GACjCA,EAAaC,kB","file":"static/js/main.3256b88f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/legend.ee93b5bb.svg\";","import React from 'react'\r\n\r\n\r\nclass TitleContainer extends React.Component {\r\n    render() {\r\n        return(\r\n                <div className=\" text-left\">\r\n                     <h1 className=\"text-left  display-3\"><b>{this.props.title}</b></h1>\r\n                     <h4>{this.props.subtitle}</h4  >\r\n                  </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleContainer\r\n","import React, { Component } from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass NavbarLocal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { history: this.props.history }\r\n  }\r\n  render() {\r\n    // var isActive = this.context.router.route.location.pathname\r\n    let activePage = window.location.href\r\n    return (\r\n      <Navbar>\r\n        <Navbar.Collapse>\r\n          <Nav>\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/\"\r\n              className={\r\n                activePage.endsWith('/') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Home\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/page\"\r\n              className={\r\n                activePage.endsWith('/page') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Page\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/feed\"\r\n              className={\r\n                activePage.endsWith('/feed') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Feed\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavbarLocal\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass HomeNavContainer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"ting\">\r\n\t\t\t\r\n\t\t\t\t<h2 className={this.props.style}>{ this.props.btnTitle1 }</h2>\r\n\t\t\t\t<h2 className={this.props.style}>{ this.props.btnTitle2 }</h2>\r\n\t\t\t\t<br/>\t\r\n\t\t\t\t<Link to={ this.props.btnLink }>\r\n\t\t\t\t\t <button type=\"button\" className={this.props.btnStyle}>{ this.props.btnText }</button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default HomeNavContainer;\r\n","import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {ListGroup} from 'react-bootstrap';\r\nimport $ from 'jquery';\r\n\r\nclass HomeStats extends Component {\r\n\r\n\t state = {\r\n\t\t text: 'something',\r\n\t\t errorCode: 'Loading...',\r\n\t }\r\n\r\n\t componentDidMount() {\r\n\t  this.updateStats();\r\n\t  this.intervalID = setInterval(\r\n\t    () => this.updateStats(),\r\n\t    5000\r\n\t  );\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t  clearInterval(this.intervalID);\r\n\t}\r\n\r\n     updateStats = () => {\r\n\t\t$.ajax({\r\n  \t\t  url: \"https://cors-anywhere.herokuapp.com/https://www.wikidata.org/wiki/Special:Statistics\",\r\n  \t\t  type: 'GET',\r\n  \t\t  success: function(response) {\r\n\t\t\t  $(\"#div1\").html($($(response).find('.mw-statistics-articles')).find('.mw-statistics-numbers'));\r\n\t  \t\t  $(\"#div2\").html($($(response).find('.mw-statistics-edits')).find('.mw-statistics-numbers'));\r\n\t  \t\t  $(\"#div3\").html($($(response).find('.mw-statistics-users')).find('.mw-statistics-numbers'));\r\n\t  \t\t  $(\"#div4\").html($($(response).find('.mw-statistics-users-active')).find('.mw-statistics-numbers'));\r\n\t\t  }\r\n  \t   });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"row\">\r\n\t\t\t<ListGroup horizontal>\r\n\t\t\t  <ListGroup.Item className=\"list-group-item-black\"><h1 id=\"div1\">{ this.state.errorCode }</h1><h1>Items</h1></ListGroup.Item>\r\n\t\t\t  <ListGroup.Item  className=\"list-group-item-red\"><h1 id=\"div2\">{ this.state.errorCode }</h1><h1>Edits</h1></ListGroup.Item>\r\n\t\t\t  <ListGroup.Item  className=\"list-group-item-green\"><h1 id=\"div3\">{ this.state.errorCode }</h1><h1>Users</h1></ListGroup.Item>\r\n\t\t\t  <ListGroup.Item  className=\"list-group-item-blue\"><h1 id=\"div4\">{ this.state.errorCode }</h1><h1>Active Users</h1></ListGroup.Item>\r\n\t\t\t</ListGroup>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default HomeStats;\r\n","import React, { Component } from 'react'\r\nimport TitleContainer from '../Components/TitleContainer'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Navbar from '../Components/Navbar'\r\nimport HomeNavContainer from '../Components/HomeNavContainer'\r\nimport HomeStatsContainer from '../Components/HomeStats'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = { history: this.props.history }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar history={this.state.history} />\r\n        <div className=\"HomePageContent row margin-right: -15px margin-left: -15px\">\r\n\t\t<div className = \"col-5\">\r\n           <TitleContainer\r\n             title=\"Wikidata Live\"\r\n             subtitle=\"A web app to visualise recent changes to Wikidata in quasi real time.\"\r\n           ></TitleContainer>\r\n\t\t   </div>\r\n\t\t   <div className = \"col-7\">\r\n\t\t   <div className= \"row\">\r\n\t\t   <div className=\"col-4\">\r\n\t\t   <h1 className=\"text-red\"><FontAwesomeIcon icon={faBars}/></h1>\r\n           <HomeNavContainer\r\n             style=\"font-weight-bold text-red\"\r\n\t\t\t btnStyle=\"align-bottom btn btn-outline-red\"\r\n             btnTitle1=\"Wikidata\"\r\n\t\t\t btnTitle2=\"Feed\"\r\n             btnText=\"Feed\"\r\n             btnLink=\"/feed\"\r\n           ></HomeNavContainer>\r\n\t\t   </div>\r\n\t\t   <div className=\"col-4\">\r\n\t\t    <h1 className=\"text-green\"><FontAwesomeIcon icon={faChartLine}/></h1>\r\n           <HomeNavContainer\r\n             style=\"font-weight-bold text-green\"\r\n\t\t\t btnStyle=\"align-bottom btn btn-outline-green\"\r\n             btnTitle1=\"Wikidata\"\r\n\t\t\t btnTitle2=\"Dashboard\"\r\n             btnText=\"Dashboard\"\r\n             btnLink=\"/page\"\r\n           ></HomeNavContainer>\r\n\t\t   </div>\r\n\t\t   <div className=\"col-4\">\r\n\t\t   <h1 className=\"text-blue\"><FontAwesomeIcon icon={faUser}/></h1>\r\n           <HomeNavContainer\r\n             style=\"font-weight-bold text-blue\"\r\n\t\t\t btnStyle=\"align-bottom btn btn-outline-blue\"\r\n             btnTitle1=\"User\"\r\n\t\t\t btnTitle2=\"Data\"\r\n             btnText=\"Users\"\r\n             btnLink=\"/most-active-users\"\r\n           ></HomeNavContainer>\r\n\t\t   </div>\r\n\t\t   </div>\r\n\t\t   </div>\r\n        </div>\r\n\t\t<div className = \"statsContent row justify-content-center\">\r\n        <HomeStatsContainer />\r\n\t\t</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomePage\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","const API_ENDPOINT = 'https://www.wikidata.org/w/api.php'\r\nconst MAX_QUERY_SIZE = 50\r\nconst NUM_RETRIES = 5\r\n\r\n/**\r\n * @typedef {Object} User\r\n * @property {number} userid - The user's id\r\n * @property {number} name - The user's name\r\n * @property {number} editcount - The number of edits the user did\r\n * @property {number} recentactions - The number of actions a user did within\r\n *           30 days\r\n * @property {Array} groups - An array of strings which contains the groups\r\n *           the user belongs in. For example if the user contains \"bot\", it is\r\n *           a non human user\r\n */\r\n\r\n/**\r\n * Returns a list of 500 users who were recently active within 30 days which is\r\n * sorted by the most edits in descending order\r\n *\r\n * @returns {Promise<User[]>} - A Promise which resolves to an array of User\r\n *          objects\r\n */\r\nexport const getMostEditsUsers = async () => {\r\n  const compare = (a, b) => b.editcount - a.editcount\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'allusers',\r\n    auprop: 'editcount|groups',\r\n    aulimit: 'max',\r\n    auwitheditsonly: '1',\r\n    auactiveusers: '1',\r\n  }\r\n  const users = query(params, NUM_RETRIES)\r\n    .then(data => data.query.allusers)\r\n    .then(users => users.sort(compare))\r\n  return users\r\n}\r\n/**\r\n * Returns a list of 500 users who were recently active within 30 days which is\r\n * sorted by the most recent actions in descending order\r\n *\r\n * @returns {Promise<User[]>} - A Promise which resolves to an array of User\r\n *          objects\r\n */\r\nexport const getMostActiveUsers = async () => {\r\n  const compare = (a, b) => b.recentactions - a.recentactions\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'allusers',\r\n    auprop: 'editcount|groups',\r\n    aulimit: 'max',\r\n    auwitheditsonly: '1',\r\n    auactiveusers: '1',\r\n  }\r\n  const users = query(params, NUM_RETRIES)\r\n    .then(data => data.query.allusers)\r\n    .then(users => users.sort(compare))\r\n  return users\r\n}\r\n\r\nexport const getRecentEditsWithSize = async () => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'recentchanges',\r\n    rcprop: 'title|ids|sizes|timestamp',\r\n    rclimit: '500',\r\n  }\r\n  const edits = query(params, NUM_RETRIES).then(\r\n    result => result.query.recentchanges\r\n  )\r\n  return edits\r\n}\r\n/**\r\n * Returns recent 500 recent edits sorted by size of changes made in absolute value\r\n * So large additions and large deletions are included\r\n */\r\nexport const getRecentLargestEdits = async () => {\r\n  const editList = await getRecentEditsWithSize()\r\n\r\n  editList.forEach(item => {\r\n    item.value = Math.abs(item.newlen - item.oldlen)\r\n    item.id = item.title\r\n  })\r\n\r\n  editList.sort((a, b) => b.value - a.value)\r\n\r\n  return editList\r\n}\r\n\r\n/**\r\n * @typedef {Object} PageInfo\r\n * @property {string} id - The id of the page\r\n * @property {actions} actions - Number of actions which has been performed on\r\n *           that page\r\n * @property {string} title - The title of the page\r\n */\r\n\r\n/**\r\n * Returns an array of most active pages from recent changes feed\r\n *\r\n * @param {string} prevTimestamp - Previous timestamp when the function was\r\n *        last called\r\n * @return {Promise<PageInfo[] | string>}\r\n */\r\nexport const getMostActivePages = async prevTimestamp => {\r\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp)\r\n  const activePages = recentChanges.then(recentChanges =>\r\n    countPageOccurances(recentChanges)\r\n  )\r\n  return [await activePages, newTimestamp]\r\n}\r\n\r\n/**\r\n * Returns an array of most users pages from recent changes feed\r\n *\r\n * @param {string} prevTimestamp - Previous timestamp when the function was\r\n *        last called\r\n * @return {Promise<User[] | string>}\r\n */\r\nexport const getRecentActiveUsers = async prevTimestamp => {\r\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp)\r\n  const activeUsers = recentChanges.then(activeUsers => countUsers(activeUsers))\r\n  return [await activeUsers, newTimestamp]\r\n}\r\n\r\n/**\r\n * Batches a query to cirumvent the 50 items query limit\r\n *\r\n * @param {string} itemsKey the query key\r\n * @param {Array} items the items to add to the query\r\n * @param {Object} params the parameters of the query\r\n */\r\nexport const batchQuery = async (itemsKey, items, params) => {\r\n  let result = []\r\n  let batches = null\r\n  if (items instanceof Array) batches = createBatch(items, MAX_QUERY_SIZE)\r\n  else batches = [[items]]\r\n  const results = batches.map(async batch => {\r\n    const batchString = batch.join('|')\r\n    params[itemsKey] = batchString\r\n    return query(params, NUM_RETRIES)\r\n      .then(data => result.push(data))\r\n      .catch(err => null)\r\n  })\r\n  await Promise.all(results)\r\n  return result\r\n}\r\n\r\n/**\r\n * Queries the API for the most recent changes\r\n *\r\n * @param {string} prevTimestamp - Previous timestamp when the function was\r\n *        last called\r\n * @return {Array<Promise<recentChanges[]> | string>}\r\n */\r\nexport const queryRecentChanges = prevTimestamp => {\r\n  let tmpTimestamp = new Date()\r\n  const newTimestamp = tmpTimestamp.toISOString()\r\n  tmpTimestamp = tmpTimestamp - 1000\r\n  tmpTimestamp = new Date(tmpTimestamp).toISOString()\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'recentchanges',\r\n    rcprop: 'title|ids|timestamp|user',\r\n    rclimit: 'max',\r\n    rcstart: tmpTimestamp,\r\n    rcend: prevTimestamp,\r\n  }\r\n  const recentChanges = query(params, NUM_RETRIES).then(\r\n    data => data.query.recentchanges\r\n  )\r\n  return [recentChanges, newTimestamp]\r\n}\r\n\r\n/**\r\n * Returns the groups of each username in the input array\r\n *\r\n * @param {Array<string>} userNames - an array of usernames to fetch the group of\r\n * @return {Map<string, Array<string>>} - map of username to an array of groups\r\n *         they belong to\r\n */\r\nexport const getUserGroups = userNames => {\r\n  const key = 'ususers'\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'users',\r\n    usprop: 'groups',\r\n  }\r\n  const groups = batchQuery(key, userNames, params).then(data => {\r\n    const groups = {}\r\n    data.forEach(queryResult => {\r\n      const users = queryResult.query.users\r\n      users.forEach(userObj => {\r\n        if (userObj.groups) groups[userObj.name] = userObj.groups\r\n      })\r\n    })\r\n    return groups\r\n  })\r\n  return groups\r\n}\r\n\r\n// ~ Helper Functions ---------------------------------------------------------\r\n\r\n/**\r\n * Returns a the response of a query to the Wikidata API endpoint\r\n *\r\n * @param {Object} params - Object of parameters to use when querying\r\n * @param {number} n - Number of times to retry if failure occurs\r\n * @return {Promise<Object>}\r\n */\r\nconst query = async (params, n) => {\r\n  try {\r\n    const paramsString = new URLSearchParams(params).toString()\r\n    const url = API_ENDPOINT + '?' + paramsString + '&origin=*'\r\n    return await fetch(url).then(response => response.json())\r\n  } catch (err) {\r\n    if (n === 1) throw err\r\n    return await query(params, n - 1)\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {Object} recentChanges\r\n * @property {number} ns\r\n * @property {number} old_revid - The old revision id\r\n * @property {number} pageid - The page id\r\n * @property {number} rcid - The recent change id\r\n * @property {number} revid - The current revision id\r\n * @property {string} timestamp - Timestamp of change\r\n * @property {string} title - Title of the page changed\r\n * @property {string} type - Type of action e.g. \"new\", \"edit\"\r\n * @property {string} user - The username of the editor\r\n */\r\n\r\n/**\r\n * Returns the number of times a page appeared on the recent changes feed sorted by\r\n * number of actions done on the page\r\n *\r\n * @param {recentChanges[]} recentChanges - The array of recent changes from a query\r\n */\r\nconst countPageOccurances = recentChanges => {\r\n  const compare = (a, b) => b.actions - a.actions\r\n  const titleCounts = {}\r\n  recentChanges.forEach(change => {\r\n    const actions = titleCounts[change.title] || 0\r\n    titleCounts[change.title] = actions + 1\r\n  })\r\n  const titles = Object.entries(titleCounts).map(([id, actions]) => ({\r\n    id,\r\n    actions,\r\n  }))\r\n  titles.sort(compare)\r\n  return titles\r\n}\r\n\r\n/**\r\n * Returns the number of times a user appeared on the recent changes feed sorted by\r\n * number of actions done by that user\r\n *\r\n * @param {recentChanges[]} recentChanges - The array of recent changes from a query\r\n */\r\nconst countUsers = recentChanges => {\r\n  const compare = (a, b) => b.actions - a.actions\r\n  const userCounts = {}\r\n  recentChanges.forEach(change => {\r\n    const user = change.user\r\n    const numActions = userCounts[user] || 0\r\n    userCounts[user] = numActions + 1\r\n  })\r\n  const users = Object.entries(userCounts).map(([username, actions]) => ({\r\n    username,\r\n    actions,\r\n  }))\r\n  const userNames = users.map(({ username }) => username)\r\n  getUserGroups(userNames).then(groups => {\r\n    users.forEach(userObj => (userObj.groups = groups[userObj.username]))\r\n    users.sort(compare)\r\n  })\r\n  return users\r\n}\r\n\r\n/**\r\n * Splits up an array into smaller arrays\r\n *\r\n * @param {Array} array - Array to create batches from\r\n * @param {number} size - Batch size\r\n * @return {Array} batches - An array containing the batches which are of\r\n *         length size\r\n */\r\nconst createBatch = (array, size) => {\r\n  const batches = []\r\n  while (array.length > 0) {\r\n    batches.push(array.splice(0, size))\r\n  }\r\n  return batches\r\n}\r\n","import { queryRecentChanges, getUserGroups } from './APIWrapper'\r\n\r\n/** Class which wraps the Wikidata API recent changes feed */\r\nclass FeedData {\r\n  /**\r\n   * Create a new feed data object\r\n   *\r\n   * @param {number} maxItems - the maximum number of items to keep in the\r\n   *        feed.\r\n   */\r\n  constructor(maxItems) {\r\n    this.changes = []\r\n    this.maxItems = maxItems\r\n    this.prevTimestamp = new Date().toISOString()\r\n  }\r\n\r\n  refresh() {\r\n    const [recentChanges, newTimeStamp] = queryRecentChanges(this.prevTimestamp)\r\n    recentChanges.then(changes => {\r\n      const usernames = changes.map(change => change.user)\r\n      getUserGroups(usernames).then(groups =>\r\n        changes.forEach(change => {\r\n          change.groups = groups[change.user]\r\n          this.changes.unshift(change)\r\n          if (this.changes.length > this.maxItems) this.changes.pop()\r\n        })\r\n      )\r\n    })\r\n    this.prevTimestamp = newTimeStamp\r\n  }\r\n}\r\n\r\nexport default FeedData\r\n","import React, { useState, useEffect } from 'react'\r\nimport FeedData from '../Backend/FeedData'\r\n// eslint-disable-next-line\r\nimport style from '../style.css'\r\n\r\nfunction Feed() {\r\n  const [feedData] = useState(new FeedData(30))\r\n  const [paused, setPaused] = useState(false)\r\n  const [recentChanges, setRecentChanges] = useState({\r\n    items: [],\r\n  })\r\n\r\n  useEffect(() => {\r\n    const refresh = setInterval(() => {\r\n      if (!paused) feedData.refresh()\r\n      setRecentChanges({ items: feedData.changes })\r\n    }, 1000)\r\n    return () => clearInterval(refresh)\r\n  }, [feedData, paused])\r\n\r\n  function togglePause() {\r\n    setPaused(prevPause => !prevPause)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-blue text-left\">Most Recent Activity</h3>\r\n      <form className=\"text-left\" onChange={togglePause}>\r\n        <label>\r\n          <input type=\"checkbox\" /> Paused\r\n        </label>\r\n      </form>\r\n      <ul className=\"list-group\">\r\n        {recentChanges.items.map((item, index) => (\r\n          <li className=\"list-group-item text-left\" key={index}>\r\n            {`User ${item.user} action ${item.type} on ${\r\n              item.title\r\n            } ${getTimeDifference(item.timestamp)} seconds ago`}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getTimeDifference = toCompare =>\r\n  Math.round(\r\n    Math.abs(new Date().getTime() - new Date(toCompare).getTime()) / 1000\r\n  )\r\n\r\nexport default Feed\r\n","import Card from 'react-bootstrap/Card'\r\nimport React, { Component } from 'react'\r\n\r\nclass GraphCard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: this.props.history,\r\n      title: this.props.title,\r\n      pageLink: this.props.pageLink,\r\n      graph: this.props.graph,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card onClick={this.onClick} tag=\"a\" className=\"graph-card\">\r\n        <Card.Body>\r\n          <Card.Title className=\"card-title\">{this.state.title}</Card.Title>\r\n          {this.state.graph}\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  onClick = () => {\r\n    this.state.history.push(this.state.pageLink)\r\n  }\r\n}\r\n\r\nexport default GraphCard\r\n","import React, { Component } from 'react'\r\nimport { ResponsiveBar } from '@nivo/bar'\r\n\r\nclass SimpleBarGraph extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loaded: false,\r\n      data: null,\r\n      fullGraph: this.props.fullGraph,\r\n    }\r\n\r\n    this.loadData()\r\n  }\r\n\r\n  tooltip = function(click, url) {\r\n    return (\r\n      <div className=\"iframe-container\">\r\n        <iframe\r\n          src={url + click.indexValue}\r\n          className=\"iframe\"\r\n          title=\"tooltip-option-2\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  loadData = async () => {\r\n    let getData = this.props.settings.getData.bind(this)\r\n    let data = await getData()\r\n    let smlData = data.slice(0, this.state.fullGraph ? 30 : 10)\r\n    this.setState({\r\n      loaded: true,\r\n      data: smlData,\r\n    })\r\n  }\r\n\r\n  refresh = async () => {\r\n    if (!this.props.paused) {\r\n      let method = this.props.settings.refreshMethod.bind(this)\r\n      await method()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshInterval = setInterval(async () => {\r\n      await this.refresh()\r\n    }, this.props.settings.refreshTime)\r\n  }\r\n\r\n  render() {\r\n    let margin = {}\r\n    let label = null\r\n    let classname = ''\r\n    let onClick = null\r\n    let clickable = false\r\n    let tooltip = null\r\n    let legend = []\r\n    let colorBy = this.props.settings.colorBy\r\n      ? this.props.settings.colorBy\r\n      : 'index'\r\n    if (this.state.fullGraph) {\r\n      if (this.props.settings.margin) {\r\n        margin = this.props.settings.margin\r\n      } else {\r\n        margin = { top: 5, right: 30, bottom: 80, left: 80 }\r\n      }\r\n      if (this.props.settings.legend) {\r\n        legend = [this.props.settings.legend]\r\n      }\r\n      label = true\r\n      classname = 'full-graph-container'\r\n      if (this.props.settings.onClick) {\r\n        onClick = this.props.settings.onClick\r\n        clickable = true\r\n      }\r\n      if (this.props.settings.tooltip) {\r\n        tooltip = this.props.settings.tooltip.bind(this)\r\n      }\r\n    } else {\r\n      margin = { top: 0, right: 0, bottom: 0, left: 0 }\r\n      label = false\r\n      classname = 'Graph-Container-Card'\r\n    }\r\n    return (\r\n      <div>\r\n        {!this.state.loaded ? (\r\n          'Loading...'\r\n        ) : (\r\n          <div className={classname}>\r\n            <ResponsiveBar\r\n              data={this.state.data}\r\n              keys={this.props.settings.keys}\r\n              indexBy={this.props.settings.index}\r\n              margin={margin}\r\n              padding={0.3}\r\n              colors={{ scheme: this.props.settings.colors }}\r\n              colorBy={colorBy}\r\n              borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n              axisTop={null}\r\n              axisRight={null}\r\n              axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 30,\r\n                legend: this.props.settings.xAxis,\r\n                legendPosition: 'start',\r\n                legendOffset: 40,\r\n              }}\r\n              axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: this.props.settings.yAxis,\r\n                legendPosition: 'middle',\r\n                legendOffset: -60,\r\n              }}\r\n              enableLabel={label}\r\n              onClick={clickable ? onClick : function() {}}\r\n              animate={label}\r\n              isInteractive={label}\r\n              motionStiffness={90}\r\n              motionDamping={15}\r\n              tooltip={tooltip}\r\n              legends={legend}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SimpleBarGraph\r\n","import React, { Component } from 'react'\r\nimport { ResponsivePie } from '@nivo/pie'\r\n\r\nclass SimpleBarGraph extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loaded: false,\r\n      data: null,\r\n      fullGraph: this.props.fullGraph,\r\n    }\r\n\r\n    this.loadData()\r\n  }\r\n\r\n  tooltip = function(click, url) {\r\n    return (\r\n      <div className=\"iframe-container\">\r\n        <iframe\r\n          src={url + click.id}\r\n          className=\"iframe\"\r\n          title=\"tooltip-option-2\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  loadData = async () => {\r\n    let getData = this.props.settings.getData.bind(this)\r\n    let data = await getData()\r\n    let smlData = data.slice(0, this.state.fullGraph ? 30 : 10)\r\n    this.setState({\r\n      loaded: true,\r\n      data: smlData,\r\n    })\r\n  }\r\n\r\n  refresh = async () => {\r\n    if (!this.props.paused) {\r\n      this.loadData()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshInterval = setInterval(async () => {\r\n      await this.refresh()\r\n    }, this.props.settings.refreshTime)\r\n  }\r\n\r\n  render() {\r\n    let margin = {}\r\n    let label = null\r\n    let classname = ''\r\n    let onClick = null\r\n    let tooltip = null\r\n    if (this.state.fullGraph) {\r\n      margin = { top: 30, right: 30, bottom: 30, left: 30 }\r\n      label = true\r\n      classname = 'full-graph-container'\r\n      if (this.props.settings.onClick) {\r\n        onClick = this.props.settings.onClick\r\n      }\r\n      if (this.props.settings.tooltip) {\r\n        tooltip = this.props.settings.tooltip.bind(this)\r\n      }\r\n    } else {\r\n      margin = { top: 0, right: 0, bottom: 0, left: 0 }\r\n      label = false\r\n      classname = 'Graph-Container-Card'\r\n    }\r\n    return (\r\n      <div>\r\n        {!this.state.loaded ? (\r\n          'Loading...'\r\n        ) : (\r\n          <div className={classname}>\r\n            <ResponsivePie\r\n              data={this.state.data}\r\n              margin={margin}\r\n              innerRadius={0.4}\r\n              padAngle={0}\r\n              cornerRadius={0}\r\n              colors={{ scheme: 'paired' }}\r\n              enableRadialLabels={label}\r\n              radialLabelsSkipAngle={10}\r\n              radialLabelsTextXOffset={6}\r\n              radialLabelsTextColor=\"#333333\"\r\n              radialLabelsLinkOffset={0}\r\n              radialLabelsLinkDiagonalLength={16}\r\n              radialLabelsLinkHorizontalLength={24}\r\n              radialLabelsLinkStrokeWidth={1}\r\n              radialLabelsLinkColor={{ from: 'color' }}\r\n              enableSlicesLabels={label}\r\n              slicesLabelsSkipAngle={10}\r\n              slicesLabelsTextColor=\"#333333\"\r\n              animate={true}\r\n              motionStiffness={90}\r\n              motionDamping={15}\r\n              defs={[\r\n                {\r\n                  id: 'dots',\r\n                  type: 'patternDots',\r\n                  background: 'inherit',\r\n                  color: 'rgba(255, 255, 255, 0.3)',\r\n                  size: 4,\r\n                  padding: 1,\r\n                  stagger: true,\r\n                },\r\n                {\r\n                  id: 'lines',\r\n                  type: 'patternLines',\r\n                  background: 'inherit',\r\n                  color: 'rgba(255, 255, 255, 0.3)',\r\n                  rotation: -45,\r\n                  lineWidth: 6,\r\n                  spacing: 10,\r\n                },\r\n              ]}\r\n              onClick={onClick}\r\n              tooltip={tooltip}\r\n              defs={[\r\n                {\r\n                  id: 'lines',\r\n                  type: 'patternLines',\r\n                  background: 'inherit',\r\n                  color: 'rgba(255, 255, 255, 0.4)',\r\n                  rotation: -45,\r\n                  lineWidth: 6,\r\n                  spacing: 10,\r\n                },\r\n              ]}\r\n              fill={[\r\n                {\r\n                  match: {\r\n                    type: 'edit',\r\n                  },\r\n                  id: 'lines',\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SimpleBarGraph\r\n","import React, { Component } from 'react'\r\nimport Navbar from '../Components/Navbar'\r\n\r\nclass GraphPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n      title: this.props.name,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar history={this.state.history} />\r\n\t\t<div className = \"row\">\r\n        <div className=\"infobox\">\r\n          <h2>{this.state.title}</h2>\r\n          <p />\r\n          <p>{this.props.explanation}</p>\r\n          <p>\r\n            <form onChange={this.props.handlePause}>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"paused\"\r\n                  name=\"paused\"\r\n                  value={this.props.paused}\r\n                />{' '}\r\n                {'Paused'}\r\n              </label>\r\n            </form>\r\n          </p>\r\n        </div>\r\n        {this.props.graph}\r\n\t\t</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GraphPage\r\n","import React, { Component } from 'react'\r\nimport GraphPage from './GraphPage'\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph'\r\nimport { getRecentActiveUsers } from '../Backend/APIWrapper'\r\n\r\nexport const MostActiveUsersGraphSettings = {\r\n  getData: async function() {\r\n    let [data, newTimestamp] = await getRecentActiveUsers(\r\n      new Date().toISOString()\r\n    )\r\n    data = data.slice(0, 50)\r\n    this.setState({\r\n      fullData: data,\r\n      prevTimestamp: newTimestamp,\r\n    })\r\n    return data\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async function() {\r\n    let [data, newTimestamp] = await getRecentActiveUsers(\r\n      this.state.prevTimestamp\r\n    )\r\n    this.setState({ prevTimestamp: newTimestamp })\r\n    console.log(data)\r\n    console.log(this.state.data)\r\n    data = data.slice(0, 50)\r\n    if (this.state.fullData) {\r\n      let fullData = this.state.fullData\r\n      data.forEach(userAdditions => {\r\n        let index = -1\r\n        for (let i = 0; i < fullData.length; i += 1) {\r\n          if (fullData[i].username === userAdditions.username) {\r\n            index = i\r\n          }\r\n        }\r\n        if (index !== -1) {\r\n          fullData[index].actions += userAdditions.actions\r\n        } else {\r\n          fullData.push(userAdditions)\r\n        }\r\n      })\r\n      fullData.sort((a, b) => b.actions - a.actions)\r\n      fullData.slice(0, 50)\r\n      let smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10)\r\n      smlData.forEach(user => {\r\n        if (user.groups !== undefined && user.groups.includes('bot')) {\r\n          user.bot = user.actions\r\n          user.human = 0\r\n        } else {\r\n          user.bot = 0\r\n          user.human = user.actions\r\n        }\r\n      })\r\n\r\n      this.setState({ fullData: fullData, data: smlData })\r\n    } else {\r\n      let smlData = data.slice(0, this.state.fullGraph ? 30 : 10)\r\n\r\n      this.setState({ data: smlData })\r\n    }\r\n  },\r\n  keys: ['bot', 'human'],\r\n  index: 'username',\r\n  xAxis: 'username',\r\n  yAxis: 'actions',\r\n  colors: 'set2',\r\n  colorBy: 'id',\r\n  legend: {\r\n    dataFrom: 'keys',\r\n    anchor: 'bottom-right',\r\n    direction: 'column',\r\n    justify: false,\r\n    translateX: 120,\r\n    translateY: 0,\r\n    itemsSpacing: 2,\r\n    itemWidth: 100,\r\n    itemHeight: 20,\r\n    itemDirection: 'left-to-right',\r\n    itemOpacity: 0.85,\r\n    symbolSize: 20,\r\n    effects: [\r\n      {\r\n        on: 'hover',\r\n        style: {\r\n          itemOpacity: 1,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  margin: { top: 5, right: 130, bottom: 50, left: 80 },\r\n  onClick: function(click) {\r\n    window.open(\r\n      'https://www.wikidata.org/wiki/User:' + click.indexValue,\r\n      '_blank'\r\n    )\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:')\r\n  },\r\n}\r\n\r\nclass MostActiveUsers extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    }\r\n  }\r\n\r\n  handlePause = event => {\r\n    let paused = this.state.paused\r\n    this.setState({ paused: !paused })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          'A live view of the users active right now.' +\r\n          \" Hover over a bar to get a preview of the user's page, or click to open the user's page in a new tab.\"\r\n        }\r\n        graph={\r\n          <SimpleBarGraph\r\n            fullGraph={true}\r\n            settings={MostActiveUsersGraphSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name={'Most Active Users'}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default MostActiveUsers\r\n","import React, { Component } from 'react'\r\nimport GraphPage from './GraphPage'\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph'\r\nimport { getMostActivePages } from '../Backend/APIWrapper'\r\n\r\nexport const MostActivePagesGraphSettings = {\r\n  getData: async function() {\r\n    let [data, newTimestamp] = await getMostActivePages(\r\n      new Date().toISOString()\r\n    )\r\n    data = data.slice(0, 50)\r\n    this.setState({\r\n      fullData: data,\r\n      prevTimestamp: newTimestamp,\r\n    })\r\n    return data\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async function() {\r\n    let [data, newTimestamp] = await getMostActivePages(\r\n      this.state.prevTimestamp\r\n    )\r\n    this.setState({ prevTimestamp: newTimestamp })\r\n    data = data.slice(0, 50)\r\n    if (this.state.fullData) {\r\n      let fullData = this.state.fullData\r\n      data.forEach(pageAdditions => {\r\n        let index = -1\r\n        for (let i = 0; i < fullData.length; i += 1) {\r\n          if (fullData[i].id === pageAdditions.id) {\r\n            index = i\r\n          }\r\n        }\r\n        if (index !== -1) {\r\n          fullData[index].actions += pageAdditions.actions\r\n        } else {\r\n          fullData.push(pageAdditions)\r\n        }\r\n      })\r\n      fullData.sort((a, b) => b.actions - a.actions)\r\n      fullData.slice(0, 50)\r\n      let smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10)\r\n\r\n      this.setState({ fullData: fullData, data: smlData })\r\n    } else {\r\n      let smlData = data.slice(0, this.state.fullGraph ? 30 : 10)\r\n\r\n      this.setState({ data: smlData })\r\n    }\r\n  },\r\n  keys: ['actions'],\r\n  index: 'id',\r\n  xAxis: 'pages',\r\n  yAxis: 'actions',\r\n  colors: 'pastel1',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.indexValue, '_blank')\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/')\r\n  },\r\n}\r\n\r\nclass MostActivePages extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    }\r\n  }\r\n\r\n  handlePause = event => {\r\n    let paused = this.state.paused\r\n    this.setState({ paused: !paused })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          'A live view of the pages being edited right now.' +\r\n          ' Hover over a bar to get a preview of the page, or click to open the page in a new tab.'\r\n        }\r\n        graph={\r\n          <SimpleBarGraph\r\n            fullGraph={true}\r\n            settings={MostActivePagesGraphSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name={'Most Active Pages'}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default MostActivePages\r\n","import React, { Component } from 'react'\r\nimport GraphPage from './GraphPage'\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph'\r\nimport { getMostEditsUsers } from '../Backend/APIWrapper'\r\n\r\nexport const UsersByMostEditsGraphSettings = {\r\n  getData: async function() {\r\n    let data = await getMostEditsUsers()\r\n    return data\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: function() {\r\n    this.loadData()\r\n  },\r\n  keys: ['editcount'],\r\n  index: 'name',\r\n  xAxis: 'users',\r\n  yAxis: 'edit count',\r\n  colors: 'paired',\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:')\r\n  },\r\n}\r\n\r\nclass UsersByMostEditsPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    }\r\n  }\r\n\r\n  handlePause = event => {\r\n    this.setState({ paused: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        graph={\r\n          <SimpleBarGraph\r\n            fullGraph={true}\r\n            settings={UsersByMostEditsGraphSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name={'Users By Most Edits'}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default UsersByMostEditsPage\r\n","import React, { Component } from 'react'\r\nimport GraphPage from './GraphPage'\r\nimport PieChart from '../Components/PieChart'\r\nimport { getRecentLargestEdits } from '../Backend/APIWrapper'\r\n\r\nexport const RecentEditSizeSettings = {\r\n  getData: getRecentLargestEdits,\r\n  refreshTime: 2000,\r\n  refreshMethod: getRecentLargestEdits,\r\n  value: item => {\r\n    Math.abs(item.newlen - item.oldlen)\r\n  },\r\n  colorBy: 'type',\r\n  colors: 'pastel1',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.id, '_blank')\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/')\r\n  },\r\n}\r\n\r\nclass RecentEditSize extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    }\r\n  }\r\n\r\n  handlePause = event => {\r\n    let paused = this.state.paused\r\n    this.setState({ paused: !paused })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          <div>\r\n            {'The largest of the last 500 edits. The number in each of the sections represents the size of the edit in bytes.' +\r\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\r\n            <p>\r\n              <img\r\n                className=\"legend\"\r\n                src={require('../legend.svg')}\r\n                alt=\"Legend\"\r\n              />\r\n            </p>\r\n          </div>\r\n        }\r\n        graph={\r\n          <PieChart\r\n            fullGraph={true}\r\n            settings={RecentEditSizeSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name={'Largest Recent Edits'}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default RecentEditSize\r\n","import React, { Component } from 'react'\r\nimport Navbar from '../Components/Navbar'\r\nimport GraphCard from '../Components/GraphCard'\r\nimport FeedData from '../Components/Feed'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph'\r\nimport PieChart from '../Components/PieChart'\r\nimport { MostActiveUsersGraphSettings } from './MostActiveUsers'\r\nimport { MostActivePagesGraphSettings } from './MostActivePages'\r\nimport { UsersByMostEditsGraphSettings } from './UsersByMostEditsPage'\r\nimport { RecentEditSizeSettings } from './RecentEditSize'\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar />\r\n        <div class=\"row justify-content-left text-dark\">\r\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\r\n            <div class=\"feedContainer\">\r\n              <FeedData />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\r\n            <div className=\"deck-container\">\r\n              <CardDeck className=\"deck\">\r\n                <GraphCard\r\n                  title=\"Users by most edits\"\r\n                  pageLink=\"users-by-most-edits\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <SimpleBarGraph\r\n                      paused={true}\r\n                      fullGraph={false}\r\n                      settings={UsersByMostEditsGraphSettings}\r\n                    />\r\n                  }\r\n                />\r\n                <GraphCard\r\n                  title=\"Most Active Users\"\r\n                  pageLink=\"most-active-users\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <SimpleBarGraph\r\n                      paused={false}\r\n                      fullGraph={false}\r\n                      settings={MostActiveUsersGraphSettings}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n              <CardDeck className=\"deck\">\r\n                <GraphCard\r\n                  title=\"Most Active Pages\"\r\n                  pageLink=\"most-active-pages\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <SimpleBarGraph\r\n                      paused={false}\r\n                      fullGraph={false}\r\n                      settings={MostActivePagesGraphSettings}\r\n                    />\r\n                  }\r\n                />\r\n                <GraphCard\r\n                  title=\"Largest Recent Edits\"\r\n                  pageLink=\"recent-edit-size\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <PieChart\r\n                      paused={true}\r\n                      fullGraph={false}\r\n                      settings={RecentEditSizeSettings}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom'\r\nimport HomePage from './Pages/HomePage'\r\nimport history from './Utils/History'\r\nimport FeedData from './Components/Feed'\r\nimport TestPage from './Pages/TestPage'\r\nimport UsersByMostEditsPage from './Pages/UsersByMostEditsPage'\r\nimport MostActiveUsers from './Pages/MostActiveUsers'\r\nimport MostActivePages from './Pages/MostActivePages'\r\nimport RecentEditSize from './Pages/RecentEditSize'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={process.env.PUBLIC_URL + '/'}\r\n            component={HomePage}\r\n          />\r\n          <Route exact path=\"/page\" component={TestPage} />\r\n          <Route\r\n            exact\r\n            path=\"/users-by-most-edits\"\r\n            component={UsersByMostEditsPage}\r\n          />\r\n          <Route exact path=\"/most-active-users\" component={MostActiveUsers} />\r\n          <Route exact path=\"/recent-edit-size\" component={RecentEditSize} />\r\n          <Route exact path=\"/most-active-pages\" component={MostActivePages} />\r\n          <Route exact path=\"/feed\" component={FeedData} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}