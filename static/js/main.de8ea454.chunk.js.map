{"version":3,"sources":["legend.svg","Components/TitleContainer.js","Components/Navbar.jsx","Components/HomeNavContainer.js","Components/HomeStats.js","Pages/HomePage.jsx","Utils/History.js","Backend/APIWrapper.js","Backend/FeedData.js","Components/Feed.jsx","Pages/FeedData.jsx","Components/GraphCard.jsx","Components/SimpleBarGraph.jsx","Components/PieChart.jsx","Pages/GraphPage.jsx","Pages/MostActiveUsers.jsx","Pages/MostActivePages.jsx","Pages/LargestRecentEdits.jsx","Pages/RecentEditSize.jsx","Pages/ProportionFlagged.jsx","Pages/TestPage.jsx","Pages/UsersByMostEditsPage.jsx","Pages/AboutPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TitleContainer","className","this","props","title","subtitle","React","Component","NavbarLocal","state","history","activePage","window","location","href","Navbar","Collapse","Nav","Link","as","to","endsWith","target","rel","HomeNavContainer","styled","btnTitle1","btnTitle2","btnLink","type","btnStyle","btnText","HomeStats","text","errorCode","updateStats","$","ajax","url","success","response","html","find","intervalID","setInterval","clearInterval","id","HomePage","icon","faBars","faChartLine","faUser","createBrowserHistory","API_ENDPOINT","getMostEditsUsers","a","async","compare","b","editcount","users","query","action","format","list","auprop","aulimit","auwitheditsonly","auactiveusers","then","data","allusers","sort","getRecentEditsWithSize","edits","rcprop","rclimit","result","recentchanges","getRecentEditsWithFlags","revids","map","recentChange","revid","getScore","scores","label","value","color","Object","values","forEach","score","undefined","damaging","prediction","getRecentLargestEdits","editList","item","Math","abs","newlen","oldlen","toString","getMostActivePages","prevTimestamp","queryRecentChanges","recentChanges","newTimestamp","activePages","countPageOccurances","getRecentActiveUsers","activeUsers","countUsers","batchQuery","itemsKey","items","endpoint","params","batches","Array","createBatch","results","batch","join","push","catch","err","Promise","all","tmpTimestamp","Date","toISOString","rcstart","rcend","revisionIds","getUserGroups","userNames","usprop","groups","queryResult","userObj","name","n","paramsString","URLSearchParams","fetch","json","setTimeout","length","resultBatch","wikidatawiki","titleCounts","change","actions","titles","entries","userCounts","user","numActions","username","array","size","splice","FeedData","maxItems","changes","newTimeStamp","usernames","unshift","pop","getTimeDifference","toCompare","round","getTime","Feed","useState","feedData","paused","setPaused","setRecentChanges","useEffect","refresh","onChange","prevPause","index","key","timestamp","GraphCard","onClick","pageLink","graph","Card","tag","Body","Title","SimpleBarGraph","tooltip","click","src","indexValue","loadData","settings","getData","bind","smlData","slice","fullGraph","setState","loaded","method","refreshMethod","refreshInterval","refreshTime","margin","classname","clickable","legend","colorBy","top","right","bottom","left","keys","indexBy","padding","colors","scheme","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","xAxis","legendPosition","legendOffset","axisLeft","yAxis","enableLabel","animate","isInteractive","motionStiffness","motionDamping","legends","PieChart","colorFunction","innerRadius","padAngle","cornerRadius","enableRadialLabels","radialLabel","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","enableSlicesLabels","slicesLabelsSkipAngle","slicesLabelsTextColor","defs","background","rotation","lineWidth","spacing","fill","match","GraphPage","explanation","handlePause","MostActiveUsersGraphSettings","fullData","userAdditions","i","includes","bot","human","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","open","MostActiveUsers","event","MostActivePagesGraphSettings","pageAdditions","MostActivePages","LargestRecentEditsSettings","LargestRecentEdits","require","alt","RecentEditSizeSettings","RecentEditSize","ProportionFlaggedSettings","d","ProportionFlagged","CardDeck","UsersByMostEditsGraphSettings","UsersByMostEditsPage","AboutPage","faLink","faGithub","App","basename","process","exact","path","component","TestPage","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de8ea454.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/legend.ee93b5bb.svg\";","import React from 'react';\r\n\r\nclass TitleContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\" text-left\">\r\n        <h1 className=\"text-left  display-3\">\r\n          <b>{this.props.title}</b>\r\n        </h1>\r\n        <h4>{this.props.subtitle}</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitleContainer;\r\n","import React, { Component } from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Creates the Navbar shown on all pages\r\n\r\nclass NavbarLocal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { history: this.props.history };\r\n  }\r\n  render() {\r\n    // var isActive = this.context.router.route.location.pathname\r\n    const activePage = window.location.href;\r\n    return (\r\n      <Navbar>\r\n        <Navbar.Collapse>\r\n          <Nav>\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/\"\r\n              className={\r\n                activePage.endsWith('/') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Home\r\n            </Nav.Link>\r\n\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/about-page\"\r\n              className={\r\n                activePage.endsWith('/about-page')\r\n                  ? 'nav-link--active'\r\n                  : 'nav-link'\r\n              }\r\n            >\r\n              About Us\r\n            </Nav.Link>\r\n\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/page\"\r\n              className={\r\n                activePage.endsWith('/page') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Dashboard\r\n            </Nav.Link>\r\n\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/feed\"\r\n              className={\r\n                activePage.endsWith('/feed') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Feed\r\n            </Nav.Link>\r\n\r\n            <a\r\n              as={Link}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://github.com/isobelm/Software-Engineering\"\r\n              className={\r\n                activePage.endsWith('/ksknc') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Github Project\r\n            </a>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarLocal;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//This class takes in a title and a description and displays them as shown on the homepage\r\n\r\nclass HomeNavContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ting\">\r\n        <h2 className={this.props.styled}>{this.props.btnTitle1}</h2>\r\n        <h2 className={this.props.styled}>{this.props.btnTitle2}</h2>\r\n        <br />\r\n        <Link to={this.props.btnLink}>\r\n          <button type=\"button\" className={this.props.btnStyle}>\r\n            {this.props.btnText}\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeNavContainer;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport $ from 'jquery';\r\n\r\n//These load the statistics from a server we set up and displays them on the homepage\r\n\r\nclass HomeStats extends Component {\r\n  state = {\r\n    text: 'something',\r\n    errorCode: 'Loading...',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateStats();\r\n    this.intervalID = setInterval(() => this.updateStats(), 5000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  updateStats = () => {\r\n    $.ajax({\r\n      url:\r\n        'https://protected-shelf-93081.herokuapp.com/https://www.wikidata.org/wiki/Special:Statistics',\r\n      type: 'GET',\r\n      success: function(response) {\r\n        $('#div1').html(\r\n          $($(response).find('.mw-statistics-articles')).find(\r\n            '.mw-statistics-numbers'\r\n          )\r\n        );\r\n        $('#div2').html(\r\n          $($(response).find('.mw-statistics-edits')).find(\r\n            '.mw-statistics-numbers'\r\n          )\r\n        );\r\n        $('#div3').html(\r\n          $($(response).find('.mw-statistics-users')).find(\r\n            '.mw-statistics-numbers'\r\n          )\r\n        );\r\n        $('#div4').html(\r\n          $($(response).find('.mw-statistics-users-active')).find(\r\n            '.mw-statistics-numbers'\r\n          )\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row col-lg-12 mx-auto col-12 justify-content-center  homeStatContainer text-left\">\r\n            \r\n\r\n            <div className=\"col-lg-3 col-12 homeStat\">\r\n            <h1 id=\"div1\">{this.state.errorCode}</h1>\r\n            <h1>Items</h1>\r\n            </div>\r\n\r\n            <div className=\"col-lg-3 col-12 homeStat\">\r\n            <h1 id=\"div2\">{this.state.errorCode}</h1>\r\n            <h1>Edits</h1>\r\n            </div>\r\n\r\n            <div className=\"col-lg-3 col-12 homeStat\">\r\n            <h1 id=\"div3\">{this.state.errorCode}</h1>\r\n            <h1>Users</h1>\r\n            </div>\r\n\r\n            <div className=\"col-lg-3 col-12  homeStat\">\r\n            <h1 id=\"div4\">{this.state.errorCode}</h1>\r\n            <h1>Active Users</h1>\r\n            </div>\r\n            \r\n          \r\n           \r\n        \r\n           \r\n      \r\n            \r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeStats;\r\n","import React, { Component } from 'react';\r\nimport TitleContainer from '../Components/TitleContainer';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from '../Components/Navbar';\r\nimport HomeNavContainer from '../Components/HomeNavContainer';\r\nimport HomeStatsContainer from '../Components/HomeStats';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\n/*This is the home page and makes use of the Navbar, \r\nhomeNavContainer, homeStatsContainer and TitleContainer components */\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { history: this.props.history };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar history={this.state.history} />\r\n        <div className=\"HomePageContent row margin-right: -15px margin-left: -15px\">\r\n          <div className=\"col-lg-5 col-sm-12\">\r\n            <TitleContainer\r\n              title=\"Wikidata Live\"\r\n              subtitle=\"A web app to visualise recent changes to Wikidata in quasi real time.\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-7 col-sm-12 homeNav\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4 col-sm-12\">\r\n                <h1 className=\"text-red\">\r\n                  <FontAwesomeIcon icon={faBars} />\r\n                </h1>\r\n                <HomeNavContainer\r\n                  styled=\"font-weight-bold text-red\"\r\n                  btnStyle=\"align-bottom btn btn-outline-red\"\r\n                  btnTitle1=\"About\"\r\n                  btnTitle2=\"Us\"\r\n                  btnText=\"About\"\r\n                  btnLink=\"/about-page\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4 col-sm-12 homeNav\">\r\n                <h1 className=\"text-green\">\r\n                  <FontAwesomeIcon icon={faChartLine} />\r\n                </h1>\r\n                <HomeNavContainer\r\n                  styled=\"font-weight-bold text-green\"\r\n                  btnStyle=\"align-bottom btn btn-outline-green\"\r\n                  btnTitle1=\"Wikidata\"\r\n                  btnTitle2=\"Dashboard\"\r\n                  btnText=\"Dashboard\"\r\n                  btnLink=\"/page\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4 col-sm-12 homeNav\">\r\n                <h1 className=\"text-blue\">\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                </h1>\r\n                <HomeNavContainer\r\n                  styled=\"font-weight-bold text-blue\"\r\n                  btnStyle=\"align-bottom btn btn-outline-blue\"\r\n                  btnTitle1=\"User\"\r\n                  btnTitle2=\"Data\"\r\n                  btnText=\"Users\"\r\n                  btnLink=\"/most-active-users\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"statsContent row justify-content-center\">\r\n          <HomeStatsContainer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","const API_ENDPOINT = 'https://www.wikidata.org/w/api.php';\r\nconst SCORING_ENDPOINT = 'https://ores.wikimedia.org/v3/scores/wikidatawiki/';\r\nconst MAX_QUERY_SIZE = 50;\r\nconst NUM_RETRIES = 5;\r\n\r\n/**\r\n * @typedef {Object} User\r\n * @property {number} userid - The user's id\r\n * @property {number} name - The user's name\r\n * @property {number} editcount - The number of edits the user did\r\n * @property {number} recentactions - The number of actions a user did within\r\n *           30 days\r\n * @property {Array} groups - An array of strings which contains the groups\r\n *           the user belongs in. For example if the user contains \"bot\", it is\r\n *           a non human user\r\n */\r\n\r\n/**\r\n * Returns a list of 500 users who were recently active within 30 days which is\r\n * sorted by the most edits in descending order\r\n *\r\n * @returns {Promise.<User[]>} - A Promise which resolves to an array of User\r\n *          objects\r\n */\r\nexport const getMostEditsUsers = async () => {\r\n  const compare = (a, b) => b.editcount - a.editcount;\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'allusers',\r\n    auprop: 'editcount|groups',\r\n    aulimit: 'max',\r\n    auwitheditsonly: '1',\r\n    auactiveusers: '1',\r\n  };\r\n  const users = query(API_ENDPOINT, params, NUM_RETRIES)\r\n    .then(data => data.query.allusers)\r\n    .then(users => users.sort(compare));\r\n  return users;\r\n};\r\n/**\r\n * Returns a list of 500 users who were recently active within 30 days which is\r\n * sorted by the most recent actions in descending order\r\n *\r\n * @returns {Promise.<User[]>} - A Promise which resolves to an array of User\r\n *          objects\r\n */\r\nexport const getMostActiveUsers = async () => {\r\n  const compare = (a, b) => b.recentactions - a.recentactions;\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'allusers',\r\n    auprop: 'editcount|groups',\r\n    aulimit: 'max',\r\n    auwitheditsonly: '1',\r\n    auactiveusers: '1',\r\n  };\r\n  const users = query(API_ENDPOINT, params, NUM_RETRIES)\r\n    .then(data => data.query.allusers)\r\n    .then(users => users.sort(compare));\r\n  return users;\r\n};\r\n\r\nexport const getRecentEditsWithSize = async () => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'recentchanges',\r\n    rcprop: 'title|ids|sizes|timestamp',\r\n    rclimit: '500',\r\n  };\r\n  const edits = query(API_ENDPOINT, params, NUM_RETRIES).then(\r\n    result => result.query.recentchanges\r\n  );\r\n  return await edits;\r\n};\r\n\r\nexport const getRecentEditsWithFlags = async () => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'recentchanges',\r\n    rcprop: 'ids',\r\n    rclimit: '50',\r\n  };\r\n  const edits = query(API_ENDPOINT, params, NUM_RETRIES).then(\r\n    result => result.query.recentchanges\r\n  );\r\n\r\n  let revids = await edits;\r\n  revids = revids.map(recentChange => recentChange.revid);\r\n  let scores = await getScore(revids);\r\n\r\n  const data = [\r\n    { id: 'damaging', label: 'damaging', value: 0, color: '#F25543' },\r\n    { id: 'unsure', label: 'unsure', value: 0, color: '#FFF047' },\r\n    { id: 'good faith', label: 'good faith', value: 0, color: '#92E16F' },\r\n  ];\r\n\r\n  scores = await scores;\r\n\r\n  Object.values(scores).forEach(score => {\r\n    if (\r\n      score.damaging.score !== undefined &&\r\n      score.damaging.score.prediction === true\r\n    ) {\r\n      data[0].value += 1;\r\n    } else if (\r\n      score.damaging.score !== undefined &&\r\n      score.damaging.score.prediction === false\r\n    ) {\r\n      data[2].value += 1;\r\n    } else {\r\n      data[1].value += 1;\r\n    }\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n * Returns recent 500 recent edits sorted by size of changes made in absolute value\r\n * So large additions and large deletions are included\r\n */\r\nexport const getRecentLargestEdits = async () => {\r\n  const editList = await getRecentEditsWithSize();\r\n\r\n  editList.forEach(item => {\r\n    item.value = Math.abs(item.newlen - item.oldlen);\r\n    item.id = item.revid.toString();\r\n    item.label = item.title;\r\n  });\r\n\r\n  editList.sort((a, b) => b.value - a.value);\r\n\r\n  return editList;\r\n};\r\n\r\n/**\r\n * @typedef {Object} PageInfo\r\n * @property {string} id - The id of the page\r\n * @property {actions} actions - Number of actions which has been performed on\r\n *           that page\r\n * @property {string} title - The title of the page\r\n */\r\n\r\n/**\r\n * Returns an array of most active pages from recent changes feed\r\n *\r\n * @param {string} prevTimestamp - Previous timestamp when the function was\r\n *        last called\r\n * @returns {(Promise.<PageInfo[]> | string)[]}\r\n */\r\nexport const getMostActivePages = async prevTimestamp => {\r\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp);\r\n  const activePages = recentChanges.then(recentChanges =>\r\n    countPageOccurances(recentChanges)\r\n  );\r\n  return [await activePages, newTimestamp];\r\n};\r\n\r\n/**\r\n * Returns an array of most users pages from recent changes feed\r\n *\r\n * @param {string} prevTimestamp - Previous timestamp when the function was\r\n *        last called\r\n * @returns {(Promise.<User[]> | string)[]}\r\n */\r\nexport const getRecentActiveUsers = async prevTimestamp => {\r\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp);\r\n  const activeUsers = recentChanges.then(activeUsers =>\r\n    countUsers(activeUsers)\r\n  );\r\n  return [await activeUsers, newTimestamp];\r\n};\r\n\r\n/**\r\n * Batches a query to cirumvent the 50 items query limit\r\n *\r\n * @param {string} itemsKey the query key\r\n * @param {Array} items the items to add to the query\r\n * @param {string} endpoint the endpoint url\r\n * @param {Object} params the parameters of the query\r\n */\r\nexport const batchQuery = async (itemsKey, items, endpoint, params) => {\r\n  const result = [];\r\n  let batches = null;\r\n  if (items instanceof Array) {\r\n    batches = createBatch(items, MAX_QUERY_SIZE);\r\n  } else {\r\n    batches = [[items]];\r\n  }\r\n  const results = batches.map(async batch => {\r\n    params[itemsKey] = batch.join('|');\r\n    return query(endpoint, params, NUM_RETRIES)\r\n      .then(data => result.push(data))\r\n      .catch(err => null);\r\n  });\r\n  await Promise.all(results);\r\n  return result;\r\n};\r\n\r\n/**\r\n * @typedef {Object} RecentChanges\r\n * @property {number} newlen - the number of bytes the page uses after the change\r\n * @property {number} ns\r\n * @property {number} old_revid - The old revision id\r\n * @property {number} oldlen - the number of bytes the page uses before the change\r\n * @property {number} pageid - The page id\r\n * @property {number} rcid - The recent change id\r\n * @property {number} revid - The current revision id\r\n * @property {string} timestamp - Timestamp of change\r\n * @property {string} title - Title of the page changed\r\n * @property {string} type - Type of action e.g. \"new\", \"edit\"\r\n * @property {string} user - The username of the editor\r\n */\r\n\r\n/**\r\n * Queries the API for the most recent changes\r\n *\r\n * @param {string} prevTimestamp - Previous timestamp when the function was\r\n *        last called\r\n * @returns {(Promise.<RecentChanges[]> | string)[]}\r\n */\r\nexport const queryRecentChanges = prevTimestamp => {\r\n  let tmpTimestamp = new Date();\r\n  const newTimestamp = tmpTimestamp.toISOString();\r\n  tmpTimestamp = tmpTimestamp - 1000;\r\n  tmpTimestamp = new Date(tmpTimestamp).toISOString();\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'recentchanges',\r\n    rcprop: 'title|ids|timestamp|user|sizes',\r\n    rclimit: 'max',\r\n    rcstart: tmpTimestamp,\r\n    rcend: prevTimestamp,\r\n  };\r\n  const recentChanges = query(API_ENDPOINT, params, NUM_RETRIES)\r\n    .then(data => data.query.recentchanges)\r\n    .then(recentChanges => {\r\n      const revisionIds = recentChanges.map(recentChange => recentChange.revid);\r\n      return getScore(revisionIds).then(scores =>\r\n        recentChanges.map(recentChange => {\r\n          recentChange.scores = scores[recentChange.revid];\r\n          return recentChange;\r\n        })\r\n      );\r\n    });\r\n  return [recentChanges, newTimestamp];\r\n};\r\n\r\n/**\r\n * Returns the groups of each username in the input array\r\n *\r\n * @param {string[]} userNames - an array of usernames to fetch the group of\r\n * @returns {Map.<string, string[]>} - map of username to an array of groups\r\n *         they belong to\r\n */\r\nexport const getUserGroups = userNames => {\r\n  const key = 'ususers';\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'users',\r\n    usprop: 'groups',\r\n  };\r\n  const groups = batchQuery(key, userNames, API_ENDPOINT, params).then(data => {\r\n    const groups = {};\r\n    data.forEach(queryResult => {\r\n      const users = queryResult.query.users;\r\n      users.forEach(userObj => {\r\n        if (userObj.groups) {\r\n          groups[userObj.name] = userObj.groups;\r\n        }\r\n      });\r\n    });\r\n    return groups;\r\n  });\r\n  return groups;\r\n};\r\n\r\n// ~ Helper Functions ---------------------------------------------------------\r\n\r\n/**\r\n * Returns a the response of a query to the Wikidata API endpoint\r\n *\r\n * @param {Object} params - Object of parameters to use when querying\r\n * @param {number} n - Number of times to retry if failure occurs\r\n * @returns {Promise.<Object>}\r\n */\r\nconst query = async (endpoint, params, n) => {\r\n  try {\r\n    const paramsString = new URLSearchParams(params).toString();\r\n    const url = endpoint + '?' + paramsString + '&origin=*';\r\n    return await fetch(url).then(response => response.json());\r\n  } catch (err) {\r\n    if (n === 1) {\r\n      throw err;\r\n    }\r\n    return await setTimeout(query(endpoint, params, n - 1), 500);\r\n  }\r\n};\r\n\r\n/**\r\n * Retruns the score of the revision id to find out if the edit was harmful or not\r\n *\r\n * @param {number[]} revisionIds - Revision ids to obtain the score of\r\n * @returns {Promise.<Object>}\r\n */\r\nconst getScore = async revisionIds => {\r\n  if (revisionIds.length === 0) {\r\n    return;\r\n  }\r\n  const key = 'revids';\r\n  const params = {};\r\n  let scores = {};\r\n  return batchQuery(key, revisionIds, SCORING_ENDPOINT, params).then(\r\n    resultBatch => {\r\n      resultBatch.forEach(\r\n        result => (scores = { ...scores, ...result.wikidatawiki?.scores })\r\n      );\r\n      return scores;\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * Returns the number of times a page appeared on the recent changes feed sorted by\r\n * number of actions done on the page\r\n *\r\n * @param {RecentChanges[]} recentChanges - The array of recent changes from a query\r\n */\r\nconst countPageOccurances = recentChanges => {\r\n  const compare = (a, b) => b.actions - a.actions;\r\n  const titleCounts = {};\r\n  recentChanges.forEach(change => {\r\n    const actions = titleCounts[change.title] || 0;\r\n    titleCounts[change.title] = actions + 1;\r\n  });\r\n  const titles = Object.entries(titleCounts).map(([id, actions]) => ({\r\n    id,\r\n    actions,\r\n  }));\r\n  titles.sort(compare);\r\n  return titles;\r\n};\r\n\r\n/**\r\n * Returns the number of times a user appeared on the recent changes feed sorted by\r\n * number of actions done by that user\r\n *\r\n * @param {RecentChanges[]} recentChanges - The array of recent changes from a query\r\n */\r\nconst countUsers = recentChanges => {\r\n  const compare = (a, b) => b.actions - a.actions;\r\n  const userCounts = {};\r\n  recentChanges.forEach(change => {\r\n    const user = change.user;\r\n    const numActions = userCounts[user] || 0;\r\n    userCounts[user] = numActions + 1;\r\n  });\r\n  const users = Object.entries(userCounts).map(([username, actions]) => ({\r\n    username,\r\n    actions,\r\n  }));\r\n  const userNames = users.map(({ username }) => username);\r\n  getUserGroups(userNames).then(groups => {\r\n    users.forEach(userObj => (userObj.groups = groups[userObj.username]));\r\n    users.sort(compare);\r\n  });\r\n  return users;\r\n};\r\n\r\n/**\r\n * Splits up an array into smaller arrays\r\n *\r\n * @param {Array} array - Array to create batches from\r\n * @param {number} size - Batch size\r\n * @returns {Array} batches - An array containing the batches which are of\r\n *         length size\r\n */\r\nconst createBatch = (array, size) => {\r\n  const batches = [];\r\n  while (array.length > 0) {\r\n    batches.push(array.splice(0, size));\r\n  }\r\n  return batches;\r\n};\r\n","import { queryRecentChanges, getUserGroups } from './APIWrapper';\r\n\r\n/** Class which wraps the Wikidata API recent changes feed */\r\nclass FeedData {\r\n  /**\r\n   * Create a new feed data object\r\n   *\r\n   * @param {number} maxItems - the maximum number of items to keep in the\r\n   *        feed.\r\n   */\r\n  constructor(maxItems) {\r\n    this.changes = [];\r\n    this.maxItems = maxItems;\r\n    this.prevTimestamp = new Date().toISOString();\r\n  }\r\n\r\n  refresh() {\r\n    const [recentChanges, newTimeStamp] = queryRecentChanges(\r\n      this.prevTimestamp\r\n    );\r\n    recentChanges.then(changes => {\r\n      const usernames = changes.map(change => change.user);\r\n      getUserGroups(usernames).then(groups =>\r\n        changes.forEach(change => {\r\n          change.groups = groups[change.user];\r\n          this.changes.unshift(change);\r\n          if (this.changes.length > this.maxItems) {\r\n            this.changes.pop();\r\n          }\r\n        })\r\n      );\r\n    });\r\n    this.prevTimestamp = newTimeStamp;\r\n  }\r\n}\r\n\r\nexport default FeedData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport FeedData from '../Backend/FeedData';\r\nimport Navbar from '../Components/Navbar';\r\n// eslint-disable-next-line\r\nimport style from '../style.css'\r\n\r\n//Creates the feed shown on the dashboard, it updates in real time and highlights suspicious changes in red\r\n\r\nfunction Feed() {\r\n  const [feedData] = useState(new FeedData(30));\r\n  const [paused, setPaused] = useState(false);\r\n  const [recentChanges, setRecentChanges] = useState({\r\n    items: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const refresh = setInterval(() => {\r\n      if (!paused) {\r\n        feedData.refresh();\r\n      }\r\n      setRecentChanges({ items: feedData.changes });\r\n    }, 500);\r\n    return () => clearInterval(refresh);\r\n  }, [feedData, paused]);\r\n\r\n  function togglePause() {\r\n    setPaused(prevPause => !prevPause);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-blue text-left\">Most Recent Activity</h3>\r\n      <form className=\"text-left\" onChange={togglePause}>\r\n        <label>\r\n          <input type=\"checkbox\" /> Paused\r\n        </label>\r\n      </form>\r\n      <ul className=\"list-group\">\r\n        {recentChanges.items.map((item, index) => (\r\n          <li className=\"list-group-item text-left\" key={index}>\r\n            <div\r\n              className={\r\n                item.scores?.damaging?.score?.prediction ? 'text-red' : ''\r\n              }\r\n            >\r\n              {`User ${item.user} action ${item.type} on ${\r\n                item.title\r\n              } ${getTimeDifference(item.timestamp)} seconds ago`}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst getTimeDifference = toCompare =>\r\n  Math.round(\r\n    Math.abs(new Date().getTime() - new Date(toCompare).getTime()) / 1000\r\n  );\r\n\r\nexport default Feed;\r\n","import React, { Component } from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from '../Components/Navbar';\r\nimport Feed from '../Components/Feed';\r\n\r\n\r\n/*This is the home page and makes use of the Navbar, \r\nhomeNavContainer, homeStatsContainer and TitleContainer components */\r\n\r\nclass FeedData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { history: this.props.history };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar history={this.state.history} />\r\n        <div className=\"\">\r\n<Feed/>\r\n       </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedData;\r\n","import Card from 'react-bootstrap/Card';\r\nimport React, { Component } from 'react';\r\n\r\nclass GraphCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      title: this.props.title,\r\n      pageLink: this.props.pageLink,\r\n      graph: this.props.graph,\r\n    };\r\n  }\r\n\r\n  onClick = () => {\r\n    this.state.history.push(this.state.pageLink);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card onClick={this.onClick} tag=\"a\" className=\"graph-card\">\r\n        <Card.Body>\r\n          <Card.Title className=\"card-title\">{this.state.title}</Card.Title>\r\n          {this.state.graph}\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GraphCard;\r\n","import React, { Component } from 'react';\r\nimport { ResponsiveBar } from '@nivo/bar';\r\n\r\nclass SimpleBarGraph extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n      data: null,\r\n      fullGraph: this.props.fullGraph,\r\n    };\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  tooltip = function(click, url) {\r\n    return (\r\n      <div className=\"iframe-container\">\r\n        <iframe\r\n          src={url + click.indexValue}\r\n          className=\"iframe\"\r\n          title=\"tooltip-option-2\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  loadData = () => {\r\n    const getData = this.props.settings.getData.bind(this);\r\n    getData().then(data => {\r\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\r\n      this.setState({\r\n        loaded: true,\r\n        data: smlData,\r\n      });\r\n    });\r\n  };\r\n\r\n  refresh = async () => {\r\n    if (!this.props.paused) {\r\n      const method = this.props.settings.refreshMethod.bind(this);\r\n      await method();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.refreshInterval = setInterval(async () => {\r\n      await this.refresh();\r\n    }, this.props.settings.refreshTime);\r\n  }\r\n\r\n  render() {\r\n    let margin = {};\r\n    let label = null;\r\n    let classname = '';\r\n    let onClick = null;\r\n    let clickable = false;\r\n    let tooltip = null;\r\n    let legend = [];\r\n    const colorBy = this.props.settings.colorBy\r\n      ? this.props.settings.colorBy\r\n      : 'index';\r\n    if (this.state.fullGraph) {\r\n      if (this.props.settings.margin) {\r\n        margin = this.props.settings.margin;\r\n      } else {\r\n        margin = { top: 5, right: 30, bottom: 80, left: 80 };\r\n      }\r\n      if (this.props.settings.legend) {\r\n        legend = [this.props.settings.legend];\r\n      }\r\n      label = true;\r\n      classname = 'full-graph-container';\r\n      if (this.props.settings.onClick) {\r\n        onClick = this.props.settings.onClick;\r\n        clickable = true;\r\n      }\r\n      if (this.props.settings.tooltip) {\r\n        tooltip = this.props.settings.tooltip.bind(this);\r\n      }\r\n    } else {\r\n      margin = { top: 0, right: 0, bottom: 0, left: 0 };\r\n      label = false;\r\n      classname = 'Graph-Container-Card';\r\n    }\r\n    return (\r\n      <div>\r\n        {!this.state.loaded ? (\r\n          'Loading...'\r\n        ) : (\r\n          <div className={classname}>\r\n            <ResponsiveBar\r\n              data={this.state.data}\r\n              keys={this.props.settings.keys}\r\n              indexBy={this.props.settings.index}\r\n              margin={margin}\r\n              padding={0.3}\r\n              colors={{ scheme: this.props.settings.colors }}\r\n              colorBy={colorBy}\r\n              borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n              axisTop={null}\r\n              axisRight={null}\r\n              axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 30,\r\n                legend: this.props.settings.xAxis,\r\n                legendPosition: 'start',\r\n                legendOffset: 40,\r\n              }}\r\n              axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: this.props.settings.yAxis,\r\n                legendPosition: 'middle',\r\n                legendOffset: -60,\r\n              }}\r\n              enableLabel={label}\r\n              onClick={clickable ? onClick : function() {}}\r\n              animate={label}\r\n              isInteractive={label}\r\n              motionStiffness={90}\r\n              motionDamping={15}\r\n              tooltip={tooltip}\r\n              legends={legend}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleBarGraph;\r\n","import React, { Component } from 'react';\r\nimport { ResponsivePie } from '@nivo/pie';\r\n\r\nclass PieChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n      data: null,\r\n      fullGraph: this.props.fullGraph,\r\n    };\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshInterval = setInterval(async () => {\r\n      await this.refresh();\r\n    }, this.props.settings.refreshTime);\r\n  }\r\n\r\n  tooltip = function(click, url) {\r\n    return (\r\n      <div className=\"iframe-container\">\r\n        <iframe\r\n          src={url + click.label}\r\n          className=\"iframe\"\r\n          title=\"tooltip-option-2\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  loadData = () => {\r\n    const getData = this.props.settings.getData.bind(this);\r\n    getData().then(data => {\r\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\r\n      this.setState({\r\n        loaded: true,\r\n        data: smlData,\r\n      });\r\n    });\r\n  };\r\n\r\n  refresh = async () => {\r\n    if (!this.props.paused) {\r\n      this.loadData();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let margin = {};\r\n    let label = null;\r\n    let classname = '';\r\n    let onClick = () => {};\r\n    let tooltip = null;\r\n    let colors = { scheme: this.props.settings.colors };\r\n    if (this.props.settings.colorFunction) {\r\n      colors = this.props.settings.colorFunction;\r\n    }\r\n    if (this.state.fullGraph) {\r\n      margin = { top: 30, right: 30, bottom: 30, left: 30 };\r\n      label = true;\r\n      classname = 'full-graph-container';\r\n\r\n      if (this.props.settings.onClick) {\r\n        onClick = this.props.settings.onClick;\r\n      }\r\n      if (this.props.settings.tooltip) {\r\n        tooltip = this.props.settings.tooltip.bind(this);\r\n      }\r\n    } else {\r\n      margin = { top: 0, right: 0, bottom: 0, left: 0 };\r\n      label = false;\r\n      classname = 'Graph-Container-Card';\r\n    }\r\n    return (\r\n      <div>\r\n        {!this.state.loaded ? (\r\n          'Loading...'\r\n        ) : (\r\n          <div className={classname}>\r\n            <ResponsivePie\r\n              data={this.state.data}\r\n              margin={margin}\r\n              innerRadius={0.4}\r\n              padAngle={0}\r\n              cornerRadius={0}\r\n              colors={colors}\r\n              enableRadialLabels={label}\r\n              radialLabel=\"label\"\r\n              radialLabelsSkipAngle={10}\r\n              radialLabelsTextXOffset={6}\r\n              radialLabelsTextColor=\"#333333\"\r\n              radialLabelsLinkOffset={0}\r\n              radialLabelsLinkDiagonalLength={16}\r\n              radialLabelsLinkHorizontalLength={24}\r\n              radialLabelsLinkStrokeWidth={1}\r\n              radialLabelsLinkColor={{ from: 'color' }}\r\n              enableSlicesLabels={label}\r\n              slicesLabelsSkipAngle={10}\r\n              slicesLabelsTextColor=\"#333333\"\r\n              animate={true}\r\n              motionStiffness={90}\r\n              motionDamping={15}\r\n              // defs={[\r\n              //   {\r\n              //     id: 'dots',\r\n              //     type: 'patternDots',\r\n              //     background: 'inherit',\r\n              //     color: 'rgba(255, 255, 255, 0.3)',\r\n              //     size: 4,\r\n              //     padding: 1,\r\n              //     stagger: true,\r\n              //   },\r\n              //   {\r\n              //     id: 'lines',\r\n              //     type: 'patternLines',\r\n              //     background: 'inherit',\r\n              //     color: 'rgba(255, 255, 255, 0.3)',\r\n              //     rotation: -45,\r\n              //     lineWidth: 6,\r\n              //     spacing: 10,\r\n              //   },\r\n              // ]}\r\n              isInteractive={this.state.fullGraph}\r\n              onClick={onClick}\r\n              tooltip={tooltip}\r\n              defs={[\r\n                {\r\n                  id: 'lines',\r\n                  type: 'patternLines',\r\n                  background: 'inherit',\r\n                  color: 'rgba(255, 255, 255, 0.4)',\r\n                  rotation: -45,\r\n                  lineWidth: 6,\r\n                  spacing: 10,\r\n                },\r\n              ]}\r\n              fill={[\r\n                {\r\n                  match: {\r\n                    type: 'edit',\r\n                  },\r\n                  id: 'lines',\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PieChart;\r\n","import React, { Component } from 'react';\r\nimport Navbar from '../Components/Navbar';\r\n\r\nclass GraphPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n      title: this.props.name,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar history={this.state.history} />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3 col-12 infobox\">\r\n            <h2>{this.state.title}</h2>\r\n            <p />\r\n            <p>{this.props.explanation}</p>\r\n            <p>\r\n              <form onChange={this.props.handlePause}>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"paused\"\r\n                    name=\"paused\"\r\n                    value={this.props.paused}\r\n                  />{' '}\r\n                  {'Paused'}\r\n                </label>\r\n              </form>\r\n            </p>\r\n          </div>\r\n          <div className=\"col-lg-9 col-12\">\r\n            {this.props.graph}\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GraphPage;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\r\nimport { getRecentActiveUsers } from '../Backend/APIWrapper';\r\n\r\nexport const MostActiveUsersGraphSettings = {\r\n  getData: async function() {\r\n    let [data, newTimestamp] = await getRecentActiveUsers(\r\n      new Date().toISOString()\r\n    );\r\n    data = data.slice(0, 50);\r\n    this.setState({\r\n      fullData: data,\r\n      prevTimestamp: newTimestamp,\r\n    });\r\n    return data;\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async function() {\r\n    let [data, newTimestamp] = await getRecentActiveUsers(\r\n      this.state.prevTimestamp\r\n    );\r\n    this.setState({ prevTimestamp: newTimestamp });\r\n    data = data.slice(0, 50);\r\n    if (this.state.fullData) {\r\n      const fullData = this.state.fullData;\r\n      data.forEach(userAdditions => {\r\n        let index = -1;\r\n        for (let i = 0; i < fullData.length; i += 1) {\r\n          if (fullData[i].username === userAdditions.username) {\r\n            index = i;\r\n          }\r\n        }\r\n        if (index !== -1) {\r\n          fullData[index].actions += userAdditions.actions;\r\n        } else {\r\n          fullData.push(userAdditions);\r\n        }\r\n      });\r\n      fullData.sort((a, b) => b.actions - a.actions);\r\n      fullData.slice(0, 50);\r\n      const smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10);\r\n      smlData.forEach(user => {\r\n        if (user.groups !== undefined && user.groups.includes('bot')) {\r\n          user.bot = user.actions;\r\n          user.human = 0;\r\n        } else {\r\n          user.bot = 0;\r\n          user.human = user.actions;\r\n        }\r\n      });\r\n\r\n      this.setState({ fullData: fullData, data: smlData });\r\n    } else {\r\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\r\n\r\n      this.setState({ data: smlData });\r\n    }\r\n  },\r\n  keys: ['bot', 'human'],\r\n  index: 'username',\r\n  xAxis: 'username',\r\n  yAxis: 'actions',\r\n  colors: 'set2',\r\n  colorBy: 'id',\r\n  legend: {\r\n    dataFrom: 'keys',\r\n    anchor: 'bottom-right',\r\n    direction: 'column',\r\n    justify: false,\r\n    translateX: 120,\r\n    translateY: 0,\r\n    itemsSpacing: 2,\r\n    itemWidth: 100,\r\n    itemHeight: 20,\r\n    itemDirection: 'left-to-right',\r\n    itemOpacity: 0.85,\r\n    symbolSize: 20,\r\n    effects: [\r\n      {\r\n        on: 'hover',\r\n        style: {\r\n          itemOpacity: 1,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  margin: { top: 5, right: 130, bottom: 50, left: 80 },\r\n  onClick: function(click) {\r\n    window.open(\r\n      'https://www.wikidata.org/wiki/User:' + click.indexValue,\r\n      '_blank'\r\n    );\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:');\r\n  },\r\n};\r\n\r\nclass MostActiveUsers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    };\r\n  }\r\n\r\n  handlePause = event => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          'A live view of the users active right now. The graph shows users active since this page was loaded.' +\r\n          \" Hover over a bar to get a preview of the user's page, or click to open the user's page in a new tab.\"\r\n        }\r\n        graph={\r\n          <SimpleBarGraph\r\n            fullGraph={true}\r\n            settings={MostActiveUsersGraphSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name=\"Most Active Users\"\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default MostActiveUsers;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\r\nimport { getMostActivePages } from '../Backend/APIWrapper';\r\n\r\nexport const MostActivePagesGraphSettings = {\r\n  getData: async function() {\r\n    let [data, newTimestamp] = await getMostActivePages(\r\n      new Date().toISOString()\r\n    );\r\n    data = data.slice(0, 50);\r\n    this.setState({\r\n      fullData: data,\r\n      prevTimestamp: newTimestamp,\r\n    });\r\n    return data;\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async function() {\r\n    let [data, newTimestamp] = await getMostActivePages(\r\n      this.state.prevTimestamp\r\n    );\r\n    this.setState({ prevTimestamp: newTimestamp });\r\n    data = data.slice(0, 50);\r\n    if (this.state.fullData) {\r\n      const fullData = this.state.fullData;\r\n      data.forEach(pageAdditions => {\r\n        let index = -1;\r\n        for (let i = 0; i < fullData.length; i += 1) {\r\n          if (fullData[i].id === pageAdditions.id) {\r\n            index = i;\r\n          }\r\n        }\r\n        if (index !== -1) {\r\n          fullData[index].actions += pageAdditions.actions;\r\n        } else {\r\n          fullData.push(pageAdditions);\r\n        }\r\n      });\r\n      fullData.sort((a, b) => b.actions - a.actions);\r\n      fullData.slice(0, 50);\r\n      const smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10);\r\n\r\n      this.setState({ fullData: fullData, data: smlData });\r\n    } else {\r\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\r\n\r\n      this.setState({ data: smlData });\r\n    }\r\n  },\r\n  keys: ['actions'],\r\n  index: 'id',\r\n  xAxis: 'pages',\r\n  yAxis: 'actions',\r\n  colors: 'pastel1',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.indexValue, '_blank');\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\r\n  },\r\n};\r\n\r\nclass MostActivePages extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    };\r\n  }\r\n\r\n  handlePause = event => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          'A live view of the pages being edited right now. The graph shows pages edited since this page was loaded.' +\r\n          ' Hover over a bar to get a preview of the page, or click to open the page in a new tab.'\r\n        }\r\n        graph={\r\n          <SimpleBarGraph\r\n            fullGraph={true}\r\n            settings={MostActivePagesGraphSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name=\"Most Active Pages\"\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default MostActivePages;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport PieChart from '../Components/PieChart';\r\nimport { getRecentLargestEdits } from '../Backend/APIWrapper';\r\n\r\nexport const LargestRecentEditsSettings = {\r\n  getData: getRecentLargestEdits,\r\n  refreshTime: 2000,\r\n  refreshMethod: getRecentLargestEdits,\r\n  colorBy: 'type',\r\n  colors: 'set2',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\r\n  },\r\n};\r\n\r\nclass LargestRecentEdits extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    };\r\n  }\r\n\r\n  handlePause = event => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          <div>\r\n            {'The largest of the last 500 edits. The number in each of the sections represents the size of the edit in bytes.' +\r\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\r\n            <p>\r\n              <img\r\n                className=\"legend\"\r\n                src={require('../legend.svg')}\r\n                alt=\"Legend\"\r\n              />\r\n            </p>\r\n          </div>\r\n        }\r\n        graph={\r\n          <PieChart\r\n            fullGraph={true}\r\n            settings={LargestRecentEditsSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name=\"Largest Recent Edits\"\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default LargestRecentEdits;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport PieChart from '../Components/PieChart';\r\nimport { getRecentEditsWithSize } from '../Backend/APIWrapper';\r\n\r\nexport const RecentEditSizeSettings = {\r\n  getData: async () => {\r\n    const data = await getRecentEditsWithSize();\r\n    data.forEach(item => {\r\n      item.id = item.revid.toString();\r\n      item.value = Math.abs(item.newlen - item.oldlen);\r\n      item.label = item.title;\r\n    });\r\n    return data;\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async () => {\r\n    const data = await getRecentEditsWithSize();\r\n    data.forEach(item => {\r\n      item.value = Math.abs(item.newlen - item.oldlen);\r\n      item.id = item.revid.toString();\r\n      item.label = item.title;\r\n    });\r\n    return data;\r\n  },\r\n  colorBy: 'type',\r\n  colors: 'set1',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\r\n  },\r\n};\r\n\r\nclass RecentEditSize extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    };\r\n  }\r\n\r\n  handlePause = event => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          <div>\r\n            {'The size of the last 30 edits. The number in each of the sections represents the size of the edit in bytes.' +\r\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\r\n            <p>\r\n              <img\r\n                className=\"legend\"\r\n                src={require('../legend.svg')}\r\n                alt=\"Legend\"\r\n              />\r\n            </p>\r\n          </div>\r\n        }\r\n        graph={\r\n          <PieChart\r\n            fullGraph={true}\r\n            settings={RecentEditSizeSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name=\"Recent Edit Size\"\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default RecentEditSize;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport PieChart from '../Components/PieChart';\r\nimport { getRecentEditsWithFlags } from '../Backend/APIWrapper';\r\n\r\nexport const ProportionFlaggedSettings = {\r\n  getData: getRecentEditsWithFlags,\r\n  refreshTime: 2000,\r\n  refreshMethod: getRecentEditsWithFlags,\r\n  colorFunction: d => d.color,\r\n  name: 'Proportion Of Edits Flagged',\r\n};\r\n\r\nclass ProportionFlagged extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    };\r\n  }\r\n\r\n  handlePause = event => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation=\"The proportion of the last 50 edits that was flagged as potentially damaging.\"\r\n        graph={\r\n          <PieChart\r\n            fullGraph={true}\r\n            settings={ProportionFlaggedSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name={ProportionFlaggedSettings.name}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default ProportionFlagged;\r\n","import React, { Component } from 'react';\r\nimport Navbar from '../Components/Navbar';\r\nimport GraphCard from '../Components/GraphCard';\r\nimport FeedData from '../Components/Feed';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\r\nimport PieChart from '../Components/PieChart';\r\nimport { MostActiveUsersGraphSettings } from './MostActiveUsers';\r\nimport { MostActivePagesGraphSettings } from './MostActivePages';\r\nimport { LargestRecentEditsSettings } from './LargestRecentEdits';\r\nimport { RecentEditSizeSettings } from './RecentEditSize';\r\nimport { ProportionFlaggedSettings } from './ProportionFlagged';\r\n\r\n//This is the dashboard page, it shows the feed and all of our graphs\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar />\r\n        <div className=\"row justify-content-left text-dark\">\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\r\n            <div className=\"feedContainer\">\r\n              <FeedData />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\r\n            <div className=\"deck-container\">\r\n              <CardDeck className=\"deck\">\r\n                <GraphCard\r\n                  title=\"Recent Edit Size\"\r\n                  pageLink=\"recent-edit-size\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <PieChart\r\n                      paused={true}\r\n                      fullGraph={false}\r\n                      settings={RecentEditSizeSettings}\r\n                    />\r\n                  }\r\n                />\r\n                <GraphCard\r\n                  title=\"Most Active Users\"\r\n                  pageLink=\"most-active-users\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <SimpleBarGraph\r\n                      paused={false}\r\n                      fullGraph={false}\r\n                      settings={MostActiveUsersGraphSettings}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n              <CardDeck className=\"deck\">\r\n                <GraphCard\r\n                  title=\"Most Active Pages\"\r\n                  pageLink=\"most-active-pages\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <SimpleBarGraph\r\n                      paused={false}\r\n                      fullGraph={false}\r\n                      settings={MostActivePagesGraphSettings}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n\r\n              <CardDeck className=\"deck\">\r\n                <GraphCard\r\n                  title=\"Largest Recent Edits\"\r\n                  pageLink=\"largest-recent-edits\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <PieChart\r\n                      paused={true}\r\n                      fullGraph={false}\r\n                      settings={LargestRecentEditsSettings}\r\n                    />\r\n                  }\r\n                />\r\n                <GraphCard\r\n                  title={ProportionFlaggedSettings.name}\r\n                  pageLink=\"proportion-flagged\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <PieChart\r\n                      paused={false}\r\n                      fullGraph={false}\r\n                      settings={ProportionFlaggedSettings}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\r\nimport { getMostEditsUsers } from '../Backend/APIWrapper';\r\n\r\nexport const UsersByMostEditsGraphSettings = {\r\n  getData: async function() {\r\n    return await getMostEditsUsers();\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: function() {\r\n    this.loadData();\r\n  },\r\n  keys: ['editcount'],\r\n  index: 'name',\r\n  xAxis: 'users',\r\n  yAxis: 'edit count',\r\n  colors: 'paired',\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:');\r\n  },\r\n};\r\n\r\nclass UsersByMostEditsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    };\r\n  }\r\n\r\n  handlePause = event => {\r\n    this.setState({ paused: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        graph={\r\n          <SimpleBarGraph\r\n            fullGraph={true}\r\n            settings={UsersByMostEditsGraphSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name=\"Users By Most Edits\"\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default UsersByMostEditsPage;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from '../Components/Navbar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nclass AboutPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { history: this.props.history };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"aboutPageContainer\">\r\n        <Navbar history={this.state.history} />\r\n        <div className=\" text-left\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6 col-sm-12  aboutPageContent\">\r\n              <div className=\"explainContainer text-left\">\r\n                <h3 className=\"text-blue\">Why we made our project</h3>\r\n                <p>\r\n                  We are a group of Computer Science students studying in\r\n                  Trinity College Dublin. We undertake a module in which we are\r\n                  given real world projects from a variety of individuals,\r\n                  researchers and businesses.\r\n                </p>\r\n                <p>\r\n                  Our clients were Fabrizio and Damien who work in the Trinity\r\n                  ADAPT research center and they tasked us to create a website\r\n                  that will visualise various changes to Wikidata in\r\n                  quasi-real-time. Its targeted users are researchers and should\r\n                  make it easier to identify spam and incorrect or malicious\r\n                  edits to Wikidata.\r\n                </p>\r\n              </div>\r\n              <br />\r\n              <div className=\" licenseContainer text-left\">\r\n                <h3 className=\"text-blue\">Licensing</h3>\r\n                <p>\r\n                  We have insured all libraries and all project dependencies\r\n                  licenses cover our web apps intended use.\r\n                </p>\r\n                <p>\r\n                  We have decided to use an{' '}\r\n                  <a href=\"https://opensource.org/licenses/MIT\">MIT license</a>{' '}\r\n                  for this project.\r\n                </p>\r\n                <p>\r\n                  More in depth information along with the projects source code\r\n                  can be found on the projects{' '}\r\n                  <a href=\"https://github.com/isobelm/Software-Engineering\">\r\n                    Github.\r\n                  </a>{' '}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 col-sm-12 profiles\">\r\n              <div className=\"client\">\r\n                <h3 className=\"text-red\">Clients</h3>\r\n                <div className=\"card-deck\">\r\n                  <div className=\"card card-profile\">\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title text-center \">Damien Graux</h5>\r\n                      <div className=\"text-center\">\r\n                        <a\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"GH aBlack\"\r\n                          href=\"https://dgraux.github.io/\"\r\n                        >\r\n                          <FontAwesomeIcon icon={faLink} />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card card-profile\">\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title text-center\">\r\n                        Fabrizio Orlandi\r\n                      </h5>\r\n                      <div className=\"text-center\">\r\n                        <a\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"GH aBlack\"\r\n                          href=\"https://www.scss.tcd.ie/personnel/orlandif\"\r\n                        >\r\n                          <FontAwesomeIcon icon={faLink} />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <h3 className=\"text-red\">Students</h3>\r\n              <div className=\"card-deck  text-center\">\r\n                <div className=\"card card-profile\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center\">\r\n                      Brian\r\n                      <br /> Lynch\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      <b>3rd Year CS</b>\r\n                      <br />\r\n                      Frontend Team\r\n                    </p>\r\n                    <div className=\"text-center\">\r\n                      <a\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"GH aBlack\"\r\n                        href=\"https://github.com/brianlunch\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faGithub} />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card card-profile\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center\">\r\n                      Isobel\r\n                      <br /> Mahon\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      <b>3rd Year CS</b>\r\n                      <br />\r\n                      Frontend Team\r\n                    </p>\r\n                    <div className=\"text-center\">\r\n                      <a\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"GH aBlack\"\r\n                        href=\"https://github.com/isobelm\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faGithub} />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card card-profile\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center\">\r\n                      Odhran\r\n                      <br /> Mullen\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      <b>3rd Year CSB</b>\r\n                      <br />\r\n                      Backend Team\r\n                    </p>\r\n                    <div className=\"text-center\">\r\n                      <a\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"GH aBlack\"\r\n                        href=\"https://github.com/omullan\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faGithub} />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-deck text-center\">\r\n                <div className=\"card card-profile\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center\">\r\n                      Alex\r\n                      <br /> Mahon\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      <b>2nd Year CS</b>\r\n                      <br />\r\n                      Frontend Team\r\n                    </p>\r\n                    <div className=\"text-center\">\r\n                      <a\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"GH aBlack\"\r\n                        href=\"https://github.com/Juuiko\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faGithub} />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card card-profile\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center\">\r\n                      Flora\r\n                      <br /> Molnar\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      <b>2nd Year CSB</b>\r\n                      <br />\r\n                      Frontend Team\r\n                    </p>\r\n                    <div className=\"text-center\">\r\n                      <a\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"GH aBlack\"\r\n                        href=\"https://github.com/flora-m\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faGithub} />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card card-profile\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center\">\r\n                      Lexes\r\n                      <br /> Mantiquilla\r\n                    </h5>\r\n                    <p className=\"card-text\">\r\n                      <b>2nd Year CS</b>\r\n                      <br />\r\n                      Backend Team\r\n                    </p>\r\n                    <div className=\"text-center\">\r\n                      <a\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"GH aBlack\"\r\n                        href=\"https://github.com/lexesjan\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faGithub} />\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutPage;\r\n","import React from 'react';\r\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\r\nimport HomePage from './Pages/HomePage';\r\nimport history from './Utils/History';\r\nimport FeedData from './Pages/FeedData';\r\nimport TestPage from './Pages/TestPage';\r\nimport UsersByMostEditsPage from './Pages/UsersByMostEditsPage';\r\nimport MostActiveUsers from './Pages/MostActiveUsers';\r\nimport MostActivePages from './Pages/MostActivePages';\r\nimport RecentEditSize from './Pages/RecentEditSize';\r\nimport LargestRecentEdits from './Pages/LargestRecentEdits';\r\nimport ProportionFlagged from './Pages/ProportionFlagged';\r\nimport AboutPage from './Pages/AboutPage';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={process.env.PUBLIC_URL} history={history}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route exact path=\"/page\" component={TestPage} />\r\n          <Route\r\n            exact\r\n            path=\"/users-by-most-edits\"\r\n            component={UsersByMostEditsPage}\r\n          />\r\n          <Route exact path=\"/most-active-users\" component={MostActiveUsers} />\r\n          <Route exact path=\"/recent-edit-size\" component={RecentEditSize} />\r\n          <Route\r\n            exact\r\n            path=\"/largest-recent-edits\"\r\n            component={LargestRecentEdits}\r\n          />\r\n          <Route exact path=\"/most-active-pages\" component={MostActivePages} />\r\n          <Route\r\n            exact\r\n            path=\"/proportion-flagged\"\r\n            component={ProportionFlagged}\r\n          />\r\n          <Route exact path=\"/about-page\" component={AboutPage} />\r\n          <Route exact path=\"/feed\" component={FeedData} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}