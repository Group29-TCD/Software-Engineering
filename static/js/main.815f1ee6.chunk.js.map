{"version":3,"sources":["legend.svg","Components/TitleContainer.js","Platform/ColorScheme.jsx","Components/DarkModeToggle.jsx","Components/Navbar.jsx","Components/HomeNavContainer.js","Components/HomeStats.js","Pages/HomePage.jsx","Utils/History.js","Backend/APIWrapper.js","Backend/FeedData.js","Components/Feed.jsx","Pages/FeedData.jsx","Components/GraphCard.jsx","Components/SimpleBarGraph.jsx","Components/PieChart.jsx","Pages/GraphPage.jsx","Pages/MostActiveUsers.jsx","Pages/MostActivePages.jsx","Pages/LargestRecentEdits.jsx","Pages/RecentEditSize.jsx","Pages/ProportionFlagged.jsx","Components/PieChartRefresh.jsx","Backend/Cache.js","Backend/searchingFunctionality.js","Pages/NumberOfChanges.jsx","Pages/TestPage.jsx","Pages/UsersByMostEditsPage.jsx","Pages/AboutPage.jsx","Components/SearchBar.js","Components/UserFeed.jsx","Components/GraphCardSearch.jsx","Pages/NumberOfChangesUser.jsx","Components/CalendarGraph.jsx","Pages/UserContributionsOverTime.jsx","Pages/UsersSearchPage.jsx","Components/PageFeed.jsx","Pages/PageRevisionsOverTime.jsx","Pages/PageRevisionsPage.jsx","Pages/TestComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["TitleContainer","className","this","props","title","subtitle","React","Component","ColorSchemeContext","createContext","ColorSchemeProvider","useState","colorScheme","setColorScheme","Provider","value","toggleColorScheme","document","body","classList","remove","add","children","DarkModeToggle","useContext","checked","onChange","event","icons","unchecked","aria-label","NavbarLocal","history","activePage","window","location","href","homeClassName","endsWith","dashboardClassName","feedClassName","userSearchClassName","pageRevisionsClassName","aboutUsClassName","githubClassName","Navbar","Collapse","Nav","Link","as","to","target","rel","HomeNavContainer","styled","btnTitle1","btnTitle2","btnLink","type","btnStyle","btnText","HomeStats","state","text","errorCode","updateStats","$","ajax","url","success","response","html","find","intervalID","setInterval","clearInterval","id","HomePage","icon","faBars","faChartLine","faUser","createBrowserHistory","API_ENDPOINT","MEMORY_MODE","mode","getMostEditsUsers","a","compare","b","editcount","users","query","action","format","list","auprop","aulimit","auwitheditsonly","auactiveusers","then","data","allusers","sort","getRecentEditsWithSize","edits","rcprop","rclimit","result","recentchanges","getRecentEditsWithFlags","revids","map","recentChange","revid","getScore","scores","label","color","Object","values","forEach","score","undefined","damaging","prediction","getRecentLargestEdits","editList","item","Math","abs","newlen","oldlen","toString","getMostActivePages","prevTimestamp","queryRecentChanges","recentChanges","newTimestamp","activePages","countPageOccurances","getRecentActiveUsers","activeUsers","countUsers","batchQuery","itemsKey","items","endpoint","params","batches","Array","createBatch","results","batch","join","push","catch","err","Promise","all","tmpTimestamp","Date","toISOString","rcstart","rcend","revisionIds","getUserGroups","userNames","usprop","groups","queryResult","userObj","name","n","paramsString","URLSearchParams","fetch","json","setTimeout","length","resultBatch","wikidatawiki","titleCounts","change","actions","titles","entries","userCounts","user","numActions","username","array","size","splice","FeedData","maxItems","changes","newTimeStamp","usernames","unshift","pop","getTimeDifference","toCompare","round","getTime","Feed","feedData","paused","setPaused","setRecentChanges","useEffect","refresh","prevPause","index","timestamp","GraphCard","onClick","pageLink","graph","Card","tag","Body","Title","SimpleBarGraph","tooltip","click","src","indexValue","loadData","settings","getData","bind","smlData","slice","fullGraph","setState","loaded","method","refreshMethod","refreshInterval","refreshTime","margin","classname","clickable","legend","colorBy","top","right","bottom","left","keys","indexBy","padding","colors","scheme","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","xAxis","legendPosition","legendOffset","axisLeft","yAxis","enableLabel","animate","isInteractive","motionStiffness","motionDamping","legends","PieChart","colorFunction","innerRadius","padAngle","cornerRadius","enableRadialLabels","radialLabel","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","enableSlicesLabels","slicesLabelsSkipAngle","slicesLabelsTextColor","defs","background","rotation","lineWidth","spacing","fill","match","GraphPage","explanation","handlePause","MostActiveUsersGraphSettings","fullData","userAdditions","i","includes","bot","human","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","open","MostActiveUsers","MostActivePagesGraphSettings","pageAdditions","MostActivePages","LargestRecentEditsSettings","LargestRecentEdits","require","alt","RecentEditSizeSettings","RecentEditSize","ProportionFlaggedSettings","ProportionFlagged","PieChartRefresh","dataFinished","loadDataCont","initialCall","refreshCont","changeValue","initialWait","loading","Data","time","now","Cache","searchId","cleanCache","oldest","WIKIDATA_ENDPOINT","WIKIPEDIA_ENDPOINT_SEARCH","userSearchCache","XMLHttpRequest","pageRevCache","wikibaseCache","prefixCache","userSearch","cacheResult","getCache","uclimit","ucuser","wikipediaQuery","userContributionsSeperator","usercontribs","addCache","userSearchCont","cont","uccontinue","pageRevisionsSearch","searchitem","getWikibaseItem","getRevisionsOfPage","pageRevisionsSearchCont","getRevisionsOfPageCont","extraResult","json1","temp","hasOwnProperty","pageprops","wikibase_item","getRevisions","revisions","searchItem","prop","pages","qid","rvprops","rvlimit","getRevisionsHelper","rvcontinue","getPrefixSearch","pssearch","NumberOfChangesSettings","searchValue","str","keyValue","myMap","Map","has","set","reduce","s","o","j","singleArray","concat","NumberOfChanges","key","onRef","search","e","onInput","console","log","CardDeck","UsersByMostEditsGraphSettings","UsersByMostEditsPage","AboutPage","setData","currentStudent","firstName","lastName","year","team","github","studentList","faLink","faGithub","SearchBar","setSearch","suggestions","setSuggestions","pub","setPub","parseData","prefixsearch","obj","sugg","pageid","handleSubmit","preventDefault","autoComplete","onSubmit","height","display","flexDirection","position","backgroundColor","marginRight","width","borderStyle","suggestion","PageFeed","max","togglePause","utils","comment","GraphCardSearch","NumberOfChangesUserSettings","CalendarGraph","startDate","findStartDate","todaysDate","findTodaysDate","render","emptyColor","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","itemCount","today","getFullYear","getMonth","getDate","UserContributionsOverTimeSettings","nextVals","day","UserContributionsOverTime","UsersSearchPage","checkUser","ifConfirm","firmsList","invalidSearch","bool","feed","onclick","overTime","UserFeed","ref","SearchSettings","NumberOfChangesUser","PageRevisionsOverTimeSettings","PageRevisionsOverTime","PageRevisionsPage","val","searchSuggestions","TestComponent","justifyContent","App","basename","process","exact","path","component","TestPage","split","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.815f1ee6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/legend.0f000e53.svg\";","import React from 'react';\n\nclass TitleContainer extends React.Component {\n  render() {\n    return (\n      <div className=\" text-left\">\n        <h1 className=\"text-left  display-3\">\n          <b>{this.props.title}</b>\n        </h1>\n        <h4>{this.props.subtitle}</h4>\n      </div>\n    );\n  }\n}\n\nexport default TitleContainer;\n","import React, { createContext, useContext, useState } from 'react';\n\n/* Author: Jay Cowan\nThis component provides the context to the app to determine the color scheme of the application currently implemented\nusing strings so that themes other than dark or light may be implemented.\nUses React Provider to pass state to its children, and thus is one of the parent components of the application\n */\n\nconst ColorSchemeContext = createContext();\n\nfunction ColorSchemeProvider(props) {\n  const [colorScheme, setColorScheme] = useState('light');\n  const toggleColorScheme = () => {\n    setColorScheme(colorScheme === 'dark' ? 'light' : 'dark');\n    // No clue why but for some reason the inverse works on toggle for switching the background\n    if (colorScheme === 'dark') {\n      document.body.classList.remove('dark');\n    } else {\n      document.body.classList.add('dark');\n    }\n  };\n  return (\n    <div>\n      <ColorSchemeContext.Provider value={{ colorScheme, toggleColorScheme }}>\n        {props.children}\n      </ColorSchemeContext.Provider>\n    </div>\n  );\n}\n\nexport { ColorSchemeContext, ColorSchemeProvider };\n","import React, { useContext } from 'react';\nimport { ColorSchemeContext } from '../Platform/ColorScheme';\nimport Toggle from 'react-toggle';\nimport 'react-toggle/style.css';\n\nexport const DarkModeToggle: React.FC = () => {\n  const { colorScheme, toggleColorScheme } = useContext(ColorSchemeContext);\n\n  return (\n    <Toggle\n      className=\"dark-mode-toggle\"\n      checked={colorScheme === 'dark'}\n      onChange={event => toggleColorScheme()}\n      icons={{ checked: '🌙', unchecked: '🔆' }}\n      aria-label=\"Dark mode toggle\"\n    />\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { DarkModeToggle } from './DarkModeToggle';\nimport { ColorSchemeContext } from '../Platform/ColorScheme';\n\n//Creates the Navbar shown on all pages\n\nexport function NavbarLocal(props) {\n  const [history, setHistory] = useState(props.history);\n  // var isActive = this.context.router.route.location.pathname\n  const activePage = window.location.href;\n  const { colorScheme, setColorScheme } = useContext(ColorSchemeContext);\n  // handle class names if this is the active page for styling\n  let homeClassName = activePage.endsWith('/')\n    ? 'nav-link--active'\n    : 'nav-link';\n\n  let dashboardClassName = activePage.endsWith('/page')\n    ? 'nav-link--active'\n    : 'nav-link';\n\n  let feedClassName = activePage.endsWith('/feed')\n    ? 'nav-link--active'\n    : 'nav-link';\n\n  let userSearchClassName = activePage.endsWith('/user-search')\n    ? 'nav-link--active'\n    : 'nav-link';\n\n  let pageRevisionsClassName = activePage.endsWith('/page-revisions')\n    ? 'nav-link--active'\n    : 'nav-link';\n\n  let aboutUsClassName = activePage.endsWith('/about-page')\n    ? 'nav-link--active'\n    : 'nav-link';\n  let githubClassName = activePage.endsWith('/ksknc')\n    ? 'nav-link--active'\n    : 'nav-link';\n\n  // Toggle dark mode\n  if (colorScheme === 'dark') {\n    homeClassName += ' dark';\n    dashboardClassName += ' dark';\n    feedClassName += ' dark';\n    userSearchClassName += ' dark';\n    pageRevisionsClassName += ' dark';\n    aboutUsClassName += ' dark';\n    githubClassName += ' dark';\n  }\n\n  return (\n    <div>\n      <Navbar>\n        <Navbar.Collapse>\n          <Nav>\n            <Nav.Link as={Link} to=\"/\" className={homeClassName}>\n              Home\n            </Nav.Link>\n\n            <Nav.Link as={Link} to=\"/page\" className={dashboardClassName}>\n              Dashboard\n            </Nav.Link>\n\n            <Nav.Link as={Link} to=\"/feed\" className={feedClassName}>\n              Feed\n            </Nav.Link>\n\n            <Nav.Link\n              as={Link}\n              to=\"/user-search\"\n              className={userSearchClassName}\n            >\n              User Search\n            </Nav.Link>\n\n            <Nav.Link\n              as={Link}\n              to=\"/page-revisions\"\n              className={pageRevisionsClassName}\n            >\n              Page Revisions\n            </Nav.Link>\n\n            <Nav.Link as={Link} to=\"/about-page\" className={aboutUsClassName}>\n              About Us\n            </Nav.Link>\n\n            <a\n              as={Link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://github.com/JeremieSD/Software-Engineering\"\n              className={githubClassName}\n            >\n              Github Project\n            </a>\n            <DarkModeToggle />\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavbarLocal;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//This class takes in a title and a description and displays them as shown on the homepage\n\nclass HomeNavContainer extends Component {\n  render() {\n    return (\n      <div className=\"ting\">\n        <h2 className={this.props.styled}>{this.props.btnTitle1}</h2>\n        <h2 className={this.props.styled}>{this.props.btnTitle2}</h2>\n        <br />\n        <Link to={this.props.btnLink}>\n          <button type=\"button\" className={this.props.btnStyle}>\n            {this.props.btnText}\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default HomeNavContainer;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ListGroup } from 'react-bootstrap';\nimport $ from 'jquery';\n\n//These load the statistics from a server we set up and displays them on the homepage\n\nclass HomeStats extends Component {\n  state = {\n    text: 'something',\n    errorCode: 'Loading...',\n  };\n\n  componentDidMount() {\n    this.updateStats();\n    this.intervalID = setInterval(() => this.updateStats(), 5000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  updateStats = () => {\n    $.ajax({\n      url:\n        'https://protected-shelf-93081.herokuapp.com/https://www.wikidata.org/wiki/Special:Statistics',\n      type: 'GET',\n      success: function(response) {\n        $('#div1').html(\n          $($(response).find('.mw-statistics-articles')).find(\n            '.mw-statistics-numbers'\n          )\n        );\n        $('#div2').html(\n          $($(response).find('.mw-statistics-edits')).find(\n            '.mw-statistics-numbers'\n          )\n        );\n        $('#div3').html(\n          $($(response).find('.mw-statistics-users')).find(\n            '.mw-statistics-numbers'\n          )\n        );\n        $('#div4').html(\n          $($(response).find('.mw-statistics-users-active')).find(\n            '.mw-statistics-numbers'\n          )\n        );\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"row col-lg-12 mx-auto col-12 justify-content-center  homeStatContainer text-left\">\n        <div className=\"col-lg-3 col-12 homeStat\">\n          <h1 id=\"div1\">{this.state.errorCode}</h1>\n          <h1>Items</h1>\n        </div>\n\n        <div className=\"col-lg-3 col-12 homeStat\">\n          <h1 id=\"div2\">{this.state.errorCode}</h1>\n          <h1>Edits</h1>\n        </div>\n\n        <div className=\"col-lg-3 col-12 homeStat\">\n          <h1 id=\"div3\">{this.state.errorCode}</h1>\n          <h1>Users</h1>\n        </div>\n\n        <div className=\"col-lg-3 col-12  homeStat\">\n          <h1 id=\"div4\">{this.state.errorCode}</h1>\n          <h1>Active Users</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomeStats;\n","import React, { Component, useContext } from 'react';\nimport TitleContainer from '../Components/TitleContainer';\nimport {\n  ColorSchemeProvider,\n  ColorSchemeContext,\n} from '../Platform/ColorScheme';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from '../Components/Navbar';\nimport HomeNavContainer from '../Components/HomeNavContainer';\nimport HomeStatsContainer from '../Components/HomeStats';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\n/*This is the home page and makes use of the Navbar, \nhomeNavContainer, homeStatsContainer and TitleContainer components */\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { history: this.props.history };\n  }\n\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Navbar history={this.state.history} />\n        <div className=\"HomePageContent row margin-right: -15px margin-left: -15px\">\n          <div className=\"col-lg-5 col-sm-12\">\n            <TitleContainer\n              title=\"Wikidata Live\"\n              subtitle=\"A web app to visualise recent changes to Wikidata in quasi real time.\"\n            />\n          </div>\n          <div className=\"col-lg-7 col-sm-12 homeNav\">\n            <div className=\"row\">\n              <div className=\"col-lg-4 col-sm-12\">\n                <h1 className=\"text-red\">\n                  <FontAwesomeIcon icon={faBars} />\n                </h1>\n                <HomeNavContainer\n                  styled=\"font-weight-bold text-red\"\n                  btnStyle=\"align-bottom btn btn-outline-red\"\n                  btnTitle1=\"About\"\n                  btnTitle2=\"Us\"\n                  btnText=\"About\"\n                  btnLink=\"/about-page\"\n                />\n              </div>\n              <div className=\"col-lg-4 col-sm-12 homeNav\">\n                <h1 className=\"text-green\">\n                  <FontAwesomeIcon icon={faChartLine} />\n                </h1>\n                <HomeNavContainer\n                  styled=\"font-weight-bold text-green\"\n                  btnStyle=\"align-bottom btn btn-outline-green\"\n                  btnTitle1=\"Wikidata\"\n                  btnTitle2=\"Dashboard\"\n                  btnText=\"Dashboard\"\n                  btnLink=\"/page\"\n                />\n              </div>\n              <div className=\"col-lg-4 col-sm-12 homeNav\">\n                <h1 className=\"text-blue\">\n                  <FontAwesomeIcon icon={faUser} />\n                </h1>\n                <HomeNavContainer\n                  styled=\"font-weight-bold text-blue\"\n                  btnStyle=\"align-bottom btn btn-outline-blue\"\n                  btnTitle1=\"User\"\n                  btnTitle2=\"Data\"\n                  btnText=\"Users\"\n                  btnLink=\"/most-active-users\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"statsContent row justify-content-center\">\n          <HomeStatsContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","const API_ENDPOINT = 'https://www.wikidata.org/w/api.php';\nconst SCORING_ENDPOINT = 'https://ores.wikimedia.org/v3/scores/wikidatawiki/';\nconst MAX_QUERY_SIZE = 50;\nconst NUM_RETRIES = 5;\n\nlet MEMORY_MODE = {\n  mode: false,\n};\nexport { MEMORY_MODE };\n\n/**\n * @typedef {Object} User\n * @property {number} userid - The user's id\n * @property {number} name - The user's name\n * @property {number} editcount - The number of edits the user did\n * @property {number} recentactions - The number of actions a user did within\n *           30 days\n * @property {Array} groups - An array of strings which contains the groups\n *           the user belongs in. For example if the user contains \"bot\", it is\n *           a non human user\n */\n\n/**\n * Returns a list of 500 users who were recently active within 30 days which is\n * sorted by the most edits in descending order\n *\n * @returns {Promise.<User[]>} - A Promise which resolves to an array of User\n *          objects\n */\nexport const getMostEditsUsers = async () => {\n  const compare = (a, b) => b.editcount - a.editcount;\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'allusers',\n    auprop: 'editcount|groups',\n    aulimit: 'max',\n    auwitheditsonly: '1',\n    auactiveusers: '1',\n  };\n  const users = query(API_ENDPOINT, params, NUM_RETRIES)\n    .then(data => data.query.allusers)\n    .then(users => users.sort(compare));\n  return users;\n};\n/**\n * Returns a list of 500 users who were recently active within 30 days which is\n * sorted by the most recent actions in descending order\n *\n * @returns {Promise.<User[]>} - A Promise which resolves to an array of User\n *          objects\n */\nexport const getMostActiveUsers = async () => {\n  const compare = (a, b) => b.recentactions - a.recentactions;\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'allusers',\n    auprop: 'editcount|groups',\n    aulimit: 'max',\n    auwitheditsonly: '1',\n    auactiveusers: '1',\n  };\n  const users = query(API_ENDPOINT, params, NUM_RETRIES)\n    .then(data => data.query.allusers)\n    .then(users => users.sort(compare));\n  return users;\n};\n\nexport const getRecentEditsWithSize = async () => {\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'recentchanges',\n    rcprop: 'title|ids|sizes|timestamp',\n    rclimit: '500',\n  };\n  const edits = query(API_ENDPOINT, params, NUM_RETRIES).then(\n    result => result.query.recentchanges\n  );\n  return await edits;\n};\n\nexport const getRecentEditsWithFlags = async () => {\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'recentchanges',\n    rcprop: 'ids',\n    rclimit: '50',\n  };\n  const edits = query(API_ENDPOINT, params, NUM_RETRIES).then(\n    result => result.query.recentchanges\n  );\n\n  let revids = await edits;\n  revids = revids.map(recentChange => recentChange.revid);\n  let scores = await getScore(revids);\n\n  const data = [\n    { id: 'damaging', label: 'damaging', value: 0, color: '#F25543' },\n    { id: 'unsure', label: 'unsure', value: 0, color: '#FFF047' },\n    { id: 'good faith', label: 'good faith', value: 0, color: '#92E16F' },\n  ];\n\n  scores = await scores;\n\n  Object.values(scores).forEach(score => {\n    if (\n      score.damaging.score !== undefined &&\n      score.damaging.score.prediction === true\n    ) {\n      data[0].value += 1;\n    } else if (\n      score.damaging.score !== undefined &&\n      score.damaging.score.prediction === false\n    ) {\n      data[2].value += 1;\n    } else {\n      data[1].value += 1;\n    }\n  });\n\n  return data;\n};\n\n/**\n * Returns recent 500 recent edits sorted by size of changes made in absolute value\n * So large additions and large deletions are included\n */\nexport const getRecentLargestEdits = async () => {\n  const editList = await getRecentEditsWithSize();\n\n  editList.forEach(item => {\n    item.value = Math.abs(item.newlen - item.oldlen);\n    item.id = item.revid.toString();\n    item.label = item.title;\n  });\n\n  editList.sort((a, b) => b.value - a.value);\n\n  return editList;\n};\n\n/**\n * @typedef {Object} PageInfo\n * @property {string} id - The id of the page\n * @property {actions} actions - Number of actions which has been performed on\n *           that page\n * @property {string} title - The title of the page\n */\n\n/**\n * Returns an array of most active pages from recent changes feed\n *\n * @param {string} prevTimestamp - Previous timestamp when the function was\n *        last called\n * @returns {(Promise.<PageInfo[]> | string)[]}\n */\nexport const getMostActivePages = async prevTimestamp => {\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp);\n  const activePages = recentChanges.then(recentChanges =>\n    countPageOccurances(recentChanges)\n  );\n  return [await activePages, newTimestamp];\n};\n\n/**\n * Returns an array of most users pages from recent changes feed\n *\n * @param {string} prevTimestamp - Previous timestamp when the function was\n *        last called\n * @returns {(Promise.<User[]> | string)[]}\n */\nexport const getRecentActiveUsers = async prevTimestamp => {\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp);\n  const activeUsers = recentChanges.then(activeUsers =>\n    countUsers(activeUsers)\n  );\n  return [await activeUsers, newTimestamp];\n};\n\n/**\n * Batches a query to cirumvent the 50 items query limit\n *\n * @param {string} itemsKey the query key\n * @param {Array} items the items to add to the query\n * @param {string} endpoint the endpoint url\n * @param {Object} params the parameters of the query\n */\nexport const batchQuery = async (itemsKey, items, endpoint, params) => {\n  const result = [];\n  let batches = null;\n  if (items instanceof Array) {\n    batches = createBatch(items, MAX_QUERY_SIZE);\n  } else {\n    batches = [[items]];\n  }\n  const results = batches.map(async batch => {\n    params[itemsKey] = batch.join('|');\n    return query(endpoint, params, NUM_RETRIES)\n      .then(data => result.push(data))\n      .catch(err => null);\n  });\n  await Promise.all(results);\n  return result;\n};\n\n/**\n * @typedef {Object} RecentChanges\n * @property {number} newlen - the number of bytes the page uses after the change\n * @property {number} ns\n * @property {number} old_revid - The old revision id\n * @property {number} oldlen - the number of bytes the page uses before the change\n * @property {number} pageid - The page id\n * @property {number} rcid - The recent change id\n * @property {number} revid - The current revision id\n * @property {string} timestamp - Timestamp of change\n * @property {string} title - Title of the page changed\n * @property {string} type - Type of action e.g. \"new\", \"edit\"\n * @property {string} user - The username of the editor\n */\n\n/**\n * Queries the API for the most recent changes\n *\n * @param {string} prevTimestamp - Previous timestamp when the function was\n *        last called\n * @returns {(Promise.<RecentChanges[]> | string)[]}\n */\nexport const queryRecentChanges = prevTimestamp => {\n  let tmpTimestamp = new Date();\n  const newTimestamp = tmpTimestamp.toISOString();\n  tmpTimestamp = tmpTimestamp - 1000;\n  tmpTimestamp = new Date(tmpTimestamp).toISOString();\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'recentchanges',\n    rcprop: 'title|ids|timestamp|user|sizes',\n    rclimit: 'max',\n    rcstart: tmpTimestamp,\n    rcend: prevTimestamp,\n  };\n  const recentChanges = query(API_ENDPOINT, params, NUM_RETRIES)\n    .then(data => data.query.recentchanges)\n    .then(recentChanges => {\n      const revisionIds = recentChanges.map(recentChange => recentChange.revid);\n      return getScore(revisionIds).then(scores =>\n        recentChanges.map(recentChange => {\n          recentChange.scores = scores[recentChange.revid];\n          return recentChange;\n        })\n      );\n    });\n  return [recentChanges, newTimestamp];\n};\n\n/**\n * Returns the groups of each username in the input array\n *\n * @param {string[]} userNames - an array of usernames to fetch the group of\n * @returns {Map.<string, string[]>} - map of username to an array of groups\n *         they belong to\n */\nexport const getUserGroups = userNames => {\n  const key = 'ususers';\n  const params = {\n    action: 'query',\n    format: 'json',\n    list: 'users',\n    usprop: 'groups',\n  };\n  const groups = batchQuery(key, userNames, API_ENDPOINT, params).then(data => {\n    const groups = {};\n    data.forEach(queryResult => {\n      const users = queryResult.query.users;\n      users.forEach(userObj => {\n        if (userObj.groups) {\n          groups[userObj.name] = userObj.groups;\n        }\n      });\n    });\n    return groups;\n  });\n  return groups;\n};\n\n// ~ Helper Functions ---------------------------------------------------------\n\n/**\n * Returns a the response of a query to the Wikidata API endpoint\n *\n * @param {Object} params - Object of parameters to use when querying\n * @param {number} n - Number of times to retry if failure occurs\n * @returns {Promise.<Object>}\n */\nconst query = async (endpoint, params, n) => {\n  try {\n    const paramsString = new URLSearchParams(params).toString();\n    const url = endpoint + '?' + paramsString + '&origin=*';\n    return await fetch(url).then(response => response.json());\n  } catch (err) {\n    if (n === 1) {\n      throw err;\n    }\n    return await setTimeout(query(endpoint, params, n - 1), 500);\n  }\n};\n\n/**\n * Retruns the score of the revision id to find out if the edit was harmful or not\n *\n * @param {number[]} revisionIds - Revision ids to obtain the score of\n * @returns {Promise.<Object>}\n */\nconst getScore = async revisionIds => {\n  if (revisionIds.length === 0) {\n    return;\n  }\n  const key = 'revids';\n  const params = {};\n  let scores = {};\n  return batchQuery(key, revisionIds, SCORING_ENDPOINT, params).then(\n    resultBatch => {\n      resultBatch.forEach(\n        result => (scores = { ...scores, ...result.wikidatawiki?.scores })\n      );\n      return scores;\n    }\n  );\n};\n\n/**\n * Returns the number of times a page appeared on the recent changes feed sorted by\n * number of actions done on the page\n *\n * @param {RecentChanges[]} recentChanges - The array of recent changes from a query\n */\nconst countPageOccurances = recentChanges => {\n  const compare = (a, b) => b.actions - a.actions;\n  const titleCounts = {};\n  recentChanges.forEach(change => {\n    const actions = titleCounts[change.title] || 0;\n    titleCounts[change.title] = actions + 1;\n  });\n  const titles = Object.entries(titleCounts).map(([id, actions]) => ({\n    id,\n    actions,\n  }));\n  titles.sort(compare);\n  return titles;\n};\n\n/**\n * Returns the number of times a user appeared on the recent changes feed sorted by\n * number of actions done by that user\n *\n * @param {RecentChanges[]} recentChanges - The array of recent changes from a query\n */\nconst countUsers = recentChanges => {\n  const compare = (a, b) => b.actions - a.actions;\n  const userCounts = {};\n  recentChanges.forEach(change => {\n    const user = change.user;\n    const numActions = userCounts[user] || 0;\n    userCounts[user] = numActions + 1;\n  });\n  const users = Object.entries(userCounts).map(([username, actions]) => ({\n    username,\n    actions,\n  }));\n  const userNames = users.map(({ username }) => username);\n  getUserGroups(userNames).then(groups => {\n    users.forEach(userObj => (userObj.groups = groups[userObj.username]));\n    users.sort(compare);\n  });\n  return users;\n};\n\n/**\n * Splits up an array into smaller arrays\n *\n * @param {Array} array - Array to create batches from\n * @param {number} size - Batch size\n * @returns {Array} batches - An array containing the batches which are of\n *         length size\n */\nconst createBatch = (array, size) => {\n  const batches = [];\n  while (array.length > 0) {\n    batches.push(array.splice(0, size));\n  }\n  return batches;\n};\n","import { queryRecentChanges, getUserGroups } from './APIWrapper';\n\n/** Class which wraps the Wikidata API recent changes feed */\nclass FeedData {\n  /**\n   * Create a new feed data object\n   *\n   * @param {number} maxItems - the maximum number of items to keep in the\n   *        feed.\n   */\n  constructor(maxItems) {\n    this.changes = [];\n    this.maxItems = maxItems;\n    this.prevTimestamp = new Date().toISOString();\n  }\n\n  refresh() {\n    const [recentChanges, newTimeStamp] = queryRecentChanges(\n      this.prevTimestamp\n    );\n    recentChanges.then(changes => {\n      const usernames = changes.map(change => change.user);\n      getUserGroups(usernames).then(groups =>\n        changes.forEach(change => {\n          change.groups = groups[change.user];\n          this.changes.unshift(change);\n          if (this.changes.length > this.maxItems) {\n            this.changes.pop();\n          }\n        })\n      );\n    });\n    this.prevTimestamp = newTimeStamp;\n  }\n}\n\nexport default FeedData;\n","import React, { useState, useEffect } from 'react';\nimport FeedData from '../Backend/FeedData';\nimport Navbar from '../Components/Navbar';\n// eslint-disable-next-line\nimport style from '../style.css'\n\n//Creates the feed shown on the dashboard, it updates in real time and highlights suspicious changes in red\n\nfunction Feed() {\n  const [feedData] = useState(new FeedData(30));\n  const [paused, setPaused] = useState(false);\n  const [recentChanges, setRecentChanges] = useState({\n    items: [],\n  });\n\n  useEffect(() => {\n    const refresh = setInterval(() => {\n      if (!paused) {\n        feedData.refresh();\n      }\n      setRecentChanges({ items: feedData.changes });\n    }, 500);\n    return () => clearInterval(refresh);\n  }, [feedData, paused]);\n\n  function togglePause() {\n    setPaused(prevPause => !prevPause);\n  }\n\n  return (\n    <div>\n      <h3 className=\"text-blue text-left\">Most Recent Activity</h3>\n      <form className=\"text-left\" onChange={togglePause}>\n        <label>\n          <input type=\"checkbox\" /> Paused\n        </label>\n      </form>\n      <ul className=\"list-group\">\n        {recentChanges.items.map((item, index) => (\n          <li className=\"list-group-item text-left\" key={index}>\n            <div\n              className={\n                item.scores?.damaging?.score?.prediction ? 'text-red' : ''\n              }\n            >\n              {`User ${item.user} action ${item.type} on ${\n                item.title\n              } ${getTimeDifference(item.timestamp)} seconds ago`}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nconst getTimeDifference = toCompare =>\n  Math.round(\n    Math.abs(new Date().getTime() - new Date(toCompare).getTime()) / 1000\n  );\n\nexport default Feed;\n","import React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from '../Components/Navbar';\nimport Feed from '../Components/Feed';\n\n/*This is the home page and makes use of the Navbar, \nhomeNavContainer, homeStatsContainer and TitleContainer components */\n\nclass FeedData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { history: this.props.history };\n  }\n\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Navbar history={this.state.history} />\n        <div className=\"\">\n          <Feed />\n        </div>\n        .{' '}\n      </div>\n    );\n  }\n}\n\nexport default FeedData;\n","import Card from 'react-bootstrap/Card';\nimport React, { Component } from 'react';\n\nclass GraphCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      title: this.props.title,\n      pageLink: this.props.pageLink,\n      graph: this.props.graph,\n    };\n  }\n\n  onClick = () => {\n    this.state.history.push(this.state.pageLink);\n  };\n\n  render() {\n    return (\n      <Card onClick={this.onClick} tag=\"a\" className=\"graph-card\">\n        <Card.Body>\n          <Card.Title className=\"card-title\">{this.state.title}</Card.Title>\n          {this.state.graph}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default GraphCard;\n","import React, { Component } from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\n\nclass SimpleBarGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      data: null,\n      fullGraph: this.props.fullGraph,\n    };\n\n    this.loadData();\n  }\n\n  componentDidMount() {\n    this.refreshInterval = setInterval(async () => {\n      await this.refresh();\n    }, this.props.settings.refreshTime);\n  }\n\n  tooltip = function(click, url) {\n    return (\n      <div className=\"iframe-container\">\n        <iframe\n          src={url + click.indexValue}\n          className=\"iframe\"\n          title=\"tooltip-option-2\"\n        />\n      </div>\n    );\n  };\n\n  loadData = () => {\n    const getData = this.props.settings.getData.bind(this);\n    getData().then(data => {\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\n      this.setState({\n        loaded: true,\n        data: smlData,\n      });\n    });\n  };\n\n  refresh = async () => {\n    if (!this.props.paused) {\n      const method = this.props.settings.refreshMethod.bind(this);\n      await method();\n    }\n  };\n\n  render() {\n    let margin = {};\n    let label = null;\n    let classname = '';\n    let onClick = null;\n    let clickable = false;\n    let tooltip = null;\n    let legend = [];\n    const colorBy = this.props.settings.colorBy\n      ? this.props.settings.colorBy\n      : 'index';\n    if (this.state.fullGraph) {\n      if (this.props.settings.margin) {\n        margin = this.props.settings.margin;\n      } else {\n        margin = { top: 5, right: 30, bottom: 80, left: 80 };\n      }\n      if (this.props.settings.legend) {\n        legend = [this.props.settings.legend];\n      }\n      label = true;\n      classname = 'full-graph-container';\n      if (this.props.settings.onClick) {\n        onClick = this.props.settings.onClick;\n        clickable = true;\n      }\n      if (this.props.settings.tooltip) {\n        tooltip = this.props.settings.tooltip.bind(this);\n      }\n    } else {\n      margin = { top: 0, right: 0, bottom: 0, left: 0 };\n      label = false;\n      classname = 'Graph-Container-Card';\n    }\n    return (\n      <div>\n        {!this.state.loaded ? (\n          'Loading...'\n        ) : (\n          <div className={classname}>\n            <ResponsiveBar\n              data={this.state.data}\n              keys={this.props.settings.keys}\n              indexBy={this.props.settings.index}\n              margin={margin}\n              padding={0.3}\n              colors={{ scheme: this.props.settings.colors }}\n              colorBy={colorBy}\n              borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n              axisTop={null}\n              axisRight={null}\n              axisBottom={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 30,\n                legend: this.props.settings.xAxis,\n                legendPosition: 'start',\n                legendOffset: 40,\n              }}\n              axisLeft={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: this.props.settings.yAxis,\n                legendPosition: 'middle',\n                legendOffset: -60,\n              }}\n              enableLabel={label}\n              onClick={clickable ? onClick : function() {}}\n              animate={label}\n              isInteractive={label}\n              motionStiffness={90}\n              motionDamping={15}\n              tooltip={tooltip}\n              legends={legend}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SimpleBarGraph;\n","import React, { Component } from 'react';\nimport { ResponsivePie } from '@nivo/pie';\nimport { ThemeProvider } from 'react-bootstrap';\n\nclass PieChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      data: null,\n      fullGraph: this.props.fullGraph,\n    };\n    this.loadData();\n  }\n\n  componentDidMount() {\n    this.refreshInterval = setInterval(async () => {\n      await this.refresh();\n    }, this.props.settings.refreshTime);\n  }\n\n  tooltip = function(click, url) {\n    return (\n      <span />\n      //<div className=\"iframe-container\">\n      //  <iframe\n      //    src={url + click.label}\n      //    className=\"iframe\"\n      //   title=\"tooltip-option-2\"\n      //  />\n      //</div>\n    );\n  };\n\n  loadData = () => {\n    const getData = this.props.settings.getData.bind(this);\n    getData().then(data => {\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 9);\n      this.setState({\n        loaded: true,\n        data: smlData,\n      });\n    });\n  };\n\n  refresh = async () => {\n    if (!this.props.paused) {\n      this.loadData();\n    }\n  };\n\n  render() {\n    let margin = {};\n    let label = null;\n    let classname = '';\n    let onClick = () => {};\n    let tooltip = null;\n    let colors = { scheme: this.props.settings.colors };\n    if (this.props.settings.colorFunction) {\n      colors = this.props.settings.colorFunction;\n    }\n    if (this.state.fullGraph) {\n      margin = { top: 30, right: 30, bottom: 30, left: 30 };\n      label = true;\n      classname = 'full-graph-container';\n\n      if (this.props.settings.onClick) {\n        onClick = this.props.settings.onClick;\n      }\n      if (this.props.settings.tooltip) {\n        tooltip = this.props.settings.tooltip.bind(this);\n      }\n    } else {\n      margin = { top: 0, right: 0, bottom: 0, left: 0 };\n      label = false;\n      classname = 'Graph-Container-Card';\n    }\n    return (\n      <div>\n        {!this.state.loaded ? (\n          'Loading...'\n        ) : (\n          <div className={classname}>\n            <ResponsivePie\n              data={this.state.data}\n              margin={margin}\n              innerRadius={0.4}\n              padAngle={0}\n              cornerRadius={0}\n              colors={colors}\n              enableRadialLabels={label}\n              radialLabel=\"label\"\n              radialLabelsSkipAngle={10}\n              radialLabelsTextXOffset={6}\n              radialLabelsTextColor=\"#333333\"\n              radialLabelsLinkOffset={0}\n              radialLabelsLinkDiagonalLength={16}\n              radialLabelsLinkHorizontalLength={24}\n              radialLabelsLinkStrokeWidth={1}\n              radialLabelsLinkColor={{ from: 'color' }}\n              enableSlicesLabels={label}\n              slicesLabelsSkipAngle={10}\n              slicesLabelsTextColor=\"#333333\"\n              animate={true}\n              motionStiffness={90}\n              motionDamping={15}\n              // defs={[\n              //   {\n              //     id: 'dots',\n              //     type: 'patternDots',\n              //     background: 'inherit',\n              //     color: 'rgba(255, 255, 255, 0.3)',\n              //     size: 4,\n              //     padding: 1,\n              //     stagger: true,\n              //   },\n              //   {\n              //     id: 'lines',\n              //     type: 'patternLines',\n              //     background: 'inherit',\n              //     color: 'rgba(255, 255, 255, 0.3)',\n              //     rotation: -45,\n              //     lineWidth: 6,\n              //     spacing: 10,\n              //   },\n              // ]}\n              isInteractive={this.state.fullGraph}\n              onClick={onClick}\n              tooltip={tooltip}\n              defs={[\n                {\n                  id: 'lines',\n                  type: 'patternLines',\n                  background: 'inherit',\n                  color: 'rgba(255, 255, 255, 0.4)',\n                  rotation: -45,\n                  lineWidth: 6,\n                  spacing: 10,\n                },\n              ]}\n              fill={[\n                {\n                  match: {\n                    type: 'edit',\n                  },\n                  id: 'lines',\n                },\n              ]}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PieChart;\n","import React, { Component } from 'react';\nimport Navbar from '../Components/Navbar';\n\nclass GraphPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: this.props.history,\n      title: this.props.name,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Navbar history={this.state.history} />\n\n        <div className=\"row\">\n          <div className=\"col-lg-3 col-12 infobox\">\n            <h2>{this.state.title}</h2>\n            <p />\n            <p>{this.props.explanation}</p>\n            <p>\n              <form onChange={this.props.handlePause}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"paused\"\n                    name=\"paused\"\n                    value={this.props.paused}\n                  />{' '}\n                  {'Paused'}\n                </label>\n              </form>\n            </p>\n          </div>\n          <div className=\"col-lg-9 col-12\">{this.props.graph}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GraphPage;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\nimport { getRecentActiveUsers } from '../Backend/APIWrapper';\n\nexport const MostActiveUsersGraphSettings = {\n  getData: async function() {\n    let [data, newTimestamp] = await getRecentActiveUsers(\n      new Date().toISOString()\n    );\n    data = data.slice(0, 50);\n    this.setState({\n      fullData: data,\n      prevTimestamp: newTimestamp,\n    });\n    return data;\n  },\n  refreshTime: 2000,\n  refreshMethod: async function() {\n    let [data, newTimestamp] = await getRecentActiveUsers(\n      this.state.prevTimestamp\n    );\n    this.setState({ prevTimestamp: newTimestamp });\n    data = data.slice(0, 50);\n    if (this.state.fullData) {\n      const fullData = this.state.fullData;\n      data.forEach(userAdditions => {\n        let index = -1;\n        for (let i = 0; i < fullData.length; i += 1) {\n          if (fullData[i].username === userAdditions.username) {\n            index = i;\n          }\n        }\n        if (index !== -1) {\n          fullData[index].actions += userAdditions.actions;\n        } else {\n          fullData.push(userAdditions);\n        }\n      });\n      fullData.sort((a, b) => b.actions - a.actions);\n      fullData.slice(0, 50);\n      const smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10);\n      smlData.forEach(user => {\n        if (user.groups !== undefined && user.groups.includes('bot')) {\n          user.bot = user.actions;\n          user.human = 0;\n        } else {\n          user.bot = 0;\n          user.human = user.actions;\n        }\n      });\n\n      this.setState({ fullData: fullData, data: smlData });\n    } else {\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\n\n      this.setState({ data: smlData });\n    }\n  },\n  keys: ['bot', 'human'],\n  index: 'username',\n  xAxis: 'username',\n  yAxis: 'actions',\n  colors: 'set1',\n  colorBy: 'id',\n  legend: {\n    dataFrom: 'keys',\n    anchor: 'bottom-right',\n    direction: 'column',\n    justify: false,\n    translateX: 120,\n    translateY: 0,\n    itemsSpacing: 2,\n    itemWidth: 100,\n    itemHeight: 20,\n    itemDirection: 'left-to-right',\n    itemOpacity: 0.85,\n    symbolSize: 20,\n    effects: [\n      {\n        on: 'hover',\n        style: {\n          itemOpacity: 1,\n        },\n      },\n    ],\n  },\n  margin: { top: 5, right: 130, bottom: 50, left: 80 },\n  onClick: function(click) {\n    window.open(\n      'https://www.wikidata.org/wiki/User:' + click.indexValue,\n      '_blank'\n    );\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:');\n  },\n};\n\nclass MostActiveUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation={\n          'A live view of the users active right now. The graph shows users active since this page was loaded.' +\n          \" Hover over a bar to get a preview of the user's page, or click to open the user's page in a new tab.\"\n        }\n        graph={\n          <SimpleBarGraph\n            fullGraph={true}\n            settings={MostActiveUsersGraphSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Most Active Users\"\n      />\n    );\n  }\n}\nexport default MostActiveUsers;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\nimport { getMostActivePages } from '../Backend/APIWrapper';\n\nexport const MostActivePagesGraphSettings = {\n  getData: async function() {\n    let [data, newTimestamp] = await getMostActivePages(\n      new Date().toISOString()\n    );\n    data = data.slice(0, 50);\n    this.setState({\n      fullData: data,\n      prevTimestamp: newTimestamp,\n    });\n    return data;\n  },\n  refreshTime: 2000,\n  refreshMethod: async function() {\n    let [data, newTimestamp] = await getMostActivePages(\n      this.state.prevTimestamp\n    );\n    this.setState({ prevTimestamp: newTimestamp });\n    data = data.slice(0, 50);\n    if (this.state.fullData) {\n      const fullData = this.state.fullData;\n      data.forEach(pageAdditions => {\n        let index = -1;\n        for (let i = 0; i < fullData.length; i += 1) {\n          if (fullData[i].id === pageAdditions.id) {\n            index = i;\n          }\n        }\n        if (index !== -1) {\n          fullData[index].actions += pageAdditions.actions;\n        } else {\n          fullData.push(pageAdditions);\n        }\n      });\n      fullData.sort((a, b) => b.actions - a.actions);\n      fullData.slice(0, 50);\n      const smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10);\n\n      this.setState({ fullData: fullData, data: smlData });\n    } else {\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\n\n      this.setState({ data: smlData });\n    }\n  },\n  keys: ['actions'],\n  index: 'id',\n  xAxis: 'pages',\n  yAxis: 'actions',\n  colors: 'set1',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/' + click.indexValue, '_blank');\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\n  },\n};\n\nclass MostActivePages extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation={\n          'A live view of the pages being edited right now. The graph shows pages edited since this page was loaded.' +\n          ' Hover over a bar to get a preview of the page, or click to open the page in a new tab.'\n        }\n        graph={\n          <SimpleBarGraph\n            fullGraph={true}\n            settings={MostActivePagesGraphSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Most Active Pages\"\n      />\n    );\n  }\n}\nexport default MostActivePages;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport PieChart from '../Components/PieChart';\nimport { getRecentLargestEdits } from '../Backend/APIWrapper';\n\nexport const LargestRecentEditsSettings = {\n  getData: getRecentLargestEdits,\n  refreshTime: 2000,\n  refreshMethod: getRecentLargestEdits,\n  colorBy: 'type',\n  colors: 'set1',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\n  },\n};\n\nclass LargestRecentEdits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation={\n          <div>\n            {'The largest of the last 500 edits. The number in each of the sections represents the size of the edit in bytes.' +\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\n            <p>\n              <img\n                className=\"legend\"\n                src={require('../legend.svg')}\n                alt=\"Legend\"\n              />\n            </p>\n          </div>\n        }\n        graph={\n          <PieChart\n            fullGraph={true}\n            settings={LargestRecentEditsSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Largest Recent Edits\"\n      />\n    );\n  }\n}\nexport default LargestRecentEdits;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport PieChart from '../Components/PieChart';\nimport { getRecentEditsWithSize } from '../Backend/APIWrapper';\n\nexport const RecentEditSizeSettings = {\n  getData: async () => {\n    const data = await getRecentEditsWithSize();\n    data.forEach(item => {\n      item.id = item.revid.toString();\n      item.value = Math.abs(item.newlen - item.oldlen);\n      item.label = item.title;\n    });\n    return data;\n  },\n  refreshTime: 2000,\n  refreshMethod: async () => {\n    const data = await getRecentEditsWithSize();\n    data.forEach(item => {\n      item.value = Math.abs(item.newlen - item.oldlen);\n      item.id = item.revid.toString();\n      item.label = item.title;\n    });\n    return data;\n  },\n  colorBy: 'type',\n  colors: 'set1',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\n  },\n};\n\nclass RecentEditSize extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation={\n          <div>\n            {'The size of the last 30 edits. The number in each of the sections represents the size of the edit in bytes.' +\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\n            <p>\n              <img\n                className=\"legend\"\n                src={require('../legend.svg')}\n                alt=\"Legend\"\n              />\n            </p>\n          </div>\n        }\n        graph={\n          <PieChart\n            fullGraph={true}\n            settings={RecentEditSizeSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Recent Edit Size\"\n      />\n    );\n  }\n}\nexport default RecentEditSize;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport PieChart from '../Components/PieChart';\nimport { getRecentEditsWithFlags } from '../Backend/APIWrapper';\n\nexport const ProportionFlaggedSettings = {\n  getData: getRecentEditsWithFlags,\n  refreshTime: 2000,\n  refreshMethod: getRecentEditsWithFlags,\n  //colorFunction: d => d.color,\n  colorBy: 'type',\n  colors: 'category10',\n  name: 'Proportion Of Edits Flagged',\n};\n\nclass ProportionFlagged extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        explanation=\"The proportion of the last 50 edits that was flagged as potentially damaging.\"\n        graph={\n          <PieChart\n            fullGraph={true}\n            settings={ProportionFlaggedSettings}\n            paused={this.state.paused}\n          />\n        }\n        name={ProportionFlaggedSettings.name}\n      />\n    );\n  }\n}\nexport default ProportionFlagged;\n","import React, { Component, useEffect } from 'react';\nimport { ResponsivePie } from '@nivo/pie';\n\nclass PieChartRefresh extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      data: null,\n      fullGraph: this.props.fullGraph,\n      value: this.props.value,\n      initialCall: true,\n      dataFinished: false,\n      changeValue: '',\n      initialWait: true,\n    };\n  }\n  componentDidMount() {\n    this.refreshInterval = setInterval(async () => {\n      if (!this.props.loading) {\n        this.setState({\n          loaded: false,\n          initialCall: true,\n          dataFinished: false,\n        });\n      }\n      // this.setState({ value: this.props.value });\n      if (this.state.changeValue != this.props.value) {\n        this.setState({\n          changeValue: this.props.value,\n          value: this.props.value,\n          dataFinished: false,\n          initialCall: true,\n        });\n      }\n      if (\n        this.state.initialCall &&\n        this.state.value &&\n        !this.state.dataFinished\n      ) {\n        this.setState({ changeValue: this.state.value });\n        await this.refresh();\n      } else if (\n        !this.state.initialCall &&\n        this.state.value &&\n        !this.state.dataFinished\n      ) {\n        await this.refreshCont();\n      }\n    }, this.props.settings.refreshTime);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refreshInterval);\n  }\n\n  tooltip = function(click, url) {\n    return (\n      <span />\n      //<div className=\"iframe-container\">\n      //  <iframe\n      //    src={url + click.label}\n      //    className=\"iframe\"\n      //   title=\"tooltip-option-2\"\n      //  />\n      //</div>\n    );\n  };\n\n  loadData = () => {\n    const getData = this.props.settings.getData.bind(this);\n    getData(this.props.value).then(data => {\n      if (data != -1) {\n        const smlData = data.slice(0, this.state.fullGraph ? 30 : 9);\n        this.setState({\n          loaded: true,\n          data: smlData,\n        });\n      } else {\n        this.setState({ dataFinished: true });\n      }\n    });\n  };\n\n  loadDataCont = () => {\n    const getData = this.props.settings.refreshMethod.bind(this);\n    getData(this.props.value).then(data => {\n      if (data != -1) {\n        const smlData = data.slice(0, this.state.fullGraph ? 30 : 9);\n        this.setState({\n          loaded: true,\n          data: smlData,\n        });\n      } else {\n        this.setState({\n          dataFinished: true,\n          // value: '',\n          initialCall: true,\n          // loaded: false,\n          // data: null,\n        });\n      }\n    });\n  };\n\n  refresh = async () => {\n    this.setState({ initialCall: false });\n    this.loadData();\n  };\n\n  refreshCont = async () => {\n    this.loadDataCont();\n  };\n\n  // togglePause() {\n  //   this.state.paused = !this.state.paused;\n  // }\n\n  render() {\n    let margin = {};\n    let label = null;\n    let classname = '';\n    let onClick = () => {};\n    let tooltip = null;\n    let colors = { scheme: this.props.settings.colors };\n    if (this.props.settings.colorFunction) {\n      colors = this.props.settings.colorFunction;\n    }\n    if (this.state.fullGraph) {\n      margin = { top: 30, right: 30, bottom: 30, left: 30 };\n      label = true;\n      classname = 'full-graph-container';\n\n      if (this.props.settings.onClick) {\n        onClick = this.props.settings.onClick;\n      }\n      if (this.props.settings.tooltip) {\n        tooltip = this.props.settings.tooltip.bind(this);\n      }\n    } else {\n      margin = { top: 0, right: 0, bottom: 0, left: 0 };\n      label = false;\n      classname = 'Graph-Container-Card';\n    }\n    return (\n      <div>\n        {!this.state.loaded ? (\n          'Loading...'\n        ) : (\n          <div className={classname}>\n            <ResponsivePie\n              data={this.state.data}\n              margin={margin}\n              innerRadius={0.4}\n              padAngle={0}\n              cornerRadius={0}\n              colors={colors}\n              enableRadialLabels={label}\n              radialLabel=\"label\"\n              radialLabelsSkipAngle={10}\n              radialLabelsTextXOffset={6}\n              radialLabelsTextColor=\"#333333\"\n              radialLabelsLinkOffset={0}\n              radialLabelsLinkDiagonalLength={16}\n              radialLabelsLinkHorizontalLength={24}\n              radialLabelsLinkStrokeWidth={1}\n              radialLabelsLinkColor={{ from: 'color' }}\n              enableSlicesLabels={label}\n              slicesLabelsSkipAngle={10}\n              slicesLabelsTextColor=\"#333333\"\n              animate={true}\n              motionStiffness={90}\n              motionDamping={15}\n              // defs={[\n              //   {\n              //     id: 'dots',\n              //     type: 'patternDots',\n              //     background: 'inherit',\n              //     color: 'rgba(255, 255, 255, 0.3)',\n              //     size: 4,\n              //     padding: 1,\n              //     stagger: true,\n              //   },\n              //   {\n              //     id: 'lines',\n              //     type: 'patternLines',\n              //     background: 'inherit',\n              //     color: 'rgba(255, 255, 255, 0.3)',\n              //     rotation: -45,\n              //     lineWidth: 6,\n              //     spacing: 10,\n              //   },\n              // ]}\n              isInteractive={this.state.fullGraph}\n              onClick={onClick}\n              tooltip={tooltip}\n              defs={[\n                {\n                  id: 'lines',\n                  type: 'patternLines',\n                  background: 'inherit',\n                  color: 'rgba(255, 255, 255, 0.4)',\n                  rotation: -45,\n                  lineWidth: 6,\n                  spacing: 10,\n                },\n              ]}\n              fill={[\n                {\n                  match: {\n                    type: 'edit',\n                  },\n                  id: 'lines',\n                },\n              ]}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PieChartRefresh;\n","class Data {\n  constructor(data) {\n    this.data = data;\n    this.time = Date.now();\n  }\n}\n\nexport class Cache {\n  constructor() {\n    this.data = {};\n    this.length = 0;\n  }\n\n  addCache(searchId, data) {\n    if (!this.data[searchId]) {\n      this.length++;\n    }\n    this.data[searchId] = new Data(data);\n    this.cleanCache();\n  }\n\n  getCache(searchId) {\n    if (this.data[searchId]) {\n      return this.data[searchId].data;\n    }\n    return -1;\n  }\n\n  cleanCache() {\n    while (this.length > 1024) {\n      let oldest = null;\n      for (const item in this.data) {\n        if (oldest == null) {\n          oldest = item;\n        } else if (this.data[item].time < this.data[oldest].time) {\n          oldest = item;\n        }\n      }\n      this.length--;\n      delete this.data[oldest];\n    }\n  }\n}\n","import { Cache } from './Cache';\n\nconst WIKIDATA_ENDPOINT = 'https://www.wikidata.org/w/api.php';\nconst WIKIPEDIA_ENDPOINT_SEARCH = 'https://en.wikipedia.org/w/api.php';\nconst DESCRIPTION_REST_API =\n  'https://en.wikipedia.org/api/rest_v1/page/summary/';\nconst DBPEDIA_SPOTLIGHT_API = 'api.dbpedia-spotlight.org/en/annotate';\nconst NUMBER_OF_RETRIES = 5;\nconst fetch = require('node-fetch');\nconst XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;\n//const cache = getWikibaseItemCache('WIKIBASEITEM_CACHE');\n\nconst userSearchCache = new Cache();\nconst pageRevCache = new Cache();\nconst wikibaseCache = new Cache();\nconst prefixCache = new Cache();\n/*\n  userSearch: gets a json list of the 20 most recent contributions made my a user, along with a key to get the next 20\n  '' - String\n  # - number\n  Json format:\n  {\n    userid: #,\n    user: '',\n    pageid: #,\n    revid: #,\n    parentid: #,\n    ns: #,\n    title: '',\n    timestamp: 'YYYY-MM-DDTHH:MM:SSZ',\n    comment: '',\n    size: #\n  }\n  @params {name} - User name\n  @returns {Promise, Promise} - first element contains a promise of a json list of contributions made by the user\n                                second element contains a key to get the next 20 contributions made by the user, -1 if end of list\n*/\nexport const userSearch = async name => {\n  const cacheResult = userSearchCache.getCache(name);\n  if (cacheResult != -1) {\n    return cacheResult;\n  } else {\n    const params = {\n      action: 'query',\n      format: 'json',\n      list: 'usercontribs',\n      uclimit: 20,\n      ucuser: name,\n    };\n    const item = await wikipediaQuery(\n      WIKIPEDIA_ENDPOINT_SEARCH,\n      params,\n      NUMBER_OF_RETRIES\n    ).then(result =>\n      userContributionsSeperator(result.query.usercontribs, result)\n    );\n    userSearchCache.addCache(item);\n    return item;\n  }\n};\n\n/*\n  userSearchCont: gets a continued json list of the 20 most recent contributions made my a user, along with a key to get the next 20\n  '' - String\n  # - number\n  Json format:\n  {\n    userid: #,\n    user: '',\n    pageid: #,\n    revid: #,\n    parentid: #,\n    ns: #,\n    title: '',\n    timestamp: 'YYYY-MM-DDTHH:MM:SSZ',\n    comment: '',\n    size: #\n  }\n  @params {name, cont} - User name\n                         continue key\n  @returns {Promise, Promise} - first element contains a promise of a json list of contributions made by the user\n                                second element contains a key to get the next 20 contributions made by the user, -1 if end of list\n*/\nexport const userSearchCont = async (name, cont) => {\n  const cacheResult = userSearchCache.getCache(cont);\n  if (cacheResult != -1) {\n    return cacheResult;\n  } else {\n    const params = {\n      action: 'query',\n      format: 'json',\n      list: 'usercontribs',\n      uclimit: 20,\n      ucuser: name,\n      uccontinue: cont,\n    };\n    const item = await wikipediaQuery(\n      WIKIPEDIA_ENDPOINT_SEARCH,\n      params,\n      NUMBER_OF_RETRIES\n    ).then(result =>\n      userContributionsSeperator(result.query.usercontribs, result)\n    );\n    userSearchCache.addCache(cont, item);\n    return item;\n  }\n};\n\n/*\n  pageRevisionsSearch: gets a json list of the last 20 page edits, along with a key to get to the next 20\n  '' - String\n  # - number\n  Json format:\n  {\n    revid: #,\n    parentid: #,\n    user: '',\n    anon: '',\n    timestamp: 'YYYY-MM-DDTHH:MM:SSZ',\n    comment: ''\n  }\n  @params {searchItem} - page query\n  @returns {Promise, Promise} - first element contains a promise of a json list of page edits\n                                second element contains a key to get the next 20 page edits, -1 if end of list\n*/\nexport const pageRevisionsSearch = async searchitem => {\n  let item = await getWikibaseItem(searchitem);\n  if (item === -1) {\n    return -1;\n  }\n  item = await getRevisionsOfPage(item);\n  return item;\n};\n\n/*\n  pageRevisionsSearchCont: gets a json list of the last 20 page edits, along with a key to get to the next 20\n  '' - String\n  # - number\n  Json format:\n  {\n    revid: #,\n    parentid: #,\n    user: '',\n    anon: '',\n    timestamp: 'YYYY-MM-DDTHH:MM:SSZ',\n    comment: ''\n  }\n  @params {searchItem, cont} - page query\n                               continue key\n  @returns {Promise, Promise} - first element contains a promise of a json list of page edits\n                                second element contains a key to get the next 20 page edits, -1 if end of list\n*/\nexport const pageRevisionsSearchCont = async (searchitem, cont) => {\n  let item = await getWikibaseItem(searchitem);\n  if (item === -1) {\n    return -1;\n  }\n  item = await getRevisionsOfPageCont(item, cont);\n  return item;\n};\n\n// ~ Helper Functions ---------------------------------------------------------\n\n/**\n * Returns a the response of a query to the Wikidata API endpoint\n *\n * @param {Object} params - Object of parameters to use when querying\n * @param {number} n - Number of times to retry if failure occurs\n * @returns {Promise.<Object>}\n */\nconst wikipediaQuery = async (endpoint, params, n) => {\n  try {\n    const paramsString = new URLSearchParams(params).toString();\n    const url = endpoint + '?' + paramsString + '&origin=*';\n    return await fetch(url).then(response => response.json());\n  } catch (err) {\n    if (n === 1) {\n      throw err;\n    }\n    return setTimeout(wikipediaQuery(endpoint, params, n - 1), 500);\n  }\n};\n\n//Helper function to return wikibase_item necessary\n//@param {json} - json straight from query\n//@returns {promise} returns -1 if it fails to find it and otherwise returns wikibase_item\nconst extraResult = async json1 => {\n  let temp = -1;\n  while (typeof json1[temp] === 'undefined') {\n    temp = temp + 1;\n  }\n  if (json1[temp].hasOwnProperty('pageprops')) {\n    return json1[temp].pageprops.wikibase_item;\n  }\n  return -1;\n};\n\n//Helper function to return revisions\n//@param {json} - json straight from query\n//@returns {promise} returns -1 if it fails to find it and otherwise returns revisions\nconst getRevisions = async json1 => {\n  let temp = 0;\n  while (typeof json1[temp] === 'undefined') {\n    temp = temp + 1;\n  }\n  if (json1[temp].hasOwnProperty('revisions')) {\n    return json1[temp].revisions;\n  }\n  return -1;\n};\n\n//Helper function to return revisions\n//@param {json} - json straight from query\n//@returns {promise} returns -1 if it fails to find it and otherwise returns revisions\nconst userContributionsSeperator = async (usercontribs, result) => {\n  if (result.hasOwnProperty('continue')) {\n    return [usercontribs, result['continue'].uccontinue];\n  } else {\n    return [usercontribs, -1];\n  }\n};\n\n//Grabs wikibase_id from a search\n//@param {string} searchItem - Item to search Qid for\n//@returns {Object} -1 or QID\nconst getWikibaseItem = async searchItem => {\n  const cacheResult = wikibaseCache.getCache(searchItem);\n  if (cacheResult != -1) {\n    return cacheResult;\n  } else {\n    const params = {\n      action: 'query',\n      format: 'json',\n      prop: 'pageprops',\n      titles: searchItem,\n    };\n    const result = await wikipediaQuery(\n      WIKIPEDIA_ENDPOINT_SEARCH,\n      params,\n      NUMBER_OF_RETRIES\n    ).then(result => extraResult(result.query.pages));\n    wikibaseCache.addCache(searchItem, result);\n    return result;\n  }\n};\n//Grabs revisions from qid, past 20 revisions only due to limitations from api\n// @param {string} qid - id to search revisions for\n// @returns {Object} -1 or revisions in json\nconst getRevisionsOfPage = async qid => {\n  const cacheResult = pageRevCache.getCache(qid);\n  if (cacheResult != -1) {\n    return cacheResult;\n  } else {\n    const params = {\n      action: 'query',\n      format: 'json',\n      prop: 'revisions',\n      titles: qid,\n      rvprops: 'ids|timestamp|flags|comment|user',\n      rvlimit: 20,\n    };\n    const item = await wikipediaQuery(\n      WIKIDATA_ENDPOINT,\n      params,\n      NUMBER_OF_RETRIES\n    ).then(result => getRevisionsHelper(result.query.pages, result));\n    pageRevCache.addCache(qid, item);\n    return item;\n  }\n};\n\n//Grabs revisions from qid, past 20 revisions only due to limitations from api\n// @param {string} qid - id to search revisions for\n// @param {string} cont - key to get next results\n// @returns {Object} -1 or revisions in json\nconst getRevisionsOfPageCont = async (qid, cont) => {\n  const cacheResult = pageRevCache.getCache(cont);\n  if (cacheResult != -1) {\n    return cacheResult;\n  } else {\n    const params = {\n      action: 'query',\n      format: 'json',\n      prop: 'revisions',\n      titles: qid,\n      rvprops: 'ids|timestamp|flags|comment|user',\n      rvlimit: 20,\n      rvcontinue: cont,\n    };\n    const item = await wikipediaQuery(\n      WIKIDATA_ENDPOINT,\n      params,\n      NUMBER_OF_RETRIES\n    ).then(result => getRevisionsHelper(result.query.pages, result));\n    pageRevCache.addCache(cont, item);\n    return item;\n  }\n};\n\nconst getRevisionsHelper = async (pages, result) => {\n  if (result.hasOwnProperty('continue')) {\n    return [getRevisions(pages), result['continue'].rvcontinue];\n  } else {\n    return [getRevisions(pages), -1];\n  }\n};\n\n/*\n  getPrefixSearch: gets a prefix search of 10 items from an input string\n  '' - String\n  # - number\n  Json nested inside query.prefixsearch\n  Json format:\n  {\n    ns: #,\n    title: '',\n    pageid: #\n  }\n  @params {searchItem} - prefix search item\n  @returns {Promise} - promise of 10 prefix search results\n*/\nexport const getPrefixSearch = async searchItem => {\n  const cacheResult = prefixCache.getCache(searchItem);\n  if (cacheResult != -1) {\n    return cacheResult;\n  } else {\n    const params = {\n      action: 'query',\n      format: 'json',\n      list: 'prefixsearch',\n      pssearch: searchItem,\n    };\n    const item = await wikipediaQuery(\n      WIKIPEDIA_ENDPOINT_SEARCH,\n      params,\n      NUMBER_OF_RETRIES\n    ).then(result => {\n      return result;\n    });\n    prefixCache.addCache(searchItem, item);\n    return item;\n  }\n};\n\n/*\n  getPageDescription: gets a short and long description of page\n  @params {searchItem} - page search item\n  @returns {Promise, Promise} - first item contains a short description of the page\n                                second item contains a long description of the page\n*/\n\nexport const getPageDescription = async searchItem => {\n  const item = await wikipediaQuery(\n    DESCRIPTION_REST_API + searchItem,\n    NUMBER_OF_RETRIES\n  ).then(result => [result.description, result.extract]);\n  console.log(item);\n  return item;\n};\n\n/*\n  httpGet - helper function, similar to wikipediaQuery for getHyperlinkedDescription function\n  @params {endpoint, params, n} - api endpoint link\n                                  api parameters\n                                  number of retries\n  @returns {response} - html hypertext linked string\n*/\nconst httpGet = async (endpoint, params, n) => {\n  try {\n    const paramsString = new URLSearchParams(params).toString();\n    const url = endpoint + '?' + paramsString + '&origin=*';\n    const xmlHttp = new XMLHttpRequest();\n    xmlHttp.open('GET', url, false);\n    xmlHttp.send(null);\n    return xmlHttp.responseText;\n  } catch (err) {\n    if (n === 1) {\n      throw err;\n    }\n    return setTimeout(httpGet(endpoint, params, n - 1), 500);\n  }\n};\n\n/*\n  getHyperlinkedDescription: using dbpedia spotlight, an input text is converted into a hyperlinked html text document\n  @params {text} - input text string to be converted\n  @returns {Promise} - output html file of the hyperlinked text\n*/\nexport const getHyperlinkedDescription = async text => {\n  const params = {\n    text: text,\n  };\n  const item = await httpGet(DBPEDIA_SPOTLIGHT_API, params, 1).then(\n    response => response\n  );\n  return item;\n};\n\n// test\n//Tahmid02016\n// const item = userSearch('Tahmid02016').then(str => {\n//   if (str[0]) {\n//     console.log(str[0]);\n//   }\n// });\n\n// let key = 0;\n// let i = 0;\n// const value = 'Albert Einstein';\n// const inter = setInterval(function() {\n//   if (i == 0) {\n//     const item = pageRevisionsSearch(value).then(str => {\n//       str[0].then(list => {\n//         console.log('first-call: ' + i);\n//         // console.log(list);\n//         i = i + 1;\n//       });\n//       console.log('Key ' + str[1]);\n//       key = str[1];\n//     });\n//   } else if (i > 0 && key != -1) {\n//     const item = pageRevisionsSearchCont(value, key).then(str => {\n//       str[0].then(list => {\n//         console.log('calls: ' + i);\n//         // console.log(list);\n//       });\n//       console.log('Key ' + str[1]);\n//       key = str[1];\n//     });\n//   } else if (key == -1) {\n//     console.log('FINISHED');\n//     clearInterval(inter);\n//   }\n// }, 2000);\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport PieChartRefresh from '../Components/PieChartRefresh';\nimport {\n  pageRevisionsSearch,\n  pageRevisionsSearchCont,\n} from '../Backend/searchingFunctionality';\nimport { getRecentActiveUsers } from '../Backend/APIWrapper';\n\nexport const NumberOfChangesSettings = {\n  getData: async function(searchValue) {\n    if (searchValue) {\n      const data = await pageRevisionsSearch(searchValue).then(str => {\n        str[0].then(value => {\n          this.setState({ values: value });\n        });\n        this.setState({ keyValue: str[1] });\n      });\n      const myMap = new Map();\n      this.state.values.forEach(item => {\n        if (!myMap.has(item.user)) {\n          myMap.set(item.user, item);\n        }\n      });\n      for (const item of myMap.values()) {\n        item.id = item.revid;\n        item.label = item.user;\n        item.value = this.state.values.reduce(function(s, o) {\n          if (o.user === item.user) {\n            s++;\n          }\n          return s;\n        }, 0);\n      }\n      const array = [myMap.size];\n      let j = 0;\n      for (const item of myMap.values()) {\n        array[j++] = item;\n      }\n      this.setState({ singleArray: array });\n      return array;\n    }\n  },\n  refreshTime: 2000,\n  refreshMethod: async function(searchValue) {\n    if (this.state.keyValue != -1) {\n      const data = await pageRevisionsSearchCont(\n        searchValue,\n        this.state.keyValue\n      ).then(str => {\n        str[0].then(value => {\n          this.setState({ values: this.state.values.concat(value) });\n        });\n        this.setState({ keyValue: str[1] });\n      });\n      const myMap = new Map();\n      this.state.values.forEach(item => {\n        if (!myMap.has(item.user)) {\n          myMap.set(item.user, item);\n        }\n      });\n      for (const item of myMap.values()) {\n        item.id = item.revid;\n        item.label = item.user;\n        item.value = this.state.values.reduce(function(s, o) {\n          if (o.user === item.user) {\n            s++;\n          }\n          return s;\n        }, 0);\n      }\n      const array = [myMap.size];\n      let j = 0;\n      for (const item of myMap.values()) {\n        array[j++] = item;\n      }\n      this.setState({ singleArray: array });\n      return array;\n    }\n    return -1;\n  },\n  colorBy: 'type',\n  colors: 'set1',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/User:' + click.label);\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:');\n  },\n};\n\nclass NumberOfChanges extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n      value: this.props.value,\n      key: '',\n      recentChanges: [],\n      loading: true,\n      fullGraph: this.props.fullGraph,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.fullGraph == false) {\n      this.props.onRef(this);\n    }\n  }\n\n  onclick(search) {\n    this.setState({ value: search });\n  }\n\n  handlePause = () => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  render() {\n    if (this.props.fullGraph) {\n      return (\n        <GraphPage\n          handlePause={this.handlePause}\n          paused={this.state.paused}\n          explanation={\n            <div>\n              {'The number of changes made by different users on this page.' +\n                ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\n              <p>\n                <img\n                  className=\"legend\"\n                  src={require('../legend.svg')}\n                  alt=\"Legend\"\n                />\n              </p>\n            </div>\n          }\n          graph={\n            <PieChartRefresh\n              fullGraph={this.props.fullGraph}\n              settings={NumberOfChangesSettings}\n              paused={this.state.paused}\n              recentChanges={this.state.recentChanges}\n              value={this.state.value}\n              loading={this.state.loading}\n            />\n          }\n          name=\"Number of Changes\"\n        />\n      );\n    } else {\n      if (this.state.value === '') {\n        return (\n          <div>\n            <p>Search For a Graph</p>\n          </div>\n        );\n      }\n      return (\n        <PieChartRefresh\n          fullGraph={this.props.fullGraph}\n          settings={NumberOfChangesSettings}\n          paused={this.state.paused}\n          recentChanges={this.state.recentChanges}\n          value={this.state.value}\n          loading={this.state.loading}\n        />\n      );\n    }\n  }\n}\nexport default NumberOfChanges;\n","import React, { Component } from 'react';\nimport Navbar from '../Components/Navbar';\nimport GraphCard from '../Components/GraphCard';\nimport FeedData from '../Components/Feed';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\nimport PieChart from '../Components/PieChart';\nimport { MostActiveUsersGraphSettings } from './MostActiveUsers';\nimport { MostActivePagesGraphSettings } from './MostActivePages';\nimport { LargestRecentEditsSettings } from './LargestRecentEdits';\nimport { RecentEditSizeSettings } from './RecentEditSize';\nimport { ProportionFlaggedSettings } from './ProportionFlagged';\nimport { MEMORY_MODE } from '../Backend/APIWrapper';\n\nimport { NumberOfChangesSettings } from './NumberOfChanges';\n\n//This is the dashboard page, it shows the feed and all of our graphs\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: this.props.history,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"HomePage\">\n        <Navbar />\n        <div className=\"row justify-content-left text-dark\">\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\n            <div className=\"feedContainer\">\n              <FeedData />\n            </div>\n            <div>\n              <button\n                className=\"feed-button button-position\"\n                onClick={e => {\n                  this.props.history.push('/user-search');\n                }}\n              >\n                User Search\n              </button>\n              <button\n                className=\"feed-button button-position\"\n                onClick={e => {\n                  this.props.history.push('/page-revisions');\n                }}\n              >\n                Page Search\n              </button>\n            </div>\n          </div>\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\n            <label>\n              <input\n                type=\"checkbox\"\n                value=\"memory\"\n                onInput={e => {\n                  MEMORY_MODE.mode = !MEMORY_MODE.mode;\n                  console.log('Memory mode toggled');\n                }}\n              />\n              Memory saving mode\n            </label>\n            <div className=\"deck-container\">\n              <CardDeck className=\"deck\">\n                <GraphCard\n                  title=\"Recent Edit Size\"\n                  pageLink=\"recent-edit-size\"\n                  history={this.state.history}\n                  graph={\n                    <PieChart\n                      paused={true}\n                      fullGraph={false}\n                      settings={RecentEditSizeSettings}\n                    />\n                  }\n                />\n                <GraphCard\n                  title=\"Most Active Users\"\n                  pageLink=\"most-active-users\"\n                  history={this.state.history}\n                  graph={\n                    <SimpleBarGraph\n                      paused={false}\n                      fullGraph={false}\n                      settings={MostActiveUsersGraphSettings}\n                    />\n                  }\n                />\n              </CardDeck>\n              <CardDeck className=\"deck\">\n                <GraphCard\n                  title=\"Most Active Pages\"\n                  pageLink=\"most-active-pages\"\n                  history={this.state.history}\n                  graph={\n                    <SimpleBarGraph\n                      paused={false}\n                      fullGraph={false}\n                      settings={MostActivePagesGraphSettings}\n                    />\n                  }\n                />\n              </CardDeck>\n\n              <CardDeck className=\"deck\">\n                <GraphCard\n                  title=\"Largest Recent Edits\"\n                  pageLink=\"largest-recent-edits\"\n                  history={this.state.history}\n                  graph={\n                    <PieChart\n                      paused={true}\n                      fullGraph={false}\n                      settings={LargestRecentEditsSettings}\n                    />\n                  }\n                />\n                <GraphCard\n                  title={ProportionFlaggedSettings.name}\n                  pageLink=\"proportion-flagged\"\n                  history={this.state.history}\n                  graph={\n                    <PieChart\n                      paused={false}\n                      fullGraph={false}\n                      settings={ProportionFlaggedSettings}\n                    />\n                  }\n                />\n              </CardDeck>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\nimport { getMostEditsUsers } from '../Backend/APIWrapper';\n\nexport const UsersByMostEditsGraphSettings = {\n  getData: async function() {\n    return await getMostEditsUsers();\n  },\n  refreshTime: 2000,\n  refreshMethod: function() {\n    this.loadData();\n  },\n  keys: ['editcount'],\n  index: 'name',\n  xAxis: 'users',\n  yAxis: 'edit count',\n  colors: 'paired',\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:');\n  },\n};\n\nclass UsersByMostEditsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n    };\n  }\n\n  handlePause = event => {\n    this.setState({ paused: event.target.value });\n  };\n\n  render() {\n    return (\n      <GraphPage\n        handlePause={this.handlePause}\n        paused={this.state.paused}\n        graph={\n          <SimpleBarGraph\n            fullGraph={true}\n            settings={UsersByMostEditsGraphSettings}\n            paused={this.state.paused}\n          />\n        }\n        name=\"Users By Most Edits\"\n      />\n    );\n  }\n}\nexport default UsersByMostEditsPage;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from '../Components/Navbar';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nclass AboutPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      history: this.props.history,\n      studentList: [\n        {\n          firstName: 'Jeremie',\n          lastName: 'Sajeev Daniel',\n          year: '3rd Year ICS',\n          team: 'Backend Team',\n          github: 'https://github.com/JeremieSD',\n        },\n        {\n          firstName: 'Conor',\n          lastName: \"O'Neill\",\n          year: '3rd Year ICS',\n          team: 'Frontend Team',\n          github: 'https://github.com/conoro24',\n        },\n        {\n          firstName: 'Matteo',\n          lastName: 'McGuinness',\n          year: '2nd Year ICS',\n          team: 'Frontend Team',\n          github: 'https://github.com/m477301',\n        },\n        {\n          firstName: 'Emmet',\n          lastName: 'Morrin',\n          year: '2nd Year ICS',\n          team: 'Backend Team',\n          github: 'https://github.com/Unimuspanet',\n        },\n        {\n          firstName: 'Aoife',\n          lastName: 'Khan',\n          year: '2nd Year CSB',\n          team: 'Frontend Team',\n          github: 'https://github.com/aoife-K',\n        },\n        {\n          firstName: 'Xiaolei',\n          lastName: 'Zhang',\n          year: '2nd Year ICS',\n          team: 'Frontend Team',\n          github: 'https://github.com/Xiaoleiii',\n        },\n      ],\n      currentStudent: true,\n    };\n    this.setData = this.setData.bind(this);\n  }\n  setData = () => {\n    let list = [];\n    if (this.state.currentStudent) {\n      list = [\n        {\n          firstName: 'Brian',\n          lastName: 'Lynch',\n          year: '3rd Year CS',\n          team: 'Frontend Team',\n          github: 'https://github.com/brianlunch',\n        },\n        {\n          firstName: 'Isobel',\n          lastName: 'Mahon',\n          year: '3rd Year CS',\n          team: 'Frontend Team',\n          github: 'https://github.com/isobelm',\n        },\n        {\n          firstName: 'Odhran',\n          lastName: 'Mullen',\n          year: '3rd Year CSB',\n          team: 'Backend Team',\n          github: 'https://github.com/omullan',\n        },\n        {\n          firstName: 'Alex',\n          lastName: 'Mahon',\n          year: '2nd Year CS',\n          team: 'Frontend Team',\n          github: 'https://github.com/Juuiko',\n        },\n        {\n          firstName: 'Flora',\n          lastName: 'Molnar',\n          year: '2nd Year CSB',\n          team: 'Frontend Team',\n          github: 'https://github.com/flora-m',\n        },\n        {\n          firstName: 'Lexes',\n          lastName: 'Mantiquilla',\n          year: '2nd Year CS',\n          team: 'Backend Team',\n          github: 'https://github.com/lexesjan',\n        },\n      ];\n    } else {\n      list = [\n        {\n          firstName: 'Jeremie',\n          lastName: 'Sajeev Daniel',\n          year: '3rd Year ICS',\n          team: 'Backend Team',\n          github: 'https://github.com/JeremieSD',\n        },\n        {\n          firstName: 'Conor',\n          lastName: \"O'Neill\",\n          year: '3rd Year ICS',\n          team: 'Frontend Team',\n          github: 'https://github.com/conoro24',\n        },\n        {\n          firstName: 'Matteo',\n          lastName: 'McGuinness',\n          year: '2nd Year ICS',\n          team: 'Frontend Team',\n          github: 'https://github.com/m477301',\n        },\n        {\n          firstName: 'Emmet',\n          lastName: 'Morrin',\n          year: '2nd Year ICS',\n          team: 'Backend Team',\n          github: 'https://github.com/Unimuspanet',\n        },\n        {\n          firstName: 'Aoife',\n          lastName: 'Khan',\n          year: '2nd Year CSB',\n          team: 'Frontend Team',\n          github: 'https://github.com/aoife-K',\n        },\n        {\n          firstName: 'Xiaolei',\n          lastName: 'Zhang',\n          year: '2nd Year ICS',\n          team: 'Frontend Team',\n          github: 'https://github.com/Xiaoleiii',\n        },\n      ];\n    }\n    this.setState({\n      currentStudent: !this.state.currentStudent,\n      studentList: list,\n    });\n  };\n  render() {\n    return (\n      <div className=\"aboutPageContainer\">\n        <Navbar history={this.state.history} />\n        <div className=\" text-left\">\n          <div className=\"row\">\n            <div className=\"col-lg-6 col-sm-12  aboutPageContent\">\n              <div className=\"explainContainer text-left\">\n                <h3 className=\"text-blue\">Why we made our project</h3>\n                <p>\n                  We are a group of Computer Science students studying in\n                  Trinity College Dublin. We undertake a module in which we are\n                  given real world projects from a variety of individuals,\n                  researchers and businesses.\n                </p>\n                <p>\n                  Our clients were Fabrizio and Damien who work in the Trinity\n                  ADAPT research center and they tasked us to create a website\n                  that will visualise various changes to Wikidata in\n                  quasi-real-time. Its targeted users are researchers and should\n                  make it easier to identify spam and incorrect or malicious\n                  edits to Wikidata.\n                </p>\n              </div>\n              <br />\n              <div className=\" licenseContainer text-left\">\n                <h3 className=\"text-blue\">Licensing</h3>\n                <p>\n                  We have insured all libraries and all project dependencies\n                  licenses cover our web apps intended use.\n                </p>\n                <p>\n                  We have decided to use an{' '}\n                  <a href=\"https://opensource.org/licenses/MIT\">MIT license</a>{' '}\n                  for this project.\n                </p>\n                <p>\n                  More in depth information along with the projects source code\n                  can be found on the projects{' '}\n                  <a href=\"https://github.com/isobelm/Software-Engineering\">\n                    Github.\n                  </a>{' '}\n                </p>\n              </div>\n            </div>\n            <div className=\"col-lg-6 col-sm-12 profiles\">\n              <div className=\"client\">\n                <h3 className=\"text-red\">Clients</h3>\n                <div className=\"card-deck\">\n                  <div className=\"card card-profile\">\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title text-center \">Damien Graux</h5>\n                      <div className=\"text-center\">\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"GH aBlack\"\n                          href=\"https://dgraux.github.io/\"\n                        >\n                          <FontAwesomeIcon icon={faLink} />\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"card card-profile\">\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title text-center\">\n                        Fabrizio Orlandi\n                      </h5>\n                      <div className=\"text-center\">\n                        <a\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"GH aBlack\"\n                          href=\"https://www.scss.tcd.ie/personnel/orlandif\"\n                        >\n                          <FontAwesomeIcon icon={faLink} />\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <br />\n              <div className=\"text-title\">\n                <h3 className=\"text-red\">Students</h3>\n                <button\n                  className=\"text-button text-title-button\"\n                  onClick={this.setData}\n                >\n                  {this.state.currentStudent\n                    ? 'see previous team'\n                    : 'see present team'}\n                </button>\n              </div>\n              <div className=\"card-deck  text-center\">\n                {this.state.studentList.slice(0, 3).map(function(item, key) {\n                  return (\n                    <div className=\"card card-profile\" key={key}>\n                      <div className=\"card-body\">\n                        <h5 className=\"card-title text-center\">\n                          {item.firstName}\n                          <br /> {item.lastName}\n                        </h5>\n                        <p className=\"card-text\">\n                          <b>{item.year}</b>\n                          <br />\n                          {item.team}\n                        </p>\n                        <div className=\"text-center\">\n                          <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"GH aBlack\"\n                            href={item.github}\n                          >\n                            <FontAwesomeIcon icon={faGithub} />\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"card-deck  text-center\">\n                {this.state.studentList.slice(3, 6).map(function(item, key) {\n                  return (\n                    <div className=\"card card-profile\" key={key}>\n                      <div className=\"card-body\">\n                        <h5 className=\"card-title text-center\">\n                          {item.firstName}\n                          <br /> {item.lastName}\n                        </h5>\n                        <p className=\"card-text\">\n                          <b>{item.year}</b>\n                          <br />\n                          {item.team}\n                        </p>\n                        <div className=\"text-center\">\n                          <a\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"GH aBlack\"\n                            href={item.github}\n                          >\n                            <FontAwesomeIcon icon={faGithub} />\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React, { useState, useEffect } from 'react';\nconst SearchBar = props => {\n  const [search, setSearch] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [pub, setPub] = useState(false);\n  // const [results, setResults] = useState(null);\n\n  const loadData = value => {\n    if (props.settings.type == 0) {\n      const getData = props.settings.getData.bind(this);\n      // console.log('dataToBeFetched ');\n      getData(value).then(data => {\n        // console.log('data ' + data);\n        // setResults(data);\n        parseData(data);\n      });\n    }\n  };\n\n  const parseData = results => {\n    // console.log(results);\n    const values = results.query.prefixsearch;\n    setSuggestions([]);\n    values.map(obj => {\n      const title = obj.title;\n      const id = obj.pageid;\n      const sugg = { id, title };\n      setSuggestions(suggestions => {\n        return [...suggestions, sugg];\n      });\n    });\n    // console.log('finish');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    if (search && !pub) {\n      // console.log(search);\n      loadData(search);\n    } else {\n      setSuggestions([]);\n      setPub(false);\n    }\n  }, [search]);\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit} style={{ height: '100%' }}>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n        }}\n      >\n        <div\n          className=\"autoComplete\"\n          style={{\n            position: 'relative',\n            margin: '2rem',\n          }}\n        >\n          <input\n            type=\"text\"\n            id=\"input\"\n            name=\"input\"\n            value={search}\n            onChange={e => setSearch(e.target.value)}\n            style={{\n              backgroundColor: '#f1f1f1',\n              marginRight: '2rem',\n              width: '15rem',\n              borderStyle: 'solid',\n              borderColor: '#d4d4d4',\n            }}\n          />\n          <input\n            type=\"submit\"\n            onClick={() => {\n              props.searchValue(search);\n            }}\n            style={{}}\n          />\n\n          {search &&\n            suggestions.map(suggestion => {\n              const { id, title } = suggestion;\n              return (\n                <div\n                  key={id}\n                  className=\"searchListSuggestion\"\n                  onClick={e => {\n                    setPub(true);\n                    setSearch(title);\n                    handleSubmit(e);\n                  }}\n                >\n                  {title}\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import React, { Component } from 'react';\r\nimport * as utils from '../Backend/searchingFunctionality';\r\n\r\nclass PageFeed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      recentChanges: [],\r\n      paused: false,\r\n      value: '',\r\n      cont: -1,\r\n      max: true,\r\n    };\r\n    this.togglePause = this.togglePause.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n    this.refreshInterval = setInterval(\r\n      function() {\r\n        if (!this.state.paused && this.state.value && this.state.cont != -1) {\r\n          const item = utils.userSearch(this.state.value).then(str => {\r\n            if (str[0]) {\r\n              this.setState({\r\n                recentChanges: this.state.recentChanges.concat(str[0]),\r\n                cont: str[1],\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }.bind(this),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.refreshInterval);\r\n  }\r\n\r\n  onclick(search) {\r\n    if (search) {\r\n      this.setState({ value: search });\r\n      const item = utils.userSearch(search).then(str => {\r\n        if (str[0]) {\r\n          this.setState({ recentChanges: str[0], cont: str[1] });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  togglePause() {\r\n    this.state.paused = !this.state.paused;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 className=\"text-blue text-left\">User Search</h3>\r\n        <form className=\"text-left\" onChange={this.togglePause}>\r\n          <label>\r\n            <input type=\"checkbox\" /> Paused\r\n          </label>\r\n        </form>\r\n        <ul className=\"search-list-page-group\">\r\n          {this.state.recentChanges.map((item, index) => (\r\n            <li className=\"list-group-item text-left\" key={index}>\r\n              <div>\r\n                {`Title: ${item.title}`}\r\n                <br />\r\n                {`Comment: ${item.comment}`}\r\n                <br />\r\n                {`Time: ${item.timestamp}`}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageFeed;\r\n","import Card from 'react-bootstrap/Card';\nimport React, { Component } from 'react';\nclass GraphCardSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      title: this.props.title,\n      pageLink: this.props.pageLink,\n      graph: this.props.graph,\n      value: this.props.value,\n    };\n  }\n\n  onClick = () => {\n    this.state.history.push(this.state.pageLink + ':' + this.props.value);\n  };\n\n  render() {\n    return (\n      <Card onClick={this.onClick} tag=\"a\" className=\"graph-card\">\n        <Card.Body>\n          <Card.Title className=\"card-title\">{this.state.title}</Card.Title>\n          {this.state.graph}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default GraphCardSearch;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport PieChartRefresh from '../Components/PieChartRefresh';\nimport { userSearch, userSearchCont } from '../Backend/searchingFunctionality';\nimport { getRecentActiveUsers } from '../Backend/APIWrapper';\n\nexport const NumberOfChangesUserSettings = {\n  getData: async function(searchValue) {\n    if (searchValue) {\n      const data = await userSearch(searchValue).then(str => {\n        if (str[0]) {\n          this.setState({ values: str[0] });\n          this.setState({ keyValue: str[1] });\n        }\n      });\n      if (this.state.keyValue != -1) {\n        let myMap = new Map();\n        this.state.values.forEach(item => {\n          if (!myMap.has(item.title)) {\n            myMap.set(item.title, item);\n          }\n        });\n        for (let item of myMap.values()) {\n          item.id = item.revid;\n          item.label = item.title;\n          item.value = this.state.values.reduce(function(s, o) {\n            if (o.title === item.title) {\n              s++;\n            }\n            return s;\n          }, 0);\n        }\n        let array = [myMap.size];\n        let j = 0;\n        for (let item of myMap.values()) {\n          array[j++] = item;\n        }\n        this.setState({ singleArray: array });\n        return array;\n      }\n      return -1;\n    }\n  },\n  refreshTime: 2000,\n  refreshMethod: async function(searchValue) {\n    if (this.state.keyValue != -1) {\n      const data = await userSearchCont(searchValue, this.state.keyValue).then(\n        str => {\n          if (str[0]) {\n            this.setState({ values: this.state.values.concat(str[0]) });\n            this.setState({ keyValue: str[1] });\n          }\n        }\n      );\n      const myMap = new Map();\n      this.state.values.forEach(item => {\n        if (!myMap.has(item.title)) {\n          myMap.set(item.title, item);\n        }\n      });\n      for (const item of myMap.values()) {\n        item.id = item.revid;\n        item.label = item.title;\n        item.value = this.state.values.reduce(function(s, o) {\n          if (o.title === item.title) {\n            s++;\n          }\n          return s;\n        }, 0);\n      }\n      const array = [myMap.size];\n      let j = 0;\n      for (const item of myMap.values()) {\n        array[j++] = item;\n      }\n      this.setState({ singleArray: array });\n      return array;\n    }\n    return -1;\n  },\n  colorBy: 'type',\n  colors: 'set1',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\n  },\n};\n\nclass NumberOfChanges extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n      value: this.props.value,\n      key: '',\n      recentChanges: [],\n      loading: false,\n      fullGraph: this.props.fullGraph,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.fullGraph == false) {\n      this.props.onRef(this);\n    } else if (this.state.value) {\n      this.setState({ loading: true });\n    }\n  }\n\n  onclick(search) {\n    this.setState({ value: search });\n    if (search) {\n      this.setState({ loading: true });\n    } else {\n      this.setState({ loading: false });\n    }\n  }\n\n  // handlePause = () => {\n  //   const paused = this.state.paused;\n  //   this.setState({ paused: !paused });\n  // };\n\n  render() {\n    if (this.state.fullGraph) {\n      return (\n        <GraphPage\n          handlePause={this.handlePause}\n          paused={this.state.paused}\n          explanation={\n            <div>\n              {'The number of changes made by this user on different pages.' +\n                ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\n              <p>\n                <img\n                  className=\"legend\"\n                  src={require('../legend.svg')}\n                  alt=\"Legend\"\n                />\n              </p>\n            </div>\n          }\n          graph={\n            <PieChartRefresh\n              fullGraph={this.state.fullGraph}\n              settings={NumberOfChangesUserSettings}\n              paused={this.state.paused}\n              recentChanges={this.state.recentChanges}\n              value={this.state.value}\n              loading={this.state.loading}\n            />\n          }\n          name={'Number of Changes by ' + this.state.value}\n        />\n      );\n    } else {\n      if (this.state.value === '') {\n        return (\n          <div>\n            <p>Search For a Graph</p>\n          </div>\n        );\n      }\n      return (\n        <PieChartRefresh\n          fullGraph={this.state.fullGraph}\n          settings={NumberOfChangesUserSettings}\n          paused={this.state.paused}\n          recentChanges={this.state.recentChanges}\n          value={this.state.value}\n          loading={this.state.loading}\n        />\n      );\n    }\n  }\n}\nexport default NumberOfChanges;\n","import { ResponsiveCalendar } from '@nivo/calendar';\nimport React, { Component } from 'react';\n\nclass CalendarGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false,\n      data: null,\n      fullGraph: this.props.fullGraph,\n      value: this.props.value,\n      initialCall: true,\n      dataFinished: false,\n      changeValue: '',\n    };\n  }\n\n  componentDidMount() {\n    // once mounted, the window will set an interval to refresh, when not loading\n    this.refreshInterval = setInterval(async () => {\n      if (!this.props.loading) {\n        this.setState({\n          loaded: false,\n          initialCall: true,\n          dataFinished: false,\n        });\n      }\n      // On value change update the props to propogate changes throughout the program\n      if (this.state.changeValue != this.props.value) {\n        this.setState({\n          changeValue: this.props.value,\n          value: this.props.value,\n          dataFinished: false,\n          initialCall: true,\n        });\n      }\n      if (\n        this.state.initialCall &&\n        this.state.value &&\n        !this.state.dataFinished &&\n        this.props.loading\n      ) {\n        this.setState({ changeValue: this.state.value });\n        await this.refresh();\n      } else if (\n        !this.state.initialCall &&\n        this.state.value &&\n        !this.state.dataFinished &&\n        this.props.loading\n      ) {\n        await this.refreshCont();\n      }\n    }, this.props.settings.refreshTime);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refreshInterval);\n  }\n\n  startDate = this.findStartDate();\n  todaysDate = this.findTodaysDate();\n\n  refresh = async () => {\n    this.setState({ initialCall: false });\n    this.loadData();\n  };\n\n  refreshCont = async () => {\n    this.loadDataCont();\n  };\n\n  tooltip = function(click, url) {\n    return (\n      <div className=\"iframe-container\">\n        <iframe\n          src={url + click.indexValue}\n          className=\"iframe\"\n          title=\"tooltip-option-2\"\n        />\n      </div>\n    );\n  };\n\n  loadData = () => {\n    const getData = this.props.settings.getData.bind(this);\n    getData(this.props.value).then(data => {\n      const smlData = data;\n      this.setState({\n        loaded: true,\n        data: smlData,\n      });\n    });\n  };\n\n  loadDataCont = () => {\n    const getData = this.props.settings.refreshMethod.bind(this);\n    getData(this.props.value).then(data => {\n      if (data != -1) {\n        const smlData = data;\n        this.setState({\n          loaded: true,\n          data: smlData,\n        });\n      } else {\n        this.setState({\n          dataFinished: true,\n          // value: '',\n          initialCall: true,\n          // loaded: false,\n          // data: null,\n        });\n      }\n    });\n  };\n\n  // this method sets up the day for today in the calendar graph!\n  findTodaysDate() {\n    const today = new Date();\n    const date =\n      today.getFullYear() +\n      '-' +\n      (today.getMonth() + 1) +\n      '-' +\n      today.getDate();\n    return date;\n  }\n\n  //this method sets the start date of the calendar to January 1st 1 year before the current year\n  findStartDate() {\n    const today = new Date();\n    const date = today.getFullYear() - 1 + '-01-01';\n    return date;\n  }\n\n  render = () => {\n    let margin = {};\n    let classname = '';\n    if (this.state.fullGraph) {\n      margin = { top: 5, right: 60, bottom: 80, left: 80 };\n      classname = 'full-graph-container';\n      if (this.props.settings.onClick) {\n      }\n    } else {\n      margin = { top: 0, right: 0, bottom: 0, left: 0 };\n      classname = 'Graph-Container-Card';\n    }\n    return (\n      <div className={classname}>\n        {this.state.loaded === false ? (\n          'Loading...'\n        ) : (\n          <ResponsiveCalendar\n            data={this.state.data}\n            from={this.startDate}\n            to={this.todaysDate}\n            emptyColor=\"#eeeeee\"\n            colors={['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']}\n            margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\n            yearSpacing={40}\n            monthBorderColor=\"#ffffff\"\n            dayBorderWidth={2}\n            dayBorderColor=\"#ffffff\"\n            legends={[\n              {\n                anchor: 'bottom-right',\n                direction: 'row',\n                translateY: 36,\n                itemCount: 4,\n                itemWidth: 42,\n                itemHeight: 36,\n                itemsSpacing: 14,\n                itemDirection: 'right-to-left',\n              },\n            ]}\n          />\n        )}\n      </div>\n    );\n  };\n}\n\nexport default CalendarGraph;\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport CalendarGraph from '../Components/CalendarGraph';\nimport { userSearch, userSearchCont } from '../Backend/searchingFunctionality';\n\nexport const UserContributionsOverTimeSettings = {\n  getData: async function(searchValue) {\n    const data = await userSearch(searchValue).then(str => {\n      if (str[0]) {\n        this.setState({ values: str[0] });\n        this.setState({ nextVals: str[0] });\n        this.setState({ keyValue: str[1] });\n      }\n    });\n    const myMap = new Map();\n    this.state.values.forEach(item => {\n      if (\n        !myMap.has(item.timestamp.slice(0, -10)) &&\n        item.timestamp.slice(0, -10) > '2020-01-01' &&\n        item.timestamp.slice(0, -10) < '2021-07-01'\n      ) {\n        myMap.set(item.timestamp.slice(0, -10), item);\n      }\n    });\n    for (const item of myMap.values()) {\n      item.day = item.timestamp.slice(0, -10);\n      item.value = this.state.values.reduce(function(s, o) {\n        if (o.timestamp.slice(0, -10) === item.day) {\n          s++;\n        }\n        return s;\n      }, 0);\n    }\n    const array = [myMap.size];\n    let j = 0;\n    for (const item of myMap.values()) {\n      array[j++] = item;\n    }\n    return array;\n  },\n  refreshTime: 2000,\n  refreshMethod: async function(searchValue) {\n    if (this.state.keyValue != -1) {\n      const data = await userSearchCont(searchValue, this.state.keyValue).then(\n        str => {\n          if (str[0]) {\n            this.setState({ values: this.state.values.concat(str[0]) });\n          }\n          this.setState({ keyValue: str[1] });\n        }\n      );\n      const myMap = new Map();\n      this.state.values.forEach(item => {\n        if (\n          !myMap.has(item.timestamp.slice(0, -10)) &&\n          item.timestamp.slice(0, -10) > '2020-01-01' &&\n          item.timestamp.slice(0, -10) < '2021-07-01'\n        ) {\n          myMap.set(item.timestamp.slice(0, -10), item);\n        }\n      });\n      for (const item of myMap.values()) {\n        item.day = item.timestamp.slice(0, -10);\n        item.value = this.state.values.reduce(function(s, o) {\n          if (o.timestamp.slice(0, -10) === item.day) {\n            s++;\n          }\n          return s;\n        }, 0);\n      }\n      const array = [myMap.size];\n      let j = 0;\n      for (const item of myMap.values()) {\n        array[j++] = item;\n      }\n      return array;\n    }\n    return -1;\n  },\n  colorBy: 'type',\n  colors: 'set1',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\n  },\n};\n\nclass UserContributionsOverTime extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      paused: false,\n      value: this.props.value,\n      loading: false,\n      fullGraph: this.props.fullGraph,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.fullGraph == false) {\n      this.props.onRef(this);\n    } else if (this.state.value) {\n      this.setState({ loading: true });\n    }\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  onclick(search) {\n    this.setState({ value: search });\n    if (search) {\n      this.setState({ loading: true });\n    } else {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    if (this.state.fullGraph) {\n      return (\n        <GraphPage\n          handlePause={this.handlePause}\n          paused={this.state.paused}\n          explanation={\n            <div>\n              {'Revisions over time by this user.' +\n                ' Hover over a section to see the number of revisions made that day.'}\n              <p>\n                <img\n                  className=\"legend\"\n                  src={require('../legend.svg')}\n                  alt=\"Legend\"\n                />\n              </p>\n            </div>\n          }\n          graph={\n            <CalendarGraph\n              fullGraph={this.state.fullGraph}\n              settings={UserContributionsOverTimeSettings}\n              paused={this.state.paused}\n              value={this.state.value}\n              loading={this.state.loading}\n            />\n          }\n          name=\"User Contributions Over Time\"\n        />\n      );\n    } else {\n      if (this.state.value === '') {\n        return (\n          <div>\n            <p>Search For a Graph</p>\n          </div>\n        );\n      }\n      return (\n        <CalendarGraph\n          fullGraph={this.state.fullGraph}\n          settings={UserContributionsOverTimeSettings}\n          paused={this.state.paused}\n          value={this.state.value}\n          loading={this.state.loading}\n        />\n      );\n    }\n  }\n}\nexport default UserContributionsOverTime;\n","import React, { Component } from 'react';\r\nimport Navbar from '../Components/Navbar';\r\nimport SearchBar from '../Components/SearchBar';\r\nimport UserFeed from '../Components/UserFeed';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport GraphCardSearch from '../Components/GraphCardSearch';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NumberOfChangesUser, {\r\n  NumberOfChangesSettings,\r\n} from './NumberOfChangesUser';\r\nimport * as utils from '../Backend/searchingFunctionality';\r\nimport UserContributionsOverTime, {\r\n  UserContributionsOverTimeSettings,\r\n} from './UserContributionsOverTime';\r\nimport CalendarGraph from '../Components/CalendarGraph';\r\n\r\nclass UsersSearchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n      value: '',\r\n      ifConfirm: true,\r\n      firmsList: [],\r\n      recentChanges: [],\r\n      invalidSearch: false,\r\n      loading: false,\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  //Match column mouse click events\r\n  onClick(value) {\r\n    this.setState({ invalidSearch: false });\r\n    this.checkUser(value).then(bool => {\r\n      if (bool) {\r\n        this.feed.onclick(value);\r\n        this.overTime.onclick(value);\r\n        this.changes.onclick(value);\r\n        this.setState({ value: value });\r\n      } else {\r\n        this.setState({ invalidSearch: true });\r\n        this.feed.onclick('');\r\n        this.overTime.onclick('');\r\n        this.changes.onclick('');\r\n      }\r\n    });\r\n  }\r\n\r\n  checkUser = async searchValue => {\r\n    let data = false;\r\n    data = await utils.userSearch(searchValue).then(str => {\r\n      if (str[0]) {\r\n        if (str[1] != -1) {\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n    return data;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar history={this.state.history} />\r\n        <div className=\"row justify-content-left text-dark\">\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\r\n            <div className=\"feedContainer\">\r\n              <UserFeed\r\n                value={this.state.value}\r\n                onRef={ref => {\r\n                  this.feed = ref;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\r\n            <div>\r\n              <SearchBar\r\n                settings={SearchSettings}\r\n                searchValue={this.onClick.bind(this)}\r\n              />\r\n              {this.state.invalidSearch && <p>This User does not exist.</p>}\r\n              <CardDeck className=\"CardDeckRev\">\r\n                <GraphCardSearch\r\n                  title=\"Number of Changes by User\"\r\n                  pageLink=\"user-number-of-changes\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <NumberOfChangesUser\r\n                      fullGraph={false}\r\n                      history={this.state.history}\r\n                      onRef={ref => {\r\n                        this.changes = ref;\r\n                      }}\r\n                      value=\"\"\r\n                    />\r\n                  }\r\n                  value={this.state.value}\r\n                />\r\n              </CardDeck>\r\n              <CardDeck className=\"CardDeckRev\">\r\n                <GraphCardSearch\r\n                  title=\"User Contributions Over Time\"\r\n                  pageLink=\"user-contributions-over-time\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <UserContributionsOverTime\r\n                      fullGraph={false}\r\n                      history={this.state.history}\r\n                      onRef={ref => {\r\n                        this.overTime = ref;\r\n                      }}\r\n                      value=\"\"\r\n                    />\r\n                  }\r\n                  value={this.state.value}\r\n                />\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SearchSettings = {\r\n  //   getData: async value => {\r\n  //     let data;\r\n  //     const item = await utils.getPrefixSearch(value).then(str => {\r\n  //       console.log(str);\r\n  //       data = str;\r\n  //     });\r\n  //     return \"data\";\r\n  //   },\r\n  type: 1,\r\n};\r\n\r\nexport default UsersSearchPage;\r\n","import React, { Component } from 'react';\r\nimport * as utils from '../Backend/searchingFunctionality';\r\n\r\nclass PageFeed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      recentChanges: [],\r\n      paused: false,\r\n      value: '',\r\n    };\r\n    this.togglePause = this.togglePause.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n    this.refreshInterval = setInterval(\r\n      function() {\r\n        // console.log(\r\n        //   'timed task starts' + this.state.paused + '----' + this.state.value\r\n        // );\r\n        if (!this.state.paused && this.state.value) {\r\n          // console.log('timed task executes');\r\n          const item = utils.pageRevisionsSearch(this.state.value).then(str => {\r\n            if (str[0]) {\r\n              str[0].then(value => {\r\n                // console.log(value);\r\n                this.setState({ recentChanges: value });\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }.bind(this),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.refreshInterval);\r\n  }\r\n\r\n  onclick(search) {\r\n    this.setState({ value: search });\r\n    const item = utils.pageRevisionsSearch(search).then(str => {\r\n      if (str[0]) {\r\n        str[0].then(value => {\r\n          this.setState({ recentChanges: value });\r\n        });\r\n      }\r\n    });\r\n  }\r\n  togglePause() {\r\n    this.state.paused = !this.state.paused;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 className=\"text-blue text-left\">Page Revisions</h3>\r\n        <form className=\"text-left\" onChange={this.togglePause}>\r\n          <label>\r\n            <input type=\"checkbox\" /> Paused\r\n          </label>\r\n        </form>\r\n        <ul className=\"search-list-page-group\">\r\n          {this.state.recentChanges.map((item, index) => (\r\n            <li className=\"list-group-item text-left\" key={index}>\r\n              <div>\r\n                {`User: ${item.user}`}\r\n                <br />\r\n                {`Comment: ${item.comment}`}\r\n                <br />\r\n                {`Time: ${item.timestamp}`}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageFeed;\r\n","import React, { Component } from 'react';\nimport GraphPage from './GraphPage';\nimport CalendarGraph from '../Components/CalendarGraph';\nimport {\n  pageRevisionsSearch,\n  pageRevisionsSearchCont,\n} from '../Backend/searchingFunctionality';\n\nexport const PageRevisionsOverTimeSettings = {\n  getData: async function(searchValue) {\n    const data = await pageRevisionsSearch(searchValue).then(str => {\n      str[0].then(value => {\n        this.setState({ values: value });\n        this.setState({ nextVals: value });\n      });\n      this.setState({ keyValue: str[1] });\n    });\n    const myMap = new Map();\n    const a = 0;\n    this.state.values.forEach(item => {\n      if (\n        !myMap.has(item.timestamp.slice(0, -10)) &&\n        item.timestamp.slice(0, -10) > '2021-01-01' &&\n        item.timestamp.slice(0, -10) < '2022-12-31'\n      ) {\n        myMap.set(item.timestamp.slice(0, -10), item);\n      }\n    });\n    for (const item of myMap.values()) {\n      item.day = item.timestamp.slice(0, -10);\n      item.value = this.state.values.reduce(function(s, o) {\n        if (o.timestamp.slice(0, -10) === item.day) {\n          s++;\n        }\n        return s;\n      }, 0);\n    }\n    const array = [myMap.size];\n    let j = 0;\n    for (const item of myMap.values()) {\n      array[j++] = item;\n    }\n    return array;\n  },\n  refreshTime: 2000,\n  refreshMethod: async function(searchValue) {\n    if (this.state.keyValue != -1) {\n      const data = await pageRevisionsSearchCont(\n        searchValue,\n        this.state.keyValue\n      ).then(str => {\n        str[0].then(value => {\n          this.setState({ values: this.state.values.concat(value) });\n        });\n        this.setState({ keyValue: str[1] });\n      });\n      const myMap = new Map();\n      this.state.values.forEach(item => {\n        if (\n          !myMap.has(item.timestamp.slice(0, -10)) &&\n          item.timestamp.slice(0, -10) > '2021-01-01' &&\n          item.timestamp.slice(0, -10) < '2022-12-31'\n        ) {\n          myMap.set(item.timestamp.slice(0, -10), item);\n        }\n      });\n      for (const item of myMap.values()) {\n        item.day = item.timestamp.slice(0, -10);\n        item.value = this.state.values.reduce(function(s, o) {\n          if (o.timestamp.slice(0, -10) === item.day) {\n            s++;\n          }\n          return s;\n        }, 0);\n      }\n      const array = [myMap.size];\n      let j = 0;\n      for (const item of myMap.values()) {\n        array[j++] = item;\n      }\n      return array;\n    }\n    return -1;\n  },\n  colorBy: 'type',\n  colors: 'set1',\n  onClick: function(click) {\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\n  },\n  tooltip: function(click) {\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\n  },\n};\n\nclass PageRevisionsOverTime extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: this.props.history,\n      fullGraph: this.props.fullGraph,\n      paused: false,\n      value: this.props.value,\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.fullGraph == false) {\n      this.props.onRef(this);\n    }\n  }\n\n  handlePause = event => {\n    const paused = this.state.paused;\n    this.setState({ paused: !paused });\n  };\n\n  onclick(search) {\n    this.setState({ value: search });\n  }\n\n  render() {\n    if (this.state.fullGraph) {\n      return (\n        <GraphPage\n          handlePause={this.handlePause}\n          paused={this.state.paused}\n          explanation={\n            <div>\n              {'Revisions over time for this page.' +\n                ' Hover over a section to see the number of revisions made that day.'}\n              <p>\n                <img\n                  className=\"legend\"\n                  src={require('../legend.svg')}\n                  alt=\"Legend\"\n                />\n              </p>\n            </div>\n          }\n          graph={\n            <CalendarGraph\n              fullGraph={true}\n              settings={PageRevisionsOverTimeSettings}\n              paused={this.state.paused}\n              value={this.state.value}\n              loading={this.state.loading}\n            />\n          }\n          name=\"Page Revisions Over Time\"\n        />\n      );\n    } else {\n      if (this.state.value === '') {\n        return (\n          <div>\n            <p>Search For a Graph</p>\n          </div>\n        );\n      }\n      return (\n        <CalendarGraph\n          fullGraph={this.state.fullGraph}\n          settings={PageRevisionsOverTimeSettings}\n          paused={this.state.paused}\n          value={this.state.value}\n          loading={this.state.loading}\n        />\n      );\n    }\n  }\n}\nexport default PageRevisionsOverTime;\n","import React, { Component } from 'react';\r\nimport Navbar from '../Components/Navbar';\r\nimport SearchBar from '../Components/SearchBar';\r\nimport PageFeed from '../Components/PageFeed';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as utils from '../Backend/searchingFunctionality';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport NumberOfChanges, { NumberOfChangesSettings } from './NumberOfChanges';\r\nimport GraphCardSearch from '../Components/GraphCardSearch';\r\nimport PageRevisionsOverTime, {\r\n  PageRevisionsOverTimeSettings,\r\n} from './PageRevisionsOverTime';\r\nimport CalendarGraph from '../Components/CalendarGraph';\r\n\r\nclass PageRevisionsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n      value: '',\r\n      ifConfirm: true,\r\n      firmsList: [],\r\n      recentChanges: [],\r\n      value: '',\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  //Match column mouse click events\r\n  onClick(value) {\r\n    this.feed.onclick(value);\r\n    this.changes.onclick(value);\r\n    this.overTime.onclick(value);\r\n    this.setState({ value: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar history={this.state.history} />\r\n        <div className=\"row justify-content-left text-dark\">\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\r\n            <div className=\"feedContainer\">\r\n              <PageFeed\r\n                value={this.state.value}\r\n                onRef={ref => {\r\n                  this.feed = ref;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\r\n            <div>\r\n              <SearchBar\r\n                settings={SearchSettings}\r\n                searchValue={this.onClick.bind(this)}\r\n              />\r\n              <CardDeck className=\"CardDeckRev\">\r\n                <GraphCardSearch\r\n                  title=\"Number of Changes\"\r\n                  pageLink=\"number-of-changes\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <NumberOfChanges\r\n                      fullGraph={false}\r\n                      history={this.state.history}\r\n                      onRef={ref => {\r\n                        this.changes = ref;\r\n                      }}\r\n                      value=\"\"\r\n                    />\r\n                  }\r\n                  value={this.state.value}\r\n                />\r\n              </CardDeck>\r\n              <CardDeck className=\"CardDeckRev\">\r\n                <GraphCardSearch\r\n                  title=\"Page Revisions Over Time\"\r\n                  pageLink=\"page-revisions-over-time\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <PageRevisionsOverTime\r\n                      fullGraph={false}\r\n                      history={this.state.history}\r\n                      onRef={ref => {\r\n                        this.overTime = ref;\r\n                      }}\r\n                      value=\"\"\r\n                    />\r\n                  }\r\n                  value={this.state.value}\r\n                />\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const SearchSettings = {\r\n  getData: async function(val) {\r\n    return await utils.getPrefixSearch(val);\r\n  },\r\n  type: 0,\r\n};\r\n\r\nexport default PageRevisionsPage;\r\n","import React, { Component } from 'react';\n// import { pageRevisionsSearch } from '../Backend/searchingFunctionality';\nimport { getPrefixSearch } from '../Backend/searchingFunctionality';\nimport SearchBar from '../Components/SearchBar';\n\nexport const searchSuggestions = {\n  getData: async function(val) {\n    return await getPrefixSearch(val);\n  },\n};\n\nclass TestComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { history: this.props.history, paused: false };\n  }\n\n  handlePause = event => {\n    this.setState({ paused: event.target.value });\n  };\n\n  render() {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <SearchBar settings={searchSuggestions} />\n      </div>\n    );\n  }\n}\nexport default TestComponent;\n","import React, { useContext } from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\nimport HomePage from './Pages/HomePage';\nimport history from './Utils/History';\nimport FeedData from './Pages/FeedData';\nimport TestPage from './Pages/TestPage';\nimport UsersByMostEditsPage from './Pages/UsersByMostEditsPage';\nimport MostActiveUsers from './Pages/MostActiveUsers';\nimport MostActivePages from './Pages/MostActivePages';\nimport RecentEditSize from './Pages/RecentEditSize';\nimport LargestRecentEdits from './Pages/LargestRecentEdits';\nimport ProportionFlagged from './Pages/ProportionFlagged';\nimport AboutPage from './Pages/AboutPage';\nimport UsersSearchPage from './Pages/UsersSearchPage';\nimport PageRevisionsPage from './Pages/PageRevisionsPage';\nimport TestComponent from './Pages/TestComponent';\nimport PageRevisionsOverTime from './Pages/PageRevisionsOverTime';\nimport UserContributionsOverTime from './Pages/UserContributionsOverTime';\nimport NumberOfChanges from './Pages/NumberOfChanges';\nimport NumberOfChangesUser from './Pages/NumberOfChangesUser';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\nimport { ColorSchemeProvider } from './Platform/ColorScheme';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ColorSchemeProvider>\n        <Router basename={process.env.PUBLIC_URL} history={history}>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/page\" component={TestPage} />\n            <Route exact path=\"/testComponent\" component={TestComponent} />\n            <Route\n              exact\n              path=\"/users-by-most-edits\"\n              component={UsersByMostEditsPage}\n            />\n            <Route\n              exact\n              path=\"/most-active-users\"\n              component={MostActiveUsers}\n            />\n            <Route exact path=\"/recent-edit-size\" component={RecentEditSize} />\n            <Route\n              exact\n              path=\"/largest-recent-edits\"\n              component={LargestRecentEdits}\n            />\n            <Route\n              exact\n              path=\"/most-active-pages\"\n              component={MostActivePages}\n            />\n            <Route\n              exact\n              path=\"/proportion-flagged\"\n              component={ProportionFlagged}\n            />\n            <Route exact path=\"/about-page\" component={AboutPage} />\n            <Route exact path=\"/feed\" component={FeedData} />\n            <Route exact path=\"/user-search\" component={UsersSearchPage} />\n            <Route exact path=\"/page-revisions\" component={PageRevisionsPage} />\n            <Route\n              path=\"/number-of-changes:id\"\n              render={props => {\n                let name = props.match.url;\n                name = name.split(':')[1];\n                return <NumberOfChanges fullGraph={true} value={name} />;\n              }}\n            />\n            <Route\n              path=\"/user-number-of-changes:id\"\n              render={props => {\n                let name = props.match.url;\n                name = name.split(':')[1];\n                return <NumberOfChangesUser fullGraph={true} value={name} />;\n              }}\n            />\n            <Route\n              path=\"/page-revisions-over-time:id\"\n              render={props => {\n                let name = props.match.url;\n                name = name.split(':')[1];\n                return <PageRevisionsOverTime fullGraph={true} value={name} />;\n              }}\n            />\n            <Route\n              path=\"/user-contributions-over-time:id\"\n              render={props => {\n                let name = props.match.url;\n                name = name.split(':')[1];\n                return (\n                  <UserContributionsOverTime fullGraph={true} value={name} />\n                );\n              }}\n            />\n          </Switch>\n        </Router>\n      </ColorSchemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}