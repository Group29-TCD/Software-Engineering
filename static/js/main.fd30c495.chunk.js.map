{"version":3,"sources":["legend.svg","Components/TitleContainer.js","Components/Navbar.jsx","Components/HomeNavContainer.js","Components/HomeStats.js","Pages/HomePage.jsx","Utils/History.js","Backend/APIWrapper.js","Backend/FeedData.js","Components/Feed.jsx","Components/GraphCard.jsx","Components/SimpleBarGraph.jsx","Components/PieChart.jsx","Pages/GraphPage.jsx","Pages/MostActiveUsers.jsx","Pages/MostActivePages.jsx","Pages/LargestRecentEdits.jsx","Pages/RecentEditSize.jsx","Pages/ProportionFlagged.jsx","Pages/TestPage.jsx","Pages/UsersByMostEditsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TitleContainer","className","this","props","title","subtitle","React","Component","NavbarLocal","state","history","activePage","window","location","href","Navbar","Collapse","Nav","Link","as","to","endsWith","HomeNavContainer","style","btnTitle1","btnTitle2","btnLink","type","btnStyle","btnText","HomeStats","text","errorCode","updateStats","$","ajax","url","success","response","html","find","intervalID","setInterval","clearInterval","ListGroup","horizontal","Item","id","HomePage","icon","faBars","faChartLine","faUser","createBrowserHistory","API_ENDPOINT","getMostEditsUsers","a","async","compare","b","editcount","users","query","action","format","list","auprop","aulimit","auwitheditsonly","auactiveusers","then","data","allusers","sort","getRecentEditsWithSize","edits","rcprop","rclimit","result","recentchanges","getRecentEditsWithFlags","revids","map","recentChange","revid","getScore","scores","label","value","color","Object","values","forEach","score","undefined","damaging","prediction","getRecentLargestEdits","editList","item","Math","abs","newlen","oldlen","toString","getMostActivePages","prevTimestamp","queryRecentChanges","recentChanges","newTimestamp","activePages","countPageOccurances","getRecentActiveUsers","activeUsers","countUsers","batchQuery","itemsKey","items","endpoint","params","batches","Array","createBatch","results","batch","batchString","join","push","catch","err","Promise","all","tmpTimestamp","Date","toISOString","rcstart","rcend","revisionIds","getUserGroups","userNames","usprop","groups","queryResult","userObj","name","n","paramsString","URLSearchParams","fetch","json","setTimeout","length","resultBatch","wikidatawiki","titleCounts","change","actions","titles","entries","userCounts","user","numActions","username","array","size","splice","FeedData","maxItems","changes","newTimeStamp","usernames","unshift","pop","getTimeDifference","toCompare","round","getTime","Feed","useState","feedData","paused","setPaused","setRecentChanges","useEffect","refresh","onChange","prevPause","index","key","timestamp","GraphCard","onClick","pageLink","graph","Card","tag","Body","Title","SimpleBarGraph","tooltip","click","src","indexValue","loadData","getData","settings","bind","smlData","slice","fullGraph","setState","loaded","method","refreshMethod","refreshInterval","refreshTime","margin","classname","clickable","legend","colorBy","top","right","bottom","left","keys","indexBy","padding","colors","scheme","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","xAxis","legendPosition","legendOffset","axisLeft","yAxis","enableLabel","animate","isInteractive","motionStiffness","motionDamping","legends","PieChart","colorFunction","innerRadius","padAngle","cornerRadius","enableRadialLabels","radialLabel","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","enableSlicesLabels","slicesLabelsSkipAngle","slicesLabelsTextColor","defs","background","stagger","rotation","lineWidth","spacing","match","GraphPage","explanation","handlePause","MostActiveUsersGraphSettings","fullData","userAdditions","i","includes","bot","human","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","open","MostActiveUsers","event","MostActivePagesGraphSettings","pageAdditions","MostActivePages","LargestRecentEditsSettings","LargestRecentEdits","require","alt","RecentEditSizeSettings","RecentEditSize","ProportionFlaggedSettings","d","ProportionFlagged","class","CardDeck","UsersByMostEditsGraphSettings","UsersByMostEditsPage","target","App","basename","process","exact","path","component","TestPage","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd30c495.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/legend.ee93b5bb.svg\";","import React from 'react'\r\n\r\n\r\nclass TitleContainer extends React.Component {\r\n    render() {\r\n        return(\r\n                <div className=\" text-left\">\r\n                     <h1 className=\"text-left  display-3\"><b>{this.props.title}</b></h1>\r\n                     <h4>{this.props.subtitle}</h4  >\r\n                  </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleContainer\r\n","import React, { Component } from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass NavbarLocal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { history: this.props.history }\r\n  }\r\n  render() {\r\n    // var isActive = this.context.router.route.location.pathname\r\n    let activePage = window.location.href\r\n    return (\r\n      <Navbar>\r\n        <Navbar.Collapse>\r\n          <Nav>\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/\"\r\n              className={\r\n                activePage.endsWith('/') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Home\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/page\"\r\n              className={\r\n                activePage.endsWith('/page') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Page\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/feed\"\r\n              className={\r\n                activePage.endsWith('/feed') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Feed\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavbarLocal\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass HomeNavContainer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"ting\">\r\n\t\t\t\r\n\t\t\t\t<h2 className={this.props.style}>{ this.props.btnTitle1 }</h2>\r\n\t\t\t\t<h2 className={this.props.style}>{ this.props.btnTitle2 }</h2>\r\n\t\t\t\t<br/>\t\r\n\t\t\t\t<Link to={ this.props.btnLink }>\r\n\t\t\t\t\t <button type=\"button\" className={this.props.btnStyle}>{ this.props.btnText }</button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default HomeNavContainer;\r\n","import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {ListGroup} from 'react-bootstrap';\r\nimport $ from 'jquery';\r\n\r\nclass HomeStats extends Component {\r\n\r\n\t state = {\r\n\t\t text: 'something',\r\n\t\t errorCode: 'Loading...',\r\n\t }\r\n\r\n\t componentDidMount() {\r\n\t  this.updateStats();\r\n\t  this.intervalID = setInterval(\r\n\t    () => this.updateStats(),\r\n\t    5000\r\n\t  );\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t  clearInterval(this.intervalID);\r\n\t}\r\n\r\n     updateStats = () => {\r\n\t\t$.ajax({\r\n  \t\t  url: \"https://protected-shelf-93081.herokuapp.com/https://www.wikidata.org/wiki/Special:Statistics\",\r\n  \t\t  type: 'GET',\r\n  \t\t  success: function(response) {\r\n\t\t\t  $(\"#div1\").html($($(response).find('.mw-statistics-articles')).find('.mw-statistics-numbers'));\r\n\t  \t\t  $(\"#div2\").html($($(response).find('.mw-statistics-edits')).find('.mw-statistics-numbers'));\r\n\t  \t\t  $(\"#div3\").html($($(response).find('.mw-statistics-users')).find('.mw-statistics-numbers'));\r\n\t  \t\t  $(\"#div4\").html($($(response).find('.mw-statistics-users-active')).find('.mw-statistics-numbers'));\r\n\t\t  }\r\n  \t   });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"row\">\r\n\t\t\t<ListGroup horizontal>\r\n\t\t\t  <ListGroup.Item className=\"list-group-item-black\"><h1 id=\"div1\">{ this.state.errorCode }</h1><h1>Items</h1></ListGroup.Item>\r\n\t\t\t  <ListGroup.Item  className=\"list-group-item-red\"><h1 id=\"div2\">{ this.state.errorCode }</h1><h1>Edits</h1></ListGroup.Item>\r\n\t\t\t  <ListGroup.Item  className=\"list-group-item-green\"><h1 id=\"div3\">{ this.state.errorCode }</h1><h1>Users</h1></ListGroup.Item>\r\n\t\t\t  <ListGroup.Item  className=\"list-group-item-blue\"><h1 id=\"div4\">{ this.state.errorCode }</h1><h1>Active Users</h1></ListGroup.Item>\r\n\t\t\t</ListGroup>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default HomeStats;\r\n","import React, { Component } from 'react'\r\nimport TitleContainer from '../Components/TitleContainer'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Navbar from '../Components/Navbar'\r\nimport HomeNavContainer from '../Components/HomeNavContainer'\r\nimport HomeStatsContainer from '../Components/HomeStats'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = { history: this.props.history }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar history={this.state.history} />\r\n        <div className=\"HomePageContent row margin-right: -15px margin-left: -15px\">\r\n\t\t<div className = \"col-5\">\r\n           <TitleContainer\r\n             title=\"Wikidata Live\"\r\n             subtitle=\"A web app to visualise recent changes to Wikidata in quasi real time.\"\r\n           ></TitleContainer>\r\n\t\t   </div>\r\n\t\t   <div className = \"col-7\">\r\n\t\t   <div className= \"row\">\r\n\t\t   <div className=\"col-4\">\r\n\t\t   <h1 className=\"text-red\"><FontAwesomeIcon icon={faBars}/></h1>\r\n           <HomeNavContainer\r\n             style=\"font-weight-bold text-red\"\r\n\t\t\t btnStyle=\"align-bottom btn btn-outline-red\"\r\n             btnTitle1=\"Wikidata\"\r\n\t\t\t btnTitle2=\"Feed\"\r\n             btnText=\"Feed\"\r\n             btnLink=\"/feed\"\r\n           ></HomeNavContainer>\r\n\t\t   </div>\r\n\t\t   <div className=\"col-4\">\r\n\t\t    <h1 className=\"text-green\"><FontAwesomeIcon icon={faChartLine}/></h1>\r\n           <HomeNavContainer\r\n             style=\"font-weight-bold text-green\"\r\n\t\t\t btnStyle=\"align-bottom btn btn-outline-green\"\r\n             btnTitle1=\"Wikidata\"\r\n\t\t\t btnTitle2=\"Dashboard\"\r\n             btnText=\"Dashboard\"\r\n             btnLink=\"/page\"\r\n           ></HomeNavContainer>\r\n\t\t   </div>\r\n\t\t   <div className=\"col-4\">\r\n\t\t   <h1 className=\"text-blue\"><FontAwesomeIcon icon={faUser}/></h1>\r\n           <HomeNavContainer\r\n             style=\"font-weight-bold text-blue\"\r\n\t\t\t btnStyle=\"align-bottom btn btn-outline-red\"\r\n             btnTitle1=\"User\"\r\n\t\t\t btnTitle2=\"Data\"\r\n             btnText=\"Users\"\r\n             btnLink=\"/most-active-users\"\r\n           ></HomeNavContainer>\r\n\t\t   </div>\r\n\t\t   </div>\r\n\t\t   </div>\r\n        </div>\r\n\t\t<div className = \"statsContent row justify-content-center\">\r\n        <HomeStatsContainer />\r\n\t\t</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomePage\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory();\r\n","const API_ENDPOINT = 'https://www.wikidata.org/w/api.php'\r\nconst SCORING_ENDPOINT = 'https://ores.wikimedia.org/v3/scores/wikidatawiki/'\r\nconst MAX_QUERY_SIZE = 50\r\nconst NUM_RETRIES = 5\r\n\r\n/**\r\n * @typedef {Object} User\r\n * @property {number} userid - The user's id\r\n * @property {number} name - The user's name\r\n * @property {number} editcount - The number of edits the user did\r\n * @property {number} recentactions - The number of actions a user did within\r\n *           30 days\r\n * @property {Array} groups - An array of strings which contains the groups\r\n *           the user belongs in. For example if the user contains \"bot\", it is\r\n *           a non human user\r\n */\r\n\r\n/**\r\n * Returns a list of 500 users who were recently active within 30 days which is\r\n * sorted by the most edits in descending order\r\n *\r\n * @returns {Promise<User[]>} - A Promise which resolves to an array of User\r\n *          objects\r\n */\r\nexport const getMostEditsUsers = async () => {\r\n  const compare = (a, b) => b.editcount - a.editcount\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'allusers',\r\n    auprop: 'editcount|groups',\r\n    aulimit: 'max',\r\n    auwitheditsonly: '1',\r\n    auactiveusers: '1',\r\n  }\r\n  const users = query(API_ENDPOINT, params, NUM_RETRIES)\r\n    .then(data => data.query.allusers)\r\n    .then(users => users.sort(compare))\r\n  return users\r\n}\r\n/**\r\n * Returns a list of 500 users who were recently active within 30 days which is\r\n * sorted by the most recent actions in descending order\r\n *\r\n * @returns {Promise<User[]>} - A Promise which resolves to an array of User\r\n *          objects\r\n */\r\nexport const getMostActiveUsers = async () => {\r\n  const compare = (a, b) => b.recentactions - a.recentactions\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'allusers',\r\n    auprop: 'editcount|groups',\r\n    aulimit: 'max',\r\n    auwitheditsonly: '1',\r\n    auactiveusers: '1',\r\n  }\r\n  const users = query(API_ENDPOINT, params, NUM_RETRIES)\r\n    .then(data => data.query.allusers)\r\n    .then(users => users.sort(compare))\r\n  return users\r\n}\r\n\r\nexport const getRecentEditsWithSize = async () => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'recentchanges',\r\n    rcprop: 'title|ids|sizes|timestamp',\r\n    rclimit: '500',\r\n  }\r\n  const edits = query(API_ENDPOINT, params, NUM_RETRIES).then(\r\n    result => result.query.recentchanges\r\n  )\r\n  return await edits\r\n}\r\n\r\nexport const getRecentEditsWithFlags = async () => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'recentchanges',\r\n    rcprop: 'ids',\r\n    rclimit: '50',\r\n  }\r\n  const edits = query(API_ENDPOINT, params, NUM_RETRIES).then(\r\n    result => result.query.recentchanges\r\n  )\r\n\r\n  let revids = await edits\r\n  revids = revids.map(recentChange => recentChange.revid)\r\n  let scores = await getScore(revids)\r\n\r\n  let data = [\r\n    { id: 'damaging', label: 'damaging', value: 0, color: '#F25543' },\r\n    { id: 'unsure', label: 'unsure', value: 0, color: '#FFF047' },\r\n    { id: 'good faith', label: 'good faith', value: 0, color: '#92E16F' },\r\n  ]\r\n\r\n  scores = await scores\r\n\r\n  Object.values(scores).forEach(score => {\r\n    if (\r\n      score.damaging.score !== undefined &&\r\n      score.damaging.score.prediction === true\r\n    ) {\r\n      data[0].value += 1\r\n    } else if (\r\n      score.damaging.score !== undefined &&\r\n      score.damaging.score.prediction === false\r\n    ) {\r\n      data[2].value += 1\r\n    } else {\r\n      data[1].value += 1\r\n    }\r\n  })\r\n\r\n  return data\r\n}\r\n\r\n/**\r\n * Returns recent 500 recent edits sorted by size of changes made in absolute value\r\n * So large additions and large deletions are included\r\n */\r\nexport const getRecentLargestEdits = async () => {\r\n  const editList = await getRecentEditsWithSize()\r\n\r\n  editList.forEach(item => {\r\n    item.value = Math.abs(item.newlen - item.oldlen)\r\n    item.id = item.revid.toString()\r\n    item.label = item.title\r\n  })\r\n\r\n  editList.sort((a, b) => b.value - a.value)\r\n\r\n  return editList\r\n}\r\n\r\n/**\r\n * @typedef {Object} PageInfo\r\n * @property {string} id - The id of the page\r\n * @property {actions} actions - Number of actions which has been performed on\r\n *           that page\r\n * @property {string} title - The title of the page\r\n */\r\n\r\n/**\r\n * Returns an array of most active pages from recent changes feed\r\n *\r\n * @param {string} prevTimestamp - Previous timestamp when the function was\r\n *        last called\r\n * @return {Promise<PageInfo[] | string>}\r\n */\r\nexport const getMostActivePages = async prevTimestamp => {\r\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp)\r\n  const activePages = recentChanges.then(recentChanges =>\r\n    countPageOccurances(recentChanges)\r\n  )\r\n  return [await activePages, newTimestamp]\r\n}\r\n\r\n/**\r\n * Returns an array of most users pages from recent changes feed\r\n *\r\n * @param {string} prevTimestamp - Previous timestamp when the function was\r\n *        last called\r\n * @return {Promise<User[] | string>}\r\n */\r\nexport const getRecentActiveUsers = async prevTimestamp => {\r\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp)\r\n  const activeUsers = recentChanges.then(activeUsers => countUsers(activeUsers))\r\n  return [await activeUsers, newTimestamp]\r\n}\r\n\r\n/**\r\n * Batches a query to cirumvent the 50 items query limit\r\n *\r\n * @param {string} itemsKey the query key\r\n * @param {Array} items the items to add to the query\r\n * @param {string} endpoint the endpoint url\r\n * @param {Object} params the parameters of the query\r\n */\r\nexport const batchQuery = async (itemsKey, items, endpoint, params) => {\r\n  let result = []\r\n  let batches = null\r\n  if (items instanceof Array) batches = createBatch(items, MAX_QUERY_SIZE)\r\n  else batches = [[items]]\r\n  const results = batches.map(async batch => {\r\n    const batchString = batch.join('|')\r\n    params[itemsKey] = batchString\r\n    return query(endpoint, params, NUM_RETRIES)\r\n      .then(data => result.push(data))\r\n      .catch(err => null)\r\n  })\r\n  await Promise.all(results)\r\n  return result\r\n}\r\n\r\n/**\r\n * @typedef {Object} recentChanges\r\n * @property {number} newlen - the number of bytes the page uses after the change\r\n * @property {number} ns\r\n * @property {number} old_revid - The old revision id\r\n * @property {number} oldlen - the number of bytes the page uses before the change\r\n * @property {number} pageid - The page id\r\n * @property {number} rcid - The recent change id\r\n * @property {number} revid - The current revision id\r\n * @property {string} timestamp - Timestamp of change\r\n * @property {string} title - Title of the page changed\r\n * @property {string} type - Type of action e.g. \"new\", \"edit\"\r\n * @property {string} user - The username of the editor\r\n */\r\n\r\n/**\r\n * Queries the API for the most recent changes\r\n *\r\n * @param {string} prevTimestamp - Previous timestamp when the function was\r\n *        last called\r\n * @return {Array<Promise<recentChanges[]> | string>}\r\n */\r\nexport const queryRecentChanges = prevTimestamp => {\r\n  let tmpTimestamp = new Date()\r\n  const newTimestamp = tmpTimestamp.toISOString()\r\n  tmpTimestamp = tmpTimestamp - 1000\r\n  tmpTimestamp = new Date(tmpTimestamp).toISOString()\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'recentchanges',\r\n    rcprop: 'title|ids|timestamp|user|sizes',\r\n    rclimit: 'max',\r\n    rcstart: tmpTimestamp,\r\n    rcend: prevTimestamp,\r\n  }\r\n  const recentChanges = query(API_ENDPOINT, params, NUM_RETRIES)\r\n    .then(data => data.query.recentchanges)\r\n    .then(recentChanges => {\r\n      const revisionIds = recentChanges.map(recentChange => recentChange.revid)\r\n      return getScore(revisionIds).then(scores =>\r\n        recentChanges.map(recentChange => {\r\n          recentChange.scores = scores[recentChange.revid]\r\n          return recentChange\r\n        })\r\n      )\r\n    })\r\n  return [recentChanges, newTimestamp]\r\n}\r\n\r\n/**\r\n * Returns the groups of each username in the input array\r\n *\r\n * @param {Array<string>} userNames - an array of usernames to fetch the group of\r\n * @return {Map<string, Array<string>>} - map of username to an array of groups\r\n *         they belong to\r\n */\r\nexport const getUserGroups = userNames => {\r\n  const key = 'ususers'\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'users',\r\n    usprop: 'groups',\r\n  }\r\n  const groups = batchQuery(key, userNames, API_ENDPOINT, params).then(data => {\r\n    const groups = {}\r\n    data.forEach(queryResult => {\r\n      const users = queryResult.query.users\r\n      users.forEach(userObj => {\r\n        if (userObj.groups) groups[userObj.name] = userObj.groups\r\n      })\r\n    })\r\n    return groups\r\n  })\r\n  return groups\r\n}\r\n\r\n// ~ Helper Functions ---------------------------------------------------------\r\n\r\n/**\r\n * Returns a the response of a query to the Wikidata API endpoint\r\n *\r\n * @param {Object} params - Object of parameters to use when querying\r\n * @param {number} n - Number of times to retry if failure occurs\r\n * @return {Promise<Object>}\r\n */\r\nconst query = async (endpoint, params, n) => {\r\n  try {\r\n    const paramsString = new URLSearchParams(params).toString()\r\n    const url = endpoint + '?' + paramsString + '&origin=*'\r\n    return await fetch(url).then(response => response.json())\r\n  } catch (err) {\r\n    if (n === 1) throw err\r\n    return await setTimeout(query(endpoint, params, n - 1), 500)\r\n  }\r\n}\r\n\r\n/**\r\n * Retruns the score of the revision id to find out if the edit was harmful or not\r\n *\r\n * @param {Array<number>} revisionIds - Revision ids to obtain the score of\r\n * @return {Promise<Object>}\r\n */\r\nconst getScore = async revisionIds => {\r\n  if (revisionIds.length === 0) return\r\n  const key = 'revids'\r\n  const params = {}\r\n  let scores = {}\r\n  return batchQuery(key, revisionIds, SCORING_ENDPOINT, params).then(\r\n    resultBatch => {\r\n      resultBatch.forEach(\r\n        result => (scores = { ...scores, ...result.wikidatawiki?.scores })\r\n      )\r\n      return scores\r\n    }\r\n  )\r\n}\r\n\r\n/**\r\n * Returns the number of times a page appeared on the recent changes feed sorted by\r\n * number of actions done on the page\r\n *\r\n * @param {recentChanges[]} recentChanges - The array of recent changes from a query\r\n */\r\nconst countPageOccurances = recentChanges => {\r\n  const compare = (a, b) => b.actions - a.actions\r\n  const titleCounts = {}\r\n  recentChanges.forEach(change => {\r\n    const actions = titleCounts[change.title] || 0\r\n    titleCounts[change.title] = actions + 1\r\n  })\r\n  const titles = Object.entries(titleCounts).map(([id, actions]) => ({\r\n    id,\r\n    actions,\r\n  }))\r\n  titles.sort(compare)\r\n  return titles\r\n}\r\n\r\n/**\r\n * Returns the number of times a user appeared on the recent changes feed sorted by\r\n * number of actions done by that user\r\n *\r\n * @param {recentChanges[]} recentChanges - The array of recent changes from a query\r\n */\r\nconst countUsers = recentChanges => {\r\n  const compare = (a, b) => b.actions - a.actions\r\n  const userCounts = {}\r\n  recentChanges.forEach(change => {\r\n    const user = change.user\r\n    const numActions = userCounts[user] || 0\r\n    userCounts[user] = numActions + 1\r\n  })\r\n  const users = Object.entries(userCounts).map(([username, actions]) => ({\r\n    username,\r\n    actions,\r\n  }))\r\n  const userNames = users.map(({ username }) => username)\r\n  getUserGroups(userNames).then(groups => {\r\n    users.forEach(userObj => (userObj.groups = groups[userObj.username]))\r\n    users.sort(compare)\r\n  })\r\n  return users\r\n}\r\n\r\n/**\r\n * Splits up an array into smaller arrays\r\n *\r\n * @param {Array} array - Array to create batches from\r\n * @param {number} size - Batch size\r\n * @return {Array} batches - An array containing the batches which are of\r\n *         length size\r\n */\r\nconst createBatch = (array, size) => {\r\n  const batches = []\r\n  while (array.length > 0) {\r\n    batches.push(array.splice(0, size))\r\n  }\r\n  return batches\r\n}\r\n","import { queryRecentChanges, getUserGroups } from './APIWrapper'\r\n\r\n/** Class which wraps the Wikidata API recent changes feed */\r\nclass FeedData {\r\n  /**\r\n   * Create a new feed data object\r\n   *\r\n   * @param {number} maxItems - the maximum number of items to keep in the\r\n   *        feed.\r\n   */\r\n  constructor(maxItems) {\r\n    this.changes = []\r\n    this.maxItems = maxItems\r\n    this.prevTimestamp = new Date().toISOString()\r\n  }\r\n\r\n  refresh() {\r\n    const [recentChanges, newTimeStamp] = queryRecentChanges(this.prevTimestamp)\r\n    recentChanges.then(changes => {\r\n      const usernames = changes.map(change => change.user)\r\n      getUserGroups(usernames).then(groups =>\r\n        changes.forEach(change => {\r\n          change.groups = groups[change.user]\r\n          this.changes.unshift(change)\r\n          if (this.changes.length > this.maxItems) this.changes.pop()\r\n        })\r\n      )\r\n    })\r\n    this.prevTimestamp = newTimeStamp\r\n  }\r\n}\r\n\r\nexport default FeedData\r\n","import React, { useState, useEffect } from 'react'\r\nimport FeedData from '../Backend/FeedData'\r\n// eslint-disable-next-line\r\nimport style from '../style.css'\r\n\r\nfunction Feed() {\r\n  const [feedData] = useState(new FeedData(30))\r\n  const [paused, setPaused] = useState(false)\r\n  const [recentChanges, setRecentChanges] = useState({\r\n    items: [],\r\n  })\r\n\r\n  useEffect(() => {\r\n    const refresh = setInterval(() => {\r\n      if (!paused) feedData.refresh()\r\n      setRecentChanges({ items: feedData.changes })\r\n    }, 500)\r\n    return () => clearInterval(refresh)\r\n  }, [feedData, paused])\r\n\r\n  function togglePause() {\r\n    setPaused(prevPause => !prevPause)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-blue text-left\">Most Recent Activity</h3>\r\n      <form className=\"text-left\" onChange={togglePause}>\r\n        <label>\r\n          <input type=\"checkbox\" /> Paused\r\n        </label>\r\n      </form>\r\n      <ul className=\"list-group\">\r\n        {recentChanges.items.map((item, index) => (\r\n          <li className=\"list-group-item text-left\" key={index}>\r\n            <div\r\n              className={\r\n                item.scores?.damaging?.score?.prediction ? 'text-red' : ''\r\n              }\r\n            >\r\n              {`User ${item.user} action ${item.type} on ${\r\n                item.title\r\n              } ${getTimeDifference(item.timestamp)} seconds ago`}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst getTimeDifference = toCompare =>\r\n  Math.round(\r\n    Math.abs(new Date().getTime() - new Date(toCompare).getTime()) / 1000\r\n  )\r\n\r\nexport default Feed\r\n","import Card from 'react-bootstrap/Card'\r\nimport React, { Component } from 'react'\r\n\r\nclass GraphCard extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: this.props.history,\r\n      title: this.props.title,\r\n      pageLink: this.props.pageLink,\r\n      graph: this.props.graph,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card onClick={this.onClick} tag=\"a\" className=\"graph-card\">\r\n        <Card.Body>\r\n          <Card.Title className=\"card-title\">{this.state.title}</Card.Title>\r\n          {this.state.graph}\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  onClick = () => {\r\n    this.state.history.push(this.state.pageLink)\r\n  }\r\n}\r\n\r\nexport default GraphCard\r\n","import React, { Component } from 'react'\r\nimport { ResponsiveBar } from '@nivo/bar'\r\n\r\nclass SimpleBarGraph extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loaded: false,\r\n      data: null,\r\n      fullGraph: this.props.fullGraph,\r\n    }\r\n\r\n    this.loadData()\r\n  }\r\n\r\n  tooltip = function(click, url) {\r\n    return (\r\n      <div className=\"iframe-container\">\r\n        <iframe\r\n          src={url + click.indexValue}\r\n          className=\"iframe\"\r\n          title=\"tooltip-option-2\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  loadData = async () => {\r\n    let getData = this.props.settings.getData.bind(this)\r\n    let data = await getData()\r\n    let smlData = data.slice(0, this.state.fullGraph ? 30 : 10)\r\n    this.setState({\r\n      loaded: true,\r\n      data: smlData,\r\n    })\r\n  }\r\n\r\n  refresh = async () => {\r\n    if (!this.props.paused) {\r\n      let method = this.props.settings.refreshMethod.bind(this)\r\n      await method()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshInterval = setInterval(async () => {\r\n      await this.refresh()\r\n    }, this.props.settings.refreshTime)\r\n  }\r\n\r\n  render() {\r\n    let margin = {}\r\n    let label = null\r\n    let classname = ''\r\n    let onClick = null\r\n    let clickable = false\r\n    let tooltip = null\r\n    let legend = []\r\n    let colorBy = this.props.settings.colorBy\r\n      ? this.props.settings.colorBy\r\n      : 'index'\r\n    if (this.state.fullGraph) {\r\n      if (this.props.settings.margin) {\r\n        margin = this.props.settings.margin\r\n      } else {\r\n        margin = { top: 5, right: 30, bottom: 80, left: 80 }\r\n      }\r\n      if (this.props.settings.legend) {\r\n        legend = [this.props.settings.legend]\r\n      }\r\n      label = true\r\n      classname = 'full-graph-container'\r\n      if (this.props.settings.onClick) {\r\n        onClick = this.props.settings.onClick\r\n        clickable = true\r\n      }\r\n      if (this.props.settings.tooltip) {\r\n        tooltip = this.props.settings.tooltip.bind(this)\r\n      }\r\n    } else {\r\n      margin = { top: 0, right: 0, bottom: 0, left: 0 }\r\n      label = false\r\n      classname = 'Graph-Container-Card'\r\n    }\r\n    return (\r\n      <div>\r\n        {!this.state.loaded ? (\r\n          'Loading...'\r\n        ) : (\r\n          <div className={classname}>\r\n            <ResponsiveBar\r\n              data={this.state.data}\r\n              keys={this.props.settings.keys}\r\n              indexBy={this.props.settings.index}\r\n              margin={margin}\r\n              padding={0.3}\r\n              colors={{ scheme: this.props.settings.colors }}\r\n              colorBy={colorBy}\r\n              borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n              axisTop={null}\r\n              axisRight={null}\r\n              axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 30,\r\n                legend: this.props.settings.xAxis,\r\n                legendPosition: 'start',\r\n                legendOffset: 40,\r\n              }}\r\n              axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: this.props.settings.yAxis,\r\n                legendPosition: 'middle',\r\n                legendOffset: -60,\r\n              }}\r\n              enableLabel={label}\r\n              onClick={clickable ? onClick : function() {}}\r\n              animate={label}\r\n              isInteractive={label}\r\n              motionStiffness={90}\r\n              motionDamping={15}\r\n              tooltip={tooltip}\r\n              legends={legend}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SimpleBarGraph\r\n","import React, { Component } from 'react'\r\nimport { ResponsivePie } from '@nivo/pie'\r\n\r\nclass PieChart extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loaded: false,\r\n      data: null,\r\n      fullGraph: this.props.fullGraph,\r\n    }\r\n\r\n    this.loadData()\r\n  }\r\n\r\n  tooltip = function(click, url) {\r\n    return (\r\n      <div className=\"iframe-container\">\r\n        <iframe\r\n          src={url + click.label}\r\n          className=\"iframe\"\r\n          title=\"tooltip-option-2\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  loadData = async () => {\r\n    let getData = this.props.settings.getData.bind(this)\r\n    let data = await getData()\r\n    let smlData = data.slice(0, this.state.fullGraph ? 30 : 10)\r\n    this.setState({\r\n      loaded: true,\r\n      data: smlData,\r\n    })\r\n  }\r\n\r\n  refresh = async () => {\r\n    if (!this.props.paused) {\r\n      this.loadData()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshInterval = setInterval(async () => {\r\n      await this.refresh()\r\n    }, this.props.settings.refreshTime)\r\n  }\r\n\r\n  render() {\r\n    let margin = {}\r\n    let label = null\r\n    let classname = ''\r\n    let onClick = () => {}\r\n    let tooltip = null\r\n    let colors = { scheme: this.props.settings.colors }\r\n    if (this.props.settings.colorFunction) {\r\n      colors = this.props.settings.colorFunction\r\n    }\r\n    if (this.state.fullGraph) {\r\n      margin = { top: 30, right: 30, bottom: 30, left: 30 }\r\n      label = true\r\n      classname = 'full-graph-container'\r\n\r\n      if (this.props.settings.onClick) {\r\n        onClick = this.props.settings.onClick\r\n      }\r\n      if (this.props.settings.tooltip) {\r\n        tooltip = this.props.settings.tooltip.bind(this)\r\n      }\r\n    } else {\r\n      margin = { top: 0, right: 0, bottom: 0, left: 0 }\r\n      label = false\r\n      classname = 'Graph-Container-Card'\r\n    }\r\n    return (\r\n      <div>\r\n        {!this.state.loaded ? (\r\n          'Loading...'\r\n        ) : (\r\n          <div className={classname}>\r\n            <ResponsivePie\r\n              data={this.state.data}\r\n              margin={margin}\r\n              innerRadius={0.4}\r\n              padAngle={0}\r\n              cornerRadius={0}\r\n              colors={colors}\r\n              enableRadialLabels={label}\r\n              radialLabel=\"label\"\r\n              radialLabelsSkipAngle={10}\r\n              radialLabelsTextXOffset={6}\r\n              radialLabelsTextColor=\"#333333\"\r\n              radialLabelsLinkOffset={0}\r\n              radialLabelsLinkDiagonalLength={16}\r\n              radialLabelsLinkHorizontalLength={24}\r\n              radialLabelsLinkStrokeWidth={1}\r\n              radialLabelsLinkColor={{ from: 'color' }}\r\n              enableSlicesLabels={label}\r\n              slicesLabelsSkipAngle={10}\r\n              slicesLabelsTextColor=\"#333333\"\r\n              animate={true}\r\n              motionStiffness={90}\r\n              motionDamping={15}\r\n              defs={[\r\n                {\r\n                  id: 'dots',\r\n                  type: 'patternDots',\r\n                  background: 'inherit',\r\n                  color: 'rgba(255, 255, 255, 0.3)',\r\n                  size: 4,\r\n                  padding: 1,\r\n                  stagger: true,\r\n                },\r\n                {\r\n                  id: 'lines',\r\n                  type: 'patternLines',\r\n                  background: 'inherit',\r\n                  color: 'rgba(255, 255, 255, 0.3)',\r\n                  rotation: -45,\r\n                  lineWidth: 6,\r\n                  spacing: 10,\r\n                },\r\n              ]}\r\n              isInteractive={this.state.fullGraph}\r\n              onClick={onClick}\r\n              tooltip={tooltip}\r\n              defs={[\r\n                {\r\n                  id: 'lines',\r\n                  type: 'patternLines',\r\n                  background: 'inherit',\r\n                  color: 'rgba(255, 255, 255, 0.4)',\r\n                  rotation: -45,\r\n                  lineWidth: 6,\r\n                  spacing: 10,\r\n                },\r\n              ]}\r\n              fill={[\r\n                {\r\n                  match: {\r\n                    type: 'edit',\r\n                  },\r\n                  id: 'lines',\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PieChart\r\n","import React, { Component } from 'react'\r\nimport Navbar from '../Components/Navbar'\r\n\r\nclass GraphPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n      title: this.props.name,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar history={this.state.history} />\r\n\t\t<div className = \"row\">\r\n        <div className=\"infobox\">\r\n          <h2>{this.state.title}</h2>\r\n          <p />\r\n          <p>{this.props.explanation}</p>\r\n          <p>\r\n            <form onChange={this.props.handlePause}>\r\n              <label>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"paused\"\r\n                  name=\"paused\"\r\n                  value={this.props.paused}\r\n                />{' '}\r\n                {'Paused'}\r\n              </label>\r\n            </form>\r\n          </p>\r\n        </div>\r\n        {this.props.graph}\r\n\t\t</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GraphPage\r\n","import React, { Component } from 'react'\r\nimport GraphPage from './GraphPage'\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph'\r\nimport { getRecentActiveUsers } from '../Backend/APIWrapper'\r\n\r\nexport const MostActiveUsersGraphSettings = {\r\n  getData: async function() {\r\n    let [data, newTimestamp] = await getRecentActiveUsers(\r\n      new Date().toISOString()\r\n    )\r\n    data = data.slice(0, 50)\r\n    this.setState({\r\n      fullData: data,\r\n      prevTimestamp: newTimestamp,\r\n    })\r\n    return data\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async function() {\r\n    let [data, newTimestamp] = await getRecentActiveUsers(\r\n      this.state.prevTimestamp\r\n    )\r\n    this.setState({ prevTimestamp: newTimestamp })\r\n    data = data.slice(0, 50)\r\n    if (this.state.fullData) {\r\n      let fullData = this.state.fullData\r\n      data.forEach(userAdditions => {\r\n        let index = -1\r\n        for (let i = 0; i < fullData.length; i += 1) {\r\n          if (fullData[i].username === userAdditions.username) {\r\n            index = i\r\n          }\r\n        }\r\n        if (index !== -1) {\r\n          fullData[index].actions += userAdditions.actions\r\n        } else {\r\n          fullData.push(userAdditions)\r\n        }\r\n      })\r\n      fullData.sort((a, b) => b.actions - a.actions)\r\n      fullData.slice(0, 50)\r\n      let smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10)\r\n      smlData.forEach(user => {\r\n        if (user.groups !== undefined && user.groups.includes('bot')) {\r\n          user.bot = user.actions\r\n          user.human = 0\r\n        } else {\r\n          user.bot = 0\r\n          user.human = user.actions\r\n        }\r\n      })\r\n\r\n      this.setState({ fullData: fullData, data: smlData })\r\n    } else {\r\n      let smlData = data.slice(0, this.state.fullGraph ? 30 : 10)\r\n\r\n      this.setState({ data: smlData })\r\n    }\r\n  },\r\n  keys: ['bot', 'human'],\r\n  index: 'username',\r\n  xAxis: 'username',\r\n  yAxis: 'actions',\r\n  colors: 'set2',\r\n  colorBy: 'id',\r\n  legend: {\r\n    dataFrom: 'keys',\r\n    anchor: 'bottom-right',\r\n    direction: 'column',\r\n    justify: false,\r\n    translateX: 120,\r\n    translateY: 0,\r\n    itemsSpacing: 2,\r\n    itemWidth: 100,\r\n    itemHeight: 20,\r\n    itemDirection: 'left-to-right',\r\n    itemOpacity: 0.85,\r\n    symbolSize: 20,\r\n    effects: [\r\n      {\r\n        on: 'hover',\r\n        style: {\r\n          itemOpacity: 1,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  margin: { top: 5, right: 130, bottom: 50, left: 80 },\r\n  onClick: function(click) {\r\n    window.open(\r\n      'https://www.wikidata.org/wiki/User:' + click.indexValue,\r\n      '_blank'\r\n    )\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:')\r\n  },\r\n}\r\n\r\nclass MostActiveUsers extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    }\r\n  }\r\n\r\n  handlePause = event => {\r\n    let paused = this.state.paused\r\n    this.setState({ paused: !paused })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          'A live view of the users active right now. The graph shows users active since this page was loaded.' +\r\n          \" Hover over a bar to get a preview of the user's page, or click to open the user's page in a new tab.\"\r\n        }\r\n        graph={\r\n          <SimpleBarGraph\r\n            fullGraph={true}\r\n            settings={MostActiveUsersGraphSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name={'Most Active Users'}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default MostActiveUsers\r\n","import React, { Component } from 'react'\r\nimport GraphPage from './GraphPage'\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph'\r\nimport { getMostActivePages } from '../Backend/APIWrapper'\r\n\r\nexport const MostActivePagesGraphSettings = {\r\n  getData: async function() {\r\n    let [data, newTimestamp] = await getMostActivePages(\r\n      new Date().toISOString()\r\n    )\r\n    data = data.slice(0, 50)\r\n    this.setState({\r\n      fullData: data,\r\n      prevTimestamp: newTimestamp,\r\n    })\r\n    return data\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async function() {\r\n    let [data, newTimestamp] = await getMostActivePages(\r\n      this.state.prevTimestamp\r\n    )\r\n    this.setState({ prevTimestamp: newTimestamp })\r\n    data = data.slice(0, 50)\r\n    if (this.state.fullData) {\r\n      let fullData = this.state.fullData\r\n      data.forEach(pageAdditions => {\r\n        let index = -1\r\n        for (let i = 0; i < fullData.length; i += 1) {\r\n          if (fullData[i].id === pageAdditions.id) {\r\n            index = i\r\n          }\r\n        }\r\n        if (index !== -1) {\r\n          fullData[index].actions += pageAdditions.actions\r\n        } else {\r\n          fullData.push(pageAdditions)\r\n        }\r\n      })\r\n      fullData.sort((a, b) => b.actions - a.actions)\r\n      fullData.slice(0, 50)\r\n      let smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10)\r\n\r\n      this.setState({ fullData: fullData, data: smlData })\r\n    } else {\r\n      let smlData = data.slice(0, this.state.fullGraph ? 30 : 10)\r\n\r\n      this.setState({ data: smlData })\r\n    }\r\n  },\r\n  keys: ['actions'],\r\n  index: 'id',\r\n  xAxis: 'pages',\r\n  yAxis: 'actions',\r\n  colors: 'pastel1',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.indexValue, '_blank')\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/')\r\n  },\r\n}\r\n\r\nclass MostActivePages extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    }\r\n  }\r\n\r\n  handlePause = event => {\r\n    let paused = this.state.paused\r\n    this.setState({ paused: !paused })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          'A live view of the pages being edited right now. The graph shows pages edited since this page was loaded.' +\r\n          ' Hover over a bar to get a preview of the page, or click to open the page in a new tab.'\r\n        }\r\n        graph={\r\n          <SimpleBarGraph\r\n            fullGraph={true}\r\n            settings={MostActivePagesGraphSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name={'Most Active Pages'}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default MostActivePages\r\n","import React, { Component } from 'react'\r\nimport GraphPage from './GraphPage'\r\nimport PieChart from '../Components/PieChart'\r\nimport { getRecentLargestEdits } from '../Backend/APIWrapper'\r\n\r\nexport const LargestRecentEditsSettings = {\r\n  getData: getRecentLargestEdits,\r\n  refreshTime: 2000,\r\n  refreshMethod: getRecentLargestEdits,\r\n  colorBy: 'type',\r\n  colors: 'set2',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank')\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/')\r\n  },\r\n}\r\n\r\nclass LargestRecentEdits extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    }\r\n  }\r\n\r\n  handlePause = event => {\r\n    let paused = this.state.paused\r\n    this.setState({ paused: !paused })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          <div>\r\n            {'The largest of the last 500 edits. The number in each of the sections represents the size of the edit in bytes.' +\r\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\r\n            <p>\r\n              <img\r\n                className=\"legend\"\r\n                src={require('../legend.svg')}\r\n                alt=\"Legend\"\r\n              />\r\n            </p>\r\n          </div>\r\n        }\r\n        graph={\r\n          <PieChart\r\n            fullGraph={true}\r\n            settings={LargestRecentEditsSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name={'Largest Recent Edits'}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default LargestRecentEdits\r\n","import React, { Component } from 'react'\r\nimport GraphPage from './GraphPage'\r\nimport PieChart from '../Components/PieChart'\r\nimport { getRecentEditsWithSize } from '../Backend/APIWrapper'\r\n\r\nexport const RecentEditSizeSettings = {\r\n  getData: async () => {\r\n    let data = await getRecentEditsWithSize()\r\n    data.forEach(item => {\r\n      item.id = item.revid.toString()\r\n      item.value = Math.abs(item.newlen - item.oldlen)\r\n      item.label = item.title\r\n    })\r\n    return data\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async () => {\r\n    let data = await getRecentEditsWithSize()\r\n    data.forEach(item => {\r\n      item.value = Math.abs(item.newlen - item.oldlen)\r\n      item.id = item.revid.toString()\r\n      item.label = item.title\r\n    })\r\n    return data\r\n  },\r\n  colorBy: 'type',\r\n  colors: 'set1',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank')\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/')\r\n  },\r\n}\r\n\r\nclass RecentEditSize extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    }\r\n  }\r\n\r\n  handlePause = event => {\r\n    let paused = this.state.paused\r\n    this.setState({ paused: !paused })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          <div>\r\n            {'The size of the last 30 edits. The number in each of the sections represents the size of the edit in bytes.' +\r\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\r\n            <p>\r\n              <img\r\n                className=\"legend\"\r\n                src={require('../legend.svg')}\r\n                alt=\"Legend\"\r\n              />\r\n            </p>\r\n          </div>\r\n        }\r\n        graph={\r\n          <PieChart\r\n            fullGraph={true}\r\n            settings={RecentEditSizeSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name={'Recent Edit Size'}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default RecentEditSize\r\n","import React, { Component } from 'react'\r\nimport GraphPage from './GraphPage'\r\nimport PieChart from '../Components/PieChart'\r\nimport { getRecentEditsWithFlags } from '../Backend/APIWrapper'\r\n\r\nexport const ProportionFlaggedSettings = {\r\n  getData: getRecentEditsWithFlags,\r\n  refreshTime: 2000,\r\n  refreshMethod: getRecentEditsWithFlags,\r\n  colorFunction: d => d.color,\r\n  name: 'Proportion Of Edits Flagged',\r\n}\r\n\r\nclass ProportionFlagged extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    }\r\n  }\r\n\r\n  handlePause = event => {\r\n    let paused = this.state.paused\r\n    this.setState({ paused: !paused })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          'The proportion of the last 50 edits that was flagged as potentially damaging.'\r\n        }\r\n        graph={\r\n          <PieChart\r\n            fullGraph={true}\r\n            settings={ProportionFlaggedSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name={ProportionFlaggedSettings.name}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default ProportionFlagged\r\n","import React, { Component } from 'react'\r\nimport Navbar from '../Components/Navbar'\r\nimport GraphCard from '../Components/GraphCard'\r\nimport FeedData from '../Components/Feed'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph'\r\nimport PieChart from '../Components/PieChart'\r\nimport { MostActiveUsersGraphSettings } from './MostActiveUsers'\r\nimport { MostActivePagesGraphSettings } from './MostActivePages'\r\nimport { LargestRecentEditsSettings } from './LargestRecentEdits'\r\nimport { RecentEditSizeSettings } from './RecentEditSize'\r\nimport { ProportionFlaggedSettings } from './ProportionFlagged'\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar />\r\n        <div class=\"row justify-content-left text-dark\">\r\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\r\n            <div class=\"feedContainer\">\r\n              <FeedData />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\r\n            <div className=\"deck-container\">\r\n              <CardDeck className=\"deck\">\r\n                <GraphCard\r\n                  title=\"Recent Edit Size\"\r\n                  pageLink=\"recent-edit-size\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <PieChart\r\n                      paused={true}\r\n                      fullGraph={false}\r\n                      settings={RecentEditSizeSettings}\r\n                    />\r\n                  }\r\n                />\r\n                <GraphCard\r\n                  title=\"Most Active Users\"\r\n                  pageLink=\"most-active-users\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <SimpleBarGraph\r\n                      paused={false}\r\n                      fullGraph={false}\r\n                      settings={MostActiveUsersGraphSettings}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n              <CardDeck className=\"deck\">\r\n                <GraphCard\r\n                  title=\"Most Active Pages\"\r\n                  pageLink=\"most-active-pages\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <SimpleBarGraph\r\n                      paused={false}\r\n                      fullGraph={false}\r\n                      settings={MostActivePagesGraphSettings}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n\r\n              <CardDeck className=\"deck\">\r\n                <GraphCard\r\n                  title=\"Largest Recent Edits\"\r\n                  pageLink=\"largest-recent-edits\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <PieChart\r\n                      paused={true}\r\n                      fullGraph={false}\r\n                      settings={LargestRecentEditsSettings}\r\n                    />\r\n                  }\r\n                />\r\n                <GraphCard\r\n                  title={ProportionFlaggedSettings.name}\r\n                  pageLink=\"proportion-flagged\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <PieChart\r\n                      paused={false}\r\n                      fullGraph={false}\r\n                      settings={ProportionFlaggedSettings}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomePage\r\n","import React, { Component } from 'react'\r\nimport GraphPage from './GraphPage'\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph'\r\nimport { getMostEditsUsers } from '../Backend/APIWrapper'\r\n\r\nexport const UsersByMostEditsGraphSettings = {\r\n  getData: async function() {\r\n    let data = await getMostEditsUsers()\r\n    return data\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: function() {\r\n    this.loadData()\r\n  },\r\n  keys: ['editcount'],\r\n  index: 'name',\r\n  xAxis: 'users',\r\n  yAxis: 'edit count',\r\n  colors: 'paired',\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:')\r\n  },\r\n}\r\n\r\nclass UsersByMostEditsPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    }\r\n  }\r\n\r\n  handlePause = event => {\r\n    this.setState({ paused: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        graph={\r\n          <SimpleBarGraph\r\n            fullGraph={true}\r\n            settings={UsersByMostEditsGraphSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name={'Users By Most Edits'}\r\n      />\r\n    )\r\n  }\r\n}\r\nexport default UsersByMostEditsPage\r\n","\timport React from 'react'\r\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom'\r\nimport HomePage from './Pages/HomePage'\r\nimport history from './Utils/History'\r\nimport FeedData from './Components/Feed'\r\nimport TestPage from './Pages/TestPage'\r\nimport UsersByMostEditsPage from './Pages/UsersByMostEditsPage'\r\nimport MostActiveUsers from './Pages/MostActiveUsers'\r\nimport MostActivePages from './Pages/MostActivePages'\r\nimport RecentEditSize from './Pages/RecentEditSize'\r\nimport LargestRecentEdits from './Pages/LargestRecentEdits'\r\nimport ProportionFlagged from './Pages/ProportionFlagged'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={process.env.PUBLIC_URL} history={history}>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path={'/'}\r\n            component={HomePage}\r\n          />\r\n          <Route exact path=\"/page\" component={TestPage} />\r\n          <Route\r\n            exact\r\n            path=\"/users-by-most-edits\"\r\n            component={UsersByMostEditsPage}\r\n          />\r\n          <Route exact path=\"/most-active-users\" component={MostActiveUsers} />\r\n          <Route exact path=\"/recent-edit-size\" component={RecentEditSize} />\r\n          <Route\r\n            exact\r\n            path=\"/largest-recent-edits\"\r\n            component={LargestRecentEdits}\r\n          />\r\n          <Route exact path=\"/most-active-pages\" component={MostActivePages} />\r\n          <Route\r\n            exact\r\n            path=\"/proportion-flagged\"\r\n            component={ProportionFlagged}\r\n          />\r\n          <Route exact path=\"/feed\" component={FeedData} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}