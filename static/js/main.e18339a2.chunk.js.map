{"version":3,"sources":["legend.svg","Components/TitleContainer.js","Components/Navbar.jsx","Components/HomeNavContainer.js","Components/HomeStats.js","Pages/HomePage.jsx","Utils/History.js","Backend/APIWrapper.js","Backend/FeedData.js","Components/Feed.jsx","Pages/FeedData.jsx","Components/GraphCard.jsx","Components/SimpleBarGraph.jsx","Components/PieChart.jsx","Pages/GraphPage.jsx","Pages/MostActiveUsers.jsx","Pages/MostActivePages.jsx","Pages/LargestRecentEdits.jsx","Pages/RecentEditSize.jsx","Pages/ProportionFlagged.jsx","Components/PieChartRefresh.jsx","Backend/searchingFunctionality.js","Pages/NumberOfChanges.jsx","Pages/TestPage.jsx","Pages/UsersByMostEditsPage.jsx","Pages/AboutPage.jsx","Components/SearchBar.js","Components/UserFeed.jsx","Pages/NumberOfChangesUser.jsx","Components/CalendarGraph.jsx","Pages/UserContributionsOverTime.jsx","Pages/UsersSearchPage.jsx","Components/PageFeed.jsx","Pages/PageRevisionsOverTime.jsx","Pages/PageRevisionsPage.jsx","Pages/TestComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["TitleContainer","className","this","props","title","subtitle","React","Component","NavbarLocal","state","history","activePage","window","location","href","Navbar","Collapse","Nav","Link","as","to","endsWith","target","rel","HomeNavContainer","styled","btnTitle1","btnTitle2","btnLink","type","btnStyle","btnText","HomeStats","text","errorCode","updateStats","$","ajax","url","success","response","html","find","intervalID","setInterval","clearInterval","id","HomePage","icon","faBars","faChartLine","faUser","createBrowserHistory","API_ENDPOINT","getMostEditsUsers","a","compare","b","editcount","users","query","action","format","list","auprop","aulimit","auwitheditsonly","auactiveusers","then","data","allusers","sort","getRecentEditsWithSize","edits","rcprop","rclimit","result","recentchanges","getRecentEditsWithFlags","revids","map","recentChange","revid","getScore","scores","label","value","color","Object","values","forEach","score","undefined","damaging","prediction","getRecentLargestEdits","editList","item","Math","abs","newlen","oldlen","toString","getMostActivePages","prevTimestamp","queryRecentChanges","recentChanges","newTimestamp","activePages","countPageOccurances","getRecentActiveUsers","activeUsers","countUsers","batchQuery","itemsKey","items","endpoint","params","batches","Array","createBatch","results","batch","join","push","catch","err","Promise","all","tmpTimestamp","Date","toISOString","rcstart","rcend","revisionIds","getUserGroups","userNames","usprop","groups","queryResult","userObj","name","n","paramsString","URLSearchParams","fetch","json","setTimeout","length","resultBatch","wikidatawiki","titleCounts","change","actions","titles","entries","userCounts","user","numActions","username","array","size","splice","FeedData","maxItems","changes","newTimeStamp","usernames","unshift","pop","getTimeDifference","toCompare","round","getTime","Feed","useState","feedData","paused","setPaused","setRecentChanges","useEffect","refresh","onChange","prevPause","index","timestamp","GraphCard","onClick","pageLink","graph","Card","tag","Body","Title","SimpleBarGraph","tooltip","click","src","indexValue","loadData","settings","getData","bind","smlData","slice","fullGraph","setState","loaded","method","refreshMethod","refreshInterval","refreshTime","margin","classname","clickable","legend","colorBy","top","right","bottom","left","keys","indexBy","padding","colors","scheme","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","xAxis","legendPosition","legendOffset","axisLeft","yAxis","enableLabel","animate","isInteractive","motionStiffness","motionDamping","legends","PieChart","colorFunction","innerRadius","padAngle","cornerRadius","enableRadialLabels","radialLabel","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","enableSlicesLabels","slicesLabelsSkipAngle","slicesLabelsTextColor","defs","background","rotation","lineWidth","spacing","fill","match","GraphPage","explanation","handlePause","MostActiveUsersGraphSettings","fullData","userAdditions","i","includes","bot","human","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","open","MostActiveUsers","event","MostActivePagesGraphSettings","pageAdditions","MostActivePages","LargestRecentEditsSettings","LargestRecentEdits","require","alt","RecentEditSizeSettings","RecentEditSize","ProportionFlaggedSettings","ProportionFlagged","PieChartRefresh","console","log","dataFinished","loadDataCont","initialCall","refreshCont","changeValue","loading","WIKIDATA_ENDPOINT","WIKIPEDIA_ENDPOINT_SEARCH","userSearch","XMLHttpRequest","uclimit","ucuser","wikipediaQuery","userContributionsSeperator","usercontribs","userSearchCont","cont","uccontinue","pageRevisionsSearch","searchitem","getWikibaseItem","getRevisionsOfPage","pageRevisionsSearchCont","getRevisionsOfPageCont","extraResult","json1","temp","hasOwnProperty","pageprops","wikibase_item","getRevisions","revisions","searchItem","prop","pages","qid","rvprops","rvlimit","getRevisionsHelper","rvcontinue","getPrefixSearch","pssearch","NumberOfChangesSettings","searchValue","str","keyValue","myMap","Map","has","set","reduce","s","o","j","singleArray","concat","NumberOfChanges","key","onRef","search","CardDeck","UsersByMostEditsGraphSettings","UsersByMostEditsPage","AboutPage","setData","currentStudent","firstName","lastName","year","team","github","studentList","faLink","faGithub","SearchBar","setSearch","suggestions","setSuggestions","pub","setPub","parseData","prefixsearch","obj","sugg","pageid","handleSubmit","e","preventDefault","autoComplete","onSubmit","height","display","flexDirection","position","backgroundColor","marginRight","width","borderStyle","suggestion","PageFeed","max","togglePause","utils","comment","CalendarGraph","render","emptyColor","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","itemCount","UserContributionsOverTimeSettings","nextVals","day","UserContributionsOverTime","UsersSearchPage","checkUser","ifConfirm","firmsList","invalidSearch","bool","feed","onclick","overTime","UserFeed","ref","SearchSettings","NumberOfChangesUser","PageRevisionsOverTimeSettings","PageRevisionsOverTime","PageRevisionsPage","val","searchSuggestions","TestComponent","justifyContent","App","basename","process","exact","path","component","TestPage","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e18339a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/legend.9527bbb6.svg\";","import React from 'react';\r\n\r\nclass TitleContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\" text-left\">\r\n        <h1 className=\"text-left  display-3\">\r\n          <b>{this.props.title}</b>\r\n        </h1>\r\n        <h4>{this.props.subtitle}</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitleContainer;\r\n","import React, { Component } from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Creates the Navbar shown on all pages\r\n\r\nclass NavbarLocal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { history: this.props.history };\r\n  }\r\n  render() {\r\n    // var isActive = this.context.router.route.location.pathname\r\n    const activePage = window.location.href;\r\n    return (\r\n      <Navbar>\r\n        <Navbar.Collapse>\r\n          <Nav>\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/\"\r\n              className={\r\n                activePage.endsWith('/') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Home\r\n            </Nav.Link>\r\n\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/about-page\"\r\n              className={\r\n                activePage.endsWith('/about-page')\r\n                  ? 'nav-link--active'\r\n                  : 'nav-link'\r\n              }\r\n            >\r\n              About Us\r\n            </Nav.Link>\r\n\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/page\"\r\n              className={\r\n                activePage.endsWith('/page') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Dashboard\r\n            </Nav.Link>\r\n\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/feed\"\r\n              className={\r\n                activePage.endsWith('/feed') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Feed\r\n            </Nav.Link>\r\n\r\n            <a\r\n              as={Link}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href=\"https://github.com/JeremieSD/Software-Engineering\"\r\n              className={\r\n                activePage.endsWith('/ksknc') ? 'nav-link--active' : 'nav-link'\r\n              }\r\n            >\r\n              Github Project\r\n            </a>\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/user-search\"\r\n              className={\r\n                activePage.endsWith('/user-search')\r\n                  ? 'nav-link--active'\r\n                  : 'nav-link'\r\n              }\r\n            >\r\n              User Search\r\n            </Nav.Link>\r\n            <Nav.Link\r\n              as={Link}\r\n              to=\"/page-revisions\"\r\n              className={\r\n                activePage.endsWith('/page-revisions')\r\n                  ? 'nav-link--active'\r\n                  : 'nav-link'\r\n              }\r\n            >\r\n              Page Revisions\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarLocal;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//This class takes in a title and a description and displays them as shown on the homepage\r\n\r\nclass HomeNavContainer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ting\">\r\n        <h2 className={this.props.styled}>{this.props.btnTitle1}</h2>\r\n        <h2 className={this.props.styled}>{this.props.btnTitle2}</h2>\r\n        <br />\r\n        <Link to={this.props.btnLink}>\r\n          <button type=\"button\" className={this.props.btnStyle}>\r\n            {this.props.btnText}\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeNavContainer;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport $ from 'jquery';\r\n\r\n//These load the statistics from a server we set up and displays them on the homepage\r\n\r\nclass HomeStats extends Component {\r\n  state = {\r\n    text: 'something',\r\n    errorCode: 'Loading...',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateStats();\r\n    this.intervalID = setInterval(() => this.updateStats(), 5000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  updateStats = () => {\r\n    $.ajax({\r\n      url:\r\n        'https://protected-shelf-93081.herokuapp.com/https://www.wikidata.org/wiki/Special:Statistics',\r\n      type: 'GET',\r\n      success: function(response) {\r\n        $('#div1').html(\r\n          $($(response).find('.mw-statistics-articles')).find(\r\n            '.mw-statistics-numbers'\r\n          )\r\n        );\r\n        $('#div2').html(\r\n          $($(response).find('.mw-statistics-edits')).find(\r\n            '.mw-statistics-numbers'\r\n          )\r\n        );\r\n        $('#div3').html(\r\n          $($(response).find('.mw-statistics-users')).find(\r\n            '.mw-statistics-numbers'\r\n          )\r\n        );\r\n        $('#div4').html(\r\n          $($(response).find('.mw-statistics-users-active')).find(\r\n            '.mw-statistics-numbers'\r\n          )\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row col-lg-12 mx-auto col-12 justify-content-center  homeStatContainer text-left\">\r\n        <div className=\"col-lg-3 col-12 homeStat\">\r\n          <h1 id=\"div1\">{this.state.errorCode}</h1>\r\n          <h1>Items</h1>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3 col-12 homeStat\">\r\n          <h1 id=\"div2\">{this.state.errorCode}</h1>\r\n          <h1>Edits</h1>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3 col-12 homeStat\">\r\n          <h1 id=\"div3\">{this.state.errorCode}</h1>\r\n          <h1>Users</h1>\r\n        </div>\r\n\r\n        <div className=\"col-lg-3 col-12  homeStat\">\r\n          <h1 id=\"div4\">{this.state.errorCode}</h1>\r\n          <h1>Active Users</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeStats;\r\n","import React, { Component } from 'react';\r\nimport TitleContainer from '../Components/TitleContainer';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from '../Components/Navbar';\r\nimport HomeNavContainer from '../Components/HomeNavContainer';\r\nimport HomeStatsContainer from '../Components/HomeStats';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChartLine } from '@fortawesome/free-solid-svg-icons';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\n/*This is the home page and makes use of the Navbar, \r\nhomeNavContainer, homeStatsContainer and TitleContainer components */\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { history: this.props.history };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar history={this.state.history} />\r\n        <div className=\"HomePageContent row margin-right: -15px margin-left: -15px\">\r\n          <div className=\"col-lg-5 col-sm-12\">\r\n            <TitleContainer\r\n              title=\"Wikidata Live\"\r\n              subtitle=\"A web app to visualise recent changes to Wikidata in quasi real time.\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-7 col-sm-12 homeNav\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4 col-sm-12\">\r\n                <h1 className=\"text-red\">\r\n                  <FontAwesomeIcon icon={faBars} />\r\n                </h1>\r\n                <HomeNavContainer\r\n                  styled=\"font-weight-bold text-red\"\r\n                  btnStyle=\"align-bottom btn btn-outline-red\"\r\n                  btnTitle1=\"About\"\r\n                  btnTitle2=\"Us\"\r\n                  btnText=\"About\"\r\n                  btnLink=\"/about-page\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4 col-sm-12 homeNav\">\r\n                <h1 className=\"text-green\">\r\n                  <FontAwesomeIcon icon={faChartLine} />\r\n                </h1>\r\n                <HomeNavContainer\r\n                  styled=\"font-weight-bold text-green\"\r\n                  btnStyle=\"align-bottom btn btn-outline-green\"\r\n                  btnTitle1=\"Wikidata\"\r\n                  btnTitle2=\"Dashboard\"\r\n                  btnText=\"Dashboard\"\r\n                  btnLink=\"/page\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-4 col-sm-12 homeNav\">\r\n                <h1 className=\"text-blue\">\r\n                  <FontAwesomeIcon icon={faUser} />\r\n                </h1>\r\n                <HomeNavContainer\r\n                  styled=\"font-weight-bold text-blue\"\r\n                  btnStyle=\"align-bottom btn btn-outline-blue\"\r\n                  btnTitle1=\"User\"\r\n                  btnTitle2=\"Data\"\r\n                  btnText=\"Users\"\r\n                  btnLink=\"/most-active-users\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"statsContent row justify-content-center\">\r\n          <HomeStatsContainer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","const API_ENDPOINT = 'https://www.wikidata.org/w/api.php';\r\nconst SCORING_ENDPOINT = 'https://ores.wikimedia.org/v3/scores/wikidatawiki/';\r\nconst MAX_QUERY_SIZE = 50;\r\nconst NUM_RETRIES = 5;\r\n\r\n/**\r\n * @typedef {Object} User\r\n * @property {number} userid - The user's id\r\n * @property {number} name - The user's name\r\n * @property {number} editcount - The number of edits the user did\r\n * @property {number} recentactions - The number of actions a user did within\r\n *           30 days\r\n * @property {Array} groups - An array of strings which contains the groups\r\n *           the user belongs in. For example if the user contains \"bot\", it is\r\n *           a non human user\r\n */\r\n\r\n/**\r\n * Returns a list of 500 users who were recently active within 30 days which is\r\n * sorted by the most edits in descending order\r\n *\r\n * @returns {Promise.<User[]>} - A Promise which resolves to an array of User\r\n *          objects\r\n */\r\nexport const getMostEditsUsers = async () => {\r\n  const compare = (a, b) => b.editcount - a.editcount;\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'allusers',\r\n    auprop: 'editcount|groups',\r\n    aulimit: 'max',\r\n    auwitheditsonly: '1',\r\n    auactiveusers: '1',\r\n  };\r\n  const users = query(API_ENDPOINT, params, NUM_RETRIES)\r\n    .then(data => data.query.allusers)\r\n    .then(users => users.sort(compare));\r\n  return users;\r\n};\r\n/**\r\n * Returns a list of 500 users who were recently active within 30 days which is\r\n * sorted by the most recent actions in descending order\r\n *\r\n * @returns {Promise.<User[]>} - A Promise which resolves to an array of User\r\n *          objects\r\n */\r\nexport const getMostActiveUsers = async () => {\r\n  const compare = (a, b) => b.recentactions - a.recentactions;\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'allusers',\r\n    auprop: 'editcount|groups',\r\n    aulimit: 'max',\r\n    auwitheditsonly: '1',\r\n    auactiveusers: '1',\r\n  };\r\n  const users = query(API_ENDPOINT, params, NUM_RETRIES)\r\n    .then(data => data.query.allusers)\r\n    .then(users => users.sort(compare));\r\n  return users;\r\n};\r\n\r\nexport const getRecentEditsWithSize = async () => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'recentchanges',\r\n    rcprop: 'title|ids|sizes|timestamp',\r\n    rclimit: '500',\r\n  };\r\n  const edits = query(API_ENDPOINT, params, NUM_RETRIES).then(\r\n    result => result.query.recentchanges\r\n  );\r\n  return await edits;\r\n};\r\n\r\nexport const getRecentEditsWithFlags = async () => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'recentchanges',\r\n    rcprop: 'ids',\r\n    rclimit: '50',\r\n  };\r\n  const edits = query(API_ENDPOINT, params, NUM_RETRIES).then(\r\n    result => result.query.recentchanges\r\n  );\r\n\r\n  let revids = await edits;\r\n  revids = revids.map(recentChange => recentChange.revid);\r\n  let scores = await getScore(revids);\r\n\r\n  const data = [\r\n    { id: 'damaging', label: 'damaging', value: 0, color: '#F25543' },\r\n    { id: 'unsure', label: 'unsure', value: 0, color: '#FFF047' },\r\n    { id: 'good faith', label: 'good faith', value: 0, color: '#92E16F' },\r\n  ];\r\n\r\n  scores = await scores;\r\n\r\n  Object.values(scores).forEach(score => {\r\n    if (\r\n      score.damaging.score !== undefined &&\r\n      score.damaging.score.prediction === true\r\n    ) {\r\n      data[0].value += 1;\r\n    } else if (\r\n      score.damaging.score !== undefined &&\r\n      score.damaging.score.prediction === false\r\n    ) {\r\n      data[2].value += 1;\r\n    } else {\r\n      data[1].value += 1;\r\n    }\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n/**\r\n * Returns recent 500 recent edits sorted by size of changes made in absolute value\r\n * So large additions and large deletions are included\r\n */\r\nexport const getRecentLargestEdits = async () => {\r\n  const editList = await getRecentEditsWithSize();\r\n\r\n  editList.forEach(item => {\r\n    item.value = Math.abs(item.newlen - item.oldlen);\r\n    item.id = item.revid.toString();\r\n    item.label = item.title;\r\n  });\r\n\r\n  editList.sort((a, b) => b.value - a.value);\r\n\r\n  return editList;\r\n};\r\n\r\n/**\r\n * @typedef {Object} PageInfo\r\n * @property {string} id - The id of the page\r\n * @property {actions} actions - Number of actions which has been performed on\r\n *           that page\r\n * @property {string} title - The title of the page\r\n */\r\n\r\n/**\r\n * Returns an array of most active pages from recent changes feed\r\n *\r\n * @param {string} prevTimestamp - Previous timestamp when the function was\r\n *        last called\r\n * @returns {(Promise.<PageInfo[]> | string)[]}\r\n */\r\nexport const getMostActivePages = async prevTimestamp => {\r\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp);\r\n  const activePages = recentChanges.then(recentChanges =>\r\n    countPageOccurances(recentChanges)\r\n  );\r\n  return [await activePages, newTimestamp];\r\n};\r\n\r\n/**\r\n * Returns an array of most users pages from recent changes feed\r\n *\r\n * @param {string} prevTimestamp - Previous timestamp when the function was\r\n *        last called\r\n * @returns {(Promise.<User[]> | string)[]}\r\n */\r\nexport const getRecentActiveUsers = async prevTimestamp => {\r\n  const [recentChanges, newTimestamp] = queryRecentChanges(prevTimestamp);\r\n  const activeUsers = recentChanges.then(activeUsers =>\r\n    countUsers(activeUsers)\r\n  );\r\n  return [await activeUsers, newTimestamp];\r\n};\r\n\r\n/**\r\n * Batches a query to cirumvent the 50 items query limit\r\n *\r\n * @param {string} itemsKey the query key\r\n * @param {Array} items the items to add to the query\r\n * @param {string} endpoint the endpoint url\r\n * @param {Object} params the parameters of the query\r\n */\r\nexport const batchQuery = async (itemsKey, items, endpoint, params) => {\r\n  const result = [];\r\n  let batches = null;\r\n  if (items instanceof Array) {\r\n    batches = createBatch(items, MAX_QUERY_SIZE);\r\n  } else {\r\n    batches = [[items]];\r\n  }\r\n  const results = batches.map(async batch => {\r\n    params[itemsKey] = batch.join('|');\r\n    return query(endpoint, params, NUM_RETRIES)\r\n      .then(data => result.push(data))\r\n      .catch(err => null);\r\n  });\r\n  await Promise.all(results);\r\n  return result;\r\n};\r\n\r\n/**\r\n * @typedef {Object} RecentChanges\r\n * @property {number} newlen - the number of bytes the page uses after the change\r\n * @property {number} ns\r\n * @property {number} old_revid - The old revision id\r\n * @property {number} oldlen - the number of bytes the page uses before the change\r\n * @property {number} pageid - The page id\r\n * @property {number} rcid - The recent change id\r\n * @property {number} revid - The current revision id\r\n * @property {string} timestamp - Timestamp of change\r\n * @property {string} title - Title of the page changed\r\n * @property {string} type - Type of action e.g. \"new\", \"edit\"\r\n * @property {string} user - The username of the editor\r\n */\r\n\r\n/**\r\n * Queries the API for the most recent changes\r\n *\r\n * @param {string} prevTimestamp - Previous timestamp when the function was\r\n *        last called\r\n * @returns {(Promise.<RecentChanges[]> | string)[]}\r\n */\r\nexport const queryRecentChanges = prevTimestamp => {\r\n  let tmpTimestamp = new Date();\r\n  const newTimestamp = tmpTimestamp.toISOString();\r\n  tmpTimestamp = tmpTimestamp - 1000;\r\n  tmpTimestamp = new Date(tmpTimestamp).toISOString();\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'recentchanges',\r\n    rcprop: 'title|ids|timestamp|user|sizes',\r\n    rclimit: 'max',\r\n    rcstart: tmpTimestamp,\r\n    rcend: prevTimestamp,\r\n  };\r\n  const recentChanges = query(API_ENDPOINT, params, NUM_RETRIES)\r\n    .then(data => data.query.recentchanges)\r\n    .then(recentChanges => {\r\n      const revisionIds = recentChanges.map(recentChange => recentChange.revid);\r\n      return getScore(revisionIds).then(scores =>\r\n        recentChanges.map(recentChange => {\r\n          recentChange.scores = scores[recentChange.revid];\r\n          return recentChange;\r\n        })\r\n      );\r\n    });\r\n  return [recentChanges, newTimestamp];\r\n};\r\n\r\n/**\r\n * Returns the groups of each username in the input array\r\n *\r\n * @param {string[]} userNames - an array of usernames to fetch the group of\r\n * @returns {Map.<string, string[]>} - map of username to an array of groups\r\n *         they belong to\r\n */\r\nexport const getUserGroups = userNames => {\r\n  const key = 'ususers';\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'users',\r\n    usprop: 'groups',\r\n  };\r\n  const groups = batchQuery(key, userNames, API_ENDPOINT, params).then(data => {\r\n    const groups = {};\r\n    data.forEach(queryResult => {\r\n      const users = queryResult.query.users;\r\n      users.forEach(userObj => {\r\n        if (userObj.groups) {\r\n          groups[userObj.name] = userObj.groups;\r\n        }\r\n      });\r\n    });\r\n    return groups;\r\n  });\r\n  return groups;\r\n};\r\n\r\n// ~ Helper Functions ---------------------------------------------------------\r\n\r\n/**\r\n * Returns a the response of a query to the Wikidata API endpoint\r\n *\r\n * @param {Object} params - Object of parameters to use when querying\r\n * @param {number} n - Number of times to retry if failure occurs\r\n * @returns {Promise.<Object>}\r\n */\r\nconst query = async (endpoint, params, n) => {\r\n  try {\r\n    const paramsString = new URLSearchParams(params).toString();\r\n    const url = endpoint + '?' + paramsString + '&origin=*';\r\n    return await fetch(url).then(response => response.json());\r\n  } catch (err) {\r\n    if (n === 1) {\r\n      throw err;\r\n    }\r\n    return await setTimeout(query(endpoint, params, n - 1), 500);\r\n  }\r\n};\r\n\r\n/**\r\n * Retruns the score of the revision id to find out if the edit was harmful or not\r\n *\r\n * @param {number[]} revisionIds - Revision ids to obtain the score of\r\n * @returns {Promise.<Object>}\r\n */\r\nconst getScore = async revisionIds => {\r\n  if (revisionIds.length === 0) {\r\n    return;\r\n  }\r\n  const key = 'revids';\r\n  const params = {};\r\n  let scores = {};\r\n  return batchQuery(key, revisionIds, SCORING_ENDPOINT, params).then(\r\n    resultBatch => {\r\n      resultBatch.forEach(\r\n        result => (scores = { ...scores, ...result.wikidatawiki?.scores })\r\n      );\r\n      return scores;\r\n    }\r\n  );\r\n};\r\n\r\n/**\r\n * Returns the number of times a page appeared on the recent changes feed sorted by\r\n * number of actions done on the page\r\n *\r\n * @param {RecentChanges[]} recentChanges - The array of recent changes from a query\r\n */\r\nconst countPageOccurances = recentChanges => {\r\n  const compare = (a, b) => b.actions - a.actions;\r\n  const titleCounts = {};\r\n  recentChanges.forEach(change => {\r\n    const actions = titleCounts[change.title] || 0;\r\n    titleCounts[change.title] = actions + 1;\r\n  });\r\n  const titles = Object.entries(titleCounts).map(([id, actions]) => ({\r\n    id,\r\n    actions,\r\n  }));\r\n  titles.sort(compare);\r\n  return titles;\r\n};\r\n\r\n/**\r\n * Returns the number of times a user appeared on the recent changes feed sorted by\r\n * number of actions done by that user\r\n *\r\n * @param {RecentChanges[]} recentChanges - The array of recent changes from a query\r\n */\r\nconst countUsers = recentChanges => {\r\n  const compare = (a, b) => b.actions - a.actions;\r\n  const userCounts = {};\r\n  recentChanges.forEach(change => {\r\n    const user = change.user;\r\n    const numActions = userCounts[user] || 0;\r\n    userCounts[user] = numActions + 1;\r\n  });\r\n  const users = Object.entries(userCounts).map(([username, actions]) => ({\r\n    username,\r\n    actions,\r\n  }));\r\n  const userNames = users.map(({ username }) => username);\r\n  getUserGroups(userNames).then(groups => {\r\n    users.forEach(userObj => (userObj.groups = groups[userObj.username]));\r\n    users.sort(compare);\r\n  });\r\n  return users;\r\n};\r\n\r\n/**\r\n * Splits up an array into smaller arrays\r\n *\r\n * @param {Array} array - Array to create batches from\r\n * @param {number} size - Batch size\r\n * @returns {Array} batches - An array containing the batches which are of\r\n *         length size\r\n */\r\nconst createBatch = (array, size) => {\r\n  const batches = [];\r\n  while (array.length > 0) {\r\n    batches.push(array.splice(0, size));\r\n  }\r\n  return batches;\r\n};\r\n","import { queryRecentChanges, getUserGroups } from './APIWrapper';\r\n\r\n/** Class which wraps the Wikidata API recent changes feed */\r\nclass FeedData {\r\n  /**\r\n   * Create a new feed data object\r\n   *\r\n   * @param {number} maxItems - the maximum number of items to keep in the\r\n   *        feed.\r\n   */\r\n  constructor(maxItems) {\r\n    this.changes = [];\r\n    this.maxItems = maxItems;\r\n    this.prevTimestamp = new Date().toISOString();\r\n  }\r\n\r\n  refresh() {\r\n    const [recentChanges, newTimeStamp] = queryRecentChanges(\r\n      this.prevTimestamp\r\n    );\r\n    recentChanges.then(changes => {\r\n      const usernames = changes.map(change => change.user);\r\n      getUserGroups(usernames).then(groups =>\r\n        changes.forEach(change => {\r\n          change.groups = groups[change.user];\r\n          this.changes.unshift(change);\r\n          if (this.changes.length > this.maxItems) {\r\n            this.changes.pop();\r\n          }\r\n        })\r\n      );\r\n    });\r\n    this.prevTimestamp = newTimeStamp;\r\n  }\r\n}\r\n\r\nexport default FeedData;\r\n","import React, { useState, useEffect } from 'react';\r\nimport FeedData from '../Backend/FeedData';\r\nimport Navbar from '../Components/Navbar';\r\n// eslint-disable-next-line\r\nimport style from '../style.css'\r\n\r\n//Creates the feed shown on the dashboard, it updates in real time and highlights suspicious changes in red\r\n\r\nfunction Feed() {\r\n  const [feedData] = useState(new FeedData(30));\r\n  const [paused, setPaused] = useState(false);\r\n  const [recentChanges, setRecentChanges] = useState({\r\n    items: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const refresh = setInterval(() => {\r\n      if (!paused) {\r\n        feedData.refresh();\r\n      }\r\n      setRecentChanges({ items: feedData.changes });\r\n    }, 500);\r\n    return () => clearInterval(refresh);\r\n  }, [feedData, paused]);\r\n\r\n  function togglePause() {\r\n    setPaused(prevPause => !prevPause);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"text-blue text-left\">Most Recent Activity</h3>\r\n      <form className=\"text-left\" onChange={togglePause}>\r\n        <label>\r\n          <input type=\"checkbox\" /> Paused\r\n        </label>\r\n      </form>\r\n      <ul className=\"list-group\">\r\n        {recentChanges.items.map((item, index) => (\r\n          <li className=\"list-group-item text-left\" key={index}>\r\n            <div\r\n              className={\r\n                item.scores?.damaging?.score?.prediction ? 'text-red' : ''\r\n              }\r\n            >\r\n              {`User ${item.user} action ${item.type} on ${\r\n                item.title\r\n              } ${getTimeDifference(item.timestamp)} seconds ago`}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst getTimeDifference = toCompare =>\r\n  Math.round(\r\n    Math.abs(new Date().getTime() - new Date(toCompare).getTime()) / 1000\r\n  );\r\n\r\nexport default Feed;\r\n","import React, { Component } from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from '../Components/Navbar';\r\nimport Feed from '../Components/Feed';\r\n\r\n/*This is the home page and makes use of the Navbar, \r\nhomeNavContainer, homeStatsContainer and TitleContainer components */\r\n\r\nclass FeedData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { history: this.props.history };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar history={this.state.history} />\r\n        <div className=\"\">\r\n          <Feed />\r\n        </div>\r\n        .{' '}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedData;\r\n","import Card from 'react-bootstrap/Card';\r\nimport React, { Component } from 'react';\r\n\r\nclass GraphCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      title: this.props.title,\r\n      pageLink: this.props.pageLink,\r\n      graph: this.props.graph,\r\n    };\r\n  }\r\n\r\n  onClick = () => {\r\n    this.state.history.push(this.state.pageLink);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card onClick={this.onClick} tag=\"a\" className=\"graph-card\">\r\n        <Card.Body>\r\n          <Card.Title className=\"card-title\">{this.state.title}</Card.Title>\r\n          {this.state.graph}\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GraphCard;\r\n","import React, { Component } from 'react';\r\nimport { ResponsiveBar } from '@nivo/bar';\r\n\r\nclass SimpleBarGraph extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n      data: null,\r\n      fullGraph: this.props.fullGraph,\r\n    };\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshInterval = setInterval(async () => {\r\n      await this.refresh();\r\n    }, this.props.settings.refreshTime);\r\n  }\r\n\r\n  tooltip = function(click, url) {\r\n    return (\r\n      <div className=\"iframe-container\">\r\n        <iframe\r\n          src={url + click.indexValue}\r\n          className=\"iframe\"\r\n          title=\"tooltip-option-2\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  loadData = () => {\r\n    const getData = this.props.settings.getData.bind(this);\r\n    getData().then(data => {\r\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\r\n      this.setState({\r\n        loaded: true,\r\n        data: smlData,\r\n      });\r\n    });\r\n  };\r\n\r\n  refresh = async () => {\r\n    if (!this.props.paused) {\r\n      const method = this.props.settings.refreshMethod.bind(this);\r\n      await method();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let margin = {};\r\n    let label = null;\r\n    let classname = '';\r\n    let onClick = null;\r\n    let clickable = false;\r\n    let tooltip = null;\r\n    let legend = [];\r\n    const colorBy = this.props.settings.colorBy\r\n      ? this.props.settings.colorBy\r\n      : 'index';\r\n    if (this.state.fullGraph) {\r\n      if (this.props.settings.margin) {\r\n        margin = this.props.settings.margin;\r\n      } else {\r\n        margin = { top: 5, right: 30, bottom: 80, left: 80 };\r\n      }\r\n      if (this.props.settings.legend) {\r\n        legend = [this.props.settings.legend];\r\n      }\r\n      label = true;\r\n      classname = 'full-graph-container';\r\n      if (this.props.settings.onClick) {\r\n        onClick = this.props.settings.onClick;\r\n        clickable = true;\r\n      }\r\n      if (this.props.settings.tooltip) {\r\n        tooltip = this.props.settings.tooltip.bind(this);\r\n      }\r\n    } else {\r\n      margin = { top: 0, right: 0, bottom: 0, left: 0 };\r\n      label = false;\r\n      classname = 'Graph-Container-Card';\r\n    }\r\n    return (\r\n      <div>\r\n        {!this.state.loaded ? (\r\n          'Loading...'\r\n        ) : (\r\n          <div className={classname}>\r\n            <ResponsiveBar\r\n              data={this.state.data}\r\n              keys={this.props.settings.keys}\r\n              indexBy={this.props.settings.index}\r\n              margin={margin}\r\n              padding={0.3}\r\n              colors={{ scheme: this.props.settings.colors }}\r\n              colorBy={colorBy}\r\n              borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n              axisTop={null}\r\n              axisRight={null}\r\n              axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 30,\r\n                legend: this.props.settings.xAxis,\r\n                legendPosition: 'start',\r\n                legendOffset: 40,\r\n              }}\r\n              axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: this.props.settings.yAxis,\r\n                legendPosition: 'middle',\r\n                legendOffset: -60,\r\n              }}\r\n              enableLabel={label}\r\n              onClick={clickable ? onClick : function() {}}\r\n              animate={label}\r\n              isInteractive={label}\r\n              motionStiffness={90}\r\n              motionDamping={15}\r\n              tooltip={tooltip}\r\n              legends={legend}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleBarGraph;\r\n","import React, { Component } from 'react';\r\nimport { ResponsivePie } from '@nivo/pie';\r\nimport { ThemeProvider } from 'react-bootstrap';\r\n//Tahmid02016\r\n\r\nclass PieChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n      data: null,\r\n      fullGraph: this.props.fullGraph,\r\n    };\r\n\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshInterval = setInterval(async () => {\r\n      await this.refresh();\r\n    }, this.props.settings.refreshTime);\r\n  }\r\n\r\n  tooltip = function(click, url) {\r\n    return (\r\n      <div className=\"iframe-container\">\r\n        <iframe\r\n          src={url + click.label}\r\n          className=\"iframe\"\r\n          title=\"tooltip-option-2\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  loadData = () => {\r\n    const getData = this.props.settings.getData.bind(this);\r\n    getData().then(data => {\r\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\r\n      this.setState({\r\n        loaded: true,\r\n        data: smlData,\r\n      });\r\n    });\r\n  };\r\n\r\n  refresh = async () => {\r\n    if (!this.props.paused) {\r\n      this.loadData();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let margin = {};\r\n    let label = null;\r\n    let classname = '';\r\n    let onClick = () => {};\r\n    let tooltip = null;\r\n    let colors = { scheme: this.props.settings.colors };\r\n    if (this.props.settings.colorFunction) {\r\n      colors = this.props.settings.colorFunction;\r\n    }\r\n    if (this.state.fullGraph) {\r\n      margin = { top: 30, right: 30, bottom: 30, left: 30 };\r\n      label = true;\r\n      classname = 'full-graph-container';\r\n\r\n      if (this.props.settings.onClick) {\r\n        onClick = this.props.settings.onClick;\r\n      }\r\n      if (this.props.settings.tooltip) {\r\n        tooltip = this.props.settings.tooltip.bind(this);\r\n      }\r\n    } else {\r\n      margin = { top: 0, right: 0, bottom: 0, left: 0 };\r\n      label = false;\r\n      classname = 'Graph-Container-Card';\r\n    }\r\n    return (\r\n      <div>\r\n        {!this.state.loaded ? (\r\n          'Loading...'\r\n        ) : (\r\n          <div className={classname}>\r\n            <ResponsivePie\r\n              data={this.state.data}\r\n              margin={margin}\r\n              innerRadius={0.4}\r\n              padAngle={0}\r\n              cornerRadius={0}\r\n              colors={colors}\r\n              enableRadialLabels={label}\r\n              radialLabel=\"label\"\r\n              radialLabelsSkipAngle={10}\r\n              radialLabelsTextXOffset={6}\r\n              radialLabelsTextColor=\"#333333\"\r\n              radialLabelsLinkOffset={0}\r\n              radialLabelsLinkDiagonalLength={16}\r\n              radialLabelsLinkHorizontalLength={24}\r\n              radialLabelsLinkStrokeWidth={1}\r\n              radialLabelsLinkColor={{ from: 'color' }}\r\n              enableSlicesLabels={label}\r\n              slicesLabelsSkipAngle={10}\r\n              slicesLabelsTextColor=\"#333333\"\r\n              animate={true}\r\n              motionStiffness={90}\r\n              motionDamping={15}\r\n              // defs={[\r\n              //   {\r\n              //     id: 'dots',\r\n              //     type: 'patternDots',\r\n              //     background: 'inherit',\r\n              //     color: 'rgba(255, 255, 255, 0.3)',\r\n              //     size: 4,\r\n              //     padding: 1,\r\n              //     stagger: true,\r\n              //   },\r\n              //   {\r\n              //     id: 'lines',\r\n              //     type: 'patternLines',\r\n              //     background: 'inherit',\r\n              //     color: 'rgba(255, 255, 255, 0.3)',\r\n              //     rotation: -45,\r\n              //     lineWidth: 6,\r\n              //     spacing: 10,\r\n              //   },\r\n              // ]}\r\n              isInteractive={this.state.fullGraph}\r\n              onClick={onClick}\r\n              tooltip={tooltip}\r\n              defs={[\r\n                {\r\n                  id: 'lines',\r\n                  type: 'patternLines',\r\n                  background: 'inherit',\r\n                  color: 'rgba(255, 255, 255, 0.4)',\r\n                  rotation: -45,\r\n                  lineWidth: 6,\r\n                  spacing: 10,\r\n                },\r\n              ]}\r\n              fill={[\r\n                {\r\n                  match: {\r\n                    type: 'edit',\r\n                  },\r\n                  id: 'lines',\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PieChart;\r\n","import React, { Component } from 'react';\r\nimport Navbar from '../Components/Navbar';\r\n\r\nclass GraphPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n      title: this.props.name,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar history={this.state.history} />\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3 col-12 infobox\">\r\n            <h2>{this.state.title}</h2>\r\n            <p />\r\n            <p>{this.props.explanation}</p>\r\n            <p>\r\n              <form onChange={this.props.handlePause}>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"paused\"\r\n                    name=\"paused\"\r\n                    value={this.props.paused}\r\n                  />{' '}\r\n                  {'Paused'}\r\n                </label>\r\n              </form>\r\n            </p>\r\n          </div>\r\n          <div className=\"col-lg-9 col-12\">{this.props.graph}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GraphPage;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\r\nimport { getRecentActiveUsers } from '../Backend/APIWrapper';\r\n\r\nexport const MostActiveUsersGraphSettings = {\r\n  getData: async function() {\r\n    let [data, newTimestamp] = await getRecentActiveUsers(\r\n      new Date().toISOString()\r\n    );\r\n    data = data.slice(0, 50);\r\n    this.setState({\r\n      fullData: data,\r\n      prevTimestamp: newTimestamp,\r\n    });\r\n    return data;\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async function() {\r\n    let [data, newTimestamp] = await getRecentActiveUsers(\r\n      this.state.prevTimestamp\r\n    );\r\n    this.setState({ prevTimestamp: newTimestamp });\r\n    data = data.slice(0, 50);\r\n    if (this.state.fullData) {\r\n      const fullData = this.state.fullData;\r\n      data.forEach(userAdditions => {\r\n        let index = -1;\r\n        for (let i = 0; i < fullData.length; i += 1) {\r\n          if (fullData[i].username === userAdditions.username) {\r\n            index = i;\r\n          }\r\n        }\r\n        if (index !== -1) {\r\n          fullData[index].actions += userAdditions.actions;\r\n        } else {\r\n          fullData.push(userAdditions);\r\n        }\r\n      });\r\n      fullData.sort((a, b) => b.actions - a.actions);\r\n      fullData.slice(0, 50);\r\n      const smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10);\r\n      smlData.forEach(user => {\r\n        if (user.groups !== undefined && user.groups.includes('bot')) {\r\n          user.bot = user.actions;\r\n          user.human = 0;\r\n        } else {\r\n          user.bot = 0;\r\n          user.human = user.actions;\r\n        }\r\n      });\r\n\r\n      this.setState({ fullData: fullData, data: smlData });\r\n    } else {\r\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\r\n\r\n      this.setState({ data: smlData });\r\n    }\r\n  },\r\n  keys: ['bot', 'human'],\r\n  index: 'username',\r\n  xAxis: 'username',\r\n  yAxis: 'actions',\r\n  colors: 'set2',\r\n  colorBy: 'id',\r\n  legend: {\r\n    dataFrom: 'keys',\r\n    anchor: 'bottom-right',\r\n    direction: 'column',\r\n    justify: false,\r\n    translateX: 120,\r\n    translateY: 0,\r\n    itemsSpacing: 2,\r\n    itemWidth: 100,\r\n    itemHeight: 20,\r\n    itemDirection: 'left-to-right',\r\n    itemOpacity: 0.85,\r\n    symbolSize: 20,\r\n    effects: [\r\n      {\r\n        on: 'hover',\r\n        style: {\r\n          itemOpacity: 1,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  margin: { top: 5, right: 130, bottom: 50, left: 80 },\r\n  onClick: function(click) {\r\n    window.open(\r\n      'https://www.wikidata.org/wiki/User:' + click.indexValue,\r\n      '_blank'\r\n    );\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:');\r\n  },\r\n};\r\n\r\nclass MostActiveUsers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    };\r\n  }\r\n\r\n  handlePause = event => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          'A live view of the users active right now. The graph shows users active since this page was loaded.' +\r\n          \" Hover over a bar to get a preview of the user's page, or click to open the user's page in a new tab.\"\r\n        }\r\n        graph={\r\n          <SimpleBarGraph\r\n            fullGraph={true}\r\n            settings={MostActiveUsersGraphSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name=\"Most Active Users\"\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default MostActiveUsers;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\r\nimport { getMostActivePages } from '../Backend/APIWrapper';\r\n\r\nexport const MostActivePagesGraphSettings = {\r\n  getData: async function() {\r\n    let [data, newTimestamp] = await getMostActivePages(\r\n      new Date().toISOString()\r\n    );\r\n    data = data.slice(0, 50);\r\n    this.setState({\r\n      fullData: data,\r\n      prevTimestamp: newTimestamp,\r\n    });\r\n    return data;\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async function() {\r\n    let [data, newTimestamp] = await getMostActivePages(\r\n      this.state.prevTimestamp\r\n    );\r\n    this.setState({ prevTimestamp: newTimestamp });\r\n    data = data.slice(0, 50);\r\n    if (this.state.fullData) {\r\n      const fullData = this.state.fullData;\r\n      data.forEach(pageAdditions => {\r\n        let index = -1;\r\n        for (let i = 0; i < fullData.length; i += 1) {\r\n          if (fullData[i].id === pageAdditions.id) {\r\n            index = i;\r\n          }\r\n        }\r\n        if (index !== -1) {\r\n          fullData[index].actions += pageAdditions.actions;\r\n        } else {\r\n          fullData.push(pageAdditions);\r\n        }\r\n      });\r\n      fullData.sort((a, b) => b.actions - a.actions);\r\n      fullData.slice(0, 50);\r\n      const smlData = fullData.slice(0, this.state.fullGraph ? 30 : 10);\r\n\r\n      this.setState({ fullData: fullData, data: smlData });\r\n    } else {\r\n      const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\r\n\r\n      this.setState({ data: smlData });\r\n    }\r\n  },\r\n  keys: ['actions'],\r\n  index: 'id',\r\n  xAxis: 'pages',\r\n  yAxis: 'actions',\r\n  colors: 'pastel1',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.indexValue, '_blank');\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\r\n  },\r\n};\r\n\r\nclass MostActivePages extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    };\r\n  }\r\n\r\n  handlePause = event => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          'A live view of the pages being edited right now. The graph shows pages edited since this page was loaded.' +\r\n          ' Hover over a bar to get a preview of the page, or click to open the page in a new tab.'\r\n        }\r\n        graph={\r\n          <SimpleBarGraph\r\n            fullGraph={true}\r\n            settings={MostActivePagesGraphSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name=\"Most Active Pages\"\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default MostActivePages;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport PieChart from '../Components/PieChart';\r\nimport { getRecentLargestEdits } from '../Backend/APIWrapper';\r\n\r\nexport const LargestRecentEditsSettings = {\r\n  getData: getRecentLargestEdits,\r\n  refreshTime: 2000,\r\n  refreshMethod: getRecentLargestEdits,\r\n  colorBy: 'type',\r\n  colors: 'set2',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\r\n  },\r\n};\r\n\r\nclass LargestRecentEdits extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    };\r\n  }\r\n\r\n  handlePause = event => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          <div>\r\n            {'The largest of the last 500 edits. The number in each of the sections represents the size of the edit in bytes.' +\r\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\r\n            <p>\r\n              <img\r\n                className=\"legend\"\r\n                src={require('../legend.svg')}\r\n                alt=\"Legend\"\r\n              />\r\n            </p>\r\n          </div>\r\n        }\r\n        graph={\r\n          <PieChart\r\n            fullGraph={true}\r\n            settings={LargestRecentEditsSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name=\"Largest Recent Edits\"\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default LargestRecentEdits;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport PieChart from '../Components/PieChart';\r\nimport { getRecentEditsWithSize } from '../Backend/APIWrapper';\r\n\r\nexport const RecentEditSizeSettings = {\r\n  getData: async () => {\r\n    const data = await getRecentEditsWithSize();\r\n    data.forEach(item => {\r\n      item.id = item.revid.toString();\r\n      item.value = Math.abs(item.newlen - item.oldlen);\r\n      item.label = item.title;\r\n    });\r\n    return data;\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async () => {\r\n    const data = await getRecentEditsWithSize();\r\n    data.forEach(item => {\r\n      item.value = Math.abs(item.newlen - item.oldlen);\r\n      item.id = item.revid.toString();\r\n      item.label = item.title;\r\n    });\r\n    return data;\r\n  },\r\n  colorBy: 'type',\r\n  colors: 'set2',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\r\n  },\r\n};\r\n\r\nclass RecentEditSize extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    };\r\n  }\r\n\r\n  handlePause = event => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation={\r\n          <div>\r\n            {'The size of the last 30 edits. The number in each of the sections represents the size of the edit in bytes.' +\r\n              ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\r\n            <p>\r\n              <img\r\n                className=\"legend\"\r\n                src={require('../legend.svg')}\r\n                alt=\"Legend\"\r\n              />\r\n            </p>\r\n          </div>\r\n        }\r\n        graph={\r\n          <PieChart\r\n            fullGraph={true}\r\n            settings={RecentEditSizeSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name=\"Recent Edit Size\"\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default RecentEditSize;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport PieChart from '../Components/PieChart';\r\nimport { getRecentEditsWithFlags } from '../Backend/APIWrapper';\r\n\r\nexport const ProportionFlaggedSettings = {\r\n  getData: getRecentEditsWithFlags,\r\n  refreshTime: 2000,\r\n  refreshMethod: getRecentEditsWithFlags,\r\n  //colorFunction: d => d.color,\r\n  colorBy: 'type',\r\n  colors: 'set1',\r\n  name: 'Proportion Of Edits Flagged',\r\n};\r\n\r\nclass ProportionFlagged extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    };\r\n  }\r\n\r\n  handlePause = event => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        explanation=\"The proportion of the last 50 edits that was flagged as potentially damaging.\"\r\n        graph={\r\n          <PieChart\r\n            fullGraph={true}\r\n            settings={ProportionFlaggedSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name={ProportionFlaggedSettings.name}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default ProportionFlagged;\r\n","import React, { Component, useEffect } from 'react';\r\nimport { ResponsivePie } from '@nivo/pie';\r\n\r\nclass PieChartRefresh extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n      data: null,\r\n      fullGraph: this.props.fullGraph,\r\n      value: this.props.value,\r\n      initialCall: true,\r\n      dataFinished: false,\r\n      changeValue: '',\r\n      // paused: false,\r\n    };\r\n\r\n    // if (this.state.value) {\r\n    //   this.loadData();\r\n    // }\r\n    // this.togglePause = this.togglePause.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.refreshInterval = setInterval(async () => {\r\n      if (!this.props.loading) {\r\n        this.setState({\r\n          loaded: false,\r\n          initialCall: true,\r\n          dataFinished: false,\r\n        });\r\n      }\r\n      // this.setState({ value: this.props.value });\r\n      if (this.state.changeValue != this.props.value) {\r\n        console.log('HeyaBuddyYA');\r\n        this.setState({\r\n          changeValue: this.props.value,\r\n          value: this.props.value,\r\n          dataFinished: false,\r\n          initialCall: true,\r\n        });\r\n      }\r\n      if (\r\n        this.state.initialCall &&\r\n        this.state.value &&\r\n        !this.state.dataFinished\r\n      ) {\r\n        this.setState({ changeValue: this.state.value });\r\n        await this.refresh();\r\n      } else if (\r\n        !this.state.initialCall &&\r\n        this.state.value &&\r\n        !this.state.dataFinished\r\n      ) {\r\n        await this.refreshCont();\r\n      }\r\n    }, this.props.settings.refreshTime);\r\n  }\r\n\r\n  tooltip = function(click, url) {\r\n    return (\r\n      <div className=\"iframe-container\">\r\n        <iframe\r\n          src={url + click.label}\r\n          className=\"iframe\"\r\n          title=\"tooltip-option-2\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  loadData = () => {\r\n    const getData = this.props.settings.getData.bind(this);\r\n    getData(this.props.value).then(data => {\r\n      if (data != -1) {\r\n        console.log(data);\r\n        const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\r\n        this.setState({\r\n          loaded: true,\r\n          data: smlData,\r\n        });\r\n      } else {\r\n        console.log('Error No Data');\r\n        this.setState({ dataFinished: true });\r\n      }\r\n    });\r\n  };\r\n\r\n  loadDataCont = () => {\r\n    const getData = this.props.settings.refreshMethod.bind(this);\r\n    getData(this.props.value).then(data => {\r\n      if (data != -1) {\r\n        console.log(data);\r\n        const smlData = data.slice(0, this.state.fullGraph ? 30 : 10);\r\n        this.setState({\r\n          loaded: true,\r\n          data: smlData,\r\n        });\r\n      } else {\r\n        console.log('Error No Data');\r\n        this.setState({\r\n          dataFinished: true,\r\n          // value: '',\r\n          initialCall: true,\r\n          // loaded: false,\r\n          // data: null,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  refresh = async () => {\r\n    this.setState({ initialCall: false });\r\n    this.loadData();\r\n  };\r\n\r\n  refreshCont = async () => {\r\n    this.loadDataCont();\r\n  };\r\n\r\n  // togglePause() {\r\n  //   this.state.paused = !this.state.paused;\r\n  // }\r\n\r\n  render() {\r\n    let margin = {};\r\n    let label = null;\r\n    let classname = '';\r\n    let onClick = () => {};\r\n    let tooltip = null;\r\n    let colors = { scheme: this.props.settings.colors };\r\n    if (this.props.settings.colorFunction) {\r\n      colors = this.props.settings.colorFunction;\r\n    }\r\n    if (this.state.fullGraph) {\r\n      margin = { top: 30, right: 30, bottom: 30, left: 30 };\r\n      label = true;\r\n      classname = 'full-graph-container';\r\n\r\n      if (this.props.settings.onClick) {\r\n        onClick = this.props.settings.onClick;\r\n      }\r\n      if (this.props.settings.tooltip) {\r\n        tooltip = this.props.settings.tooltip.bind(this);\r\n      }\r\n    } else {\r\n      margin = { top: 0, right: 0, bottom: 0, left: 0 };\r\n      label = false;\r\n      classname = 'Graph-Container-Card';\r\n    }\r\n    return (\r\n      <div>\r\n        {!this.state.loaded ? (\r\n          'Loading...'\r\n        ) : (\r\n          <div className={classname}>\r\n            <ResponsivePie\r\n              data={this.state.data}\r\n              margin={margin}\r\n              innerRadius={0.4}\r\n              padAngle={0}\r\n              cornerRadius={0}\r\n              colors={colors}\r\n              enableRadialLabels={label}\r\n              radialLabel=\"label\"\r\n              radialLabelsSkipAngle={10}\r\n              radialLabelsTextXOffset={6}\r\n              radialLabelsTextColor=\"#333333\"\r\n              radialLabelsLinkOffset={0}\r\n              radialLabelsLinkDiagonalLength={16}\r\n              radialLabelsLinkHorizontalLength={24}\r\n              radialLabelsLinkStrokeWidth={1}\r\n              radialLabelsLinkColor={{ from: 'color' }}\r\n              enableSlicesLabels={label}\r\n              slicesLabelsSkipAngle={10}\r\n              slicesLabelsTextColor=\"#333333\"\r\n              animate={true}\r\n              motionStiffness={90}\r\n              motionDamping={15}\r\n              // defs={[\r\n              //   {\r\n              //     id: 'dots',\r\n              //     type: 'patternDots',\r\n              //     background: 'inherit',\r\n              //     color: 'rgba(255, 255, 255, 0.3)',\r\n              //     size: 4,\r\n              //     padding: 1,\r\n              //     stagger: true,\r\n              //   },\r\n              //   {\r\n              //     id: 'lines',\r\n              //     type: 'patternLines',\r\n              //     background: 'inherit',\r\n              //     color: 'rgba(255, 255, 255, 0.3)',\r\n              //     rotation: -45,\r\n              //     lineWidth: 6,\r\n              //     spacing: 10,\r\n              //   },\r\n              // ]}\r\n              isInteractive={this.state.fullGraph}\r\n              onClick={onClick}\r\n              tooltip={tooltip}\r\n              defs={[\r\n                {\r\n                  id: 'lines',\r\n                  type: 'patternLines',\r\n                  background: 'inherit',\r\n                  color: 'rgba(255, 255, 255, 0.4)',\r\n                  rotation: -45,\r\n                  lineWidth: 6,\r\n                  spacing: 10,\r\n                },\r\n              ]}\r\n              fill={[\r\n                {\r\n                  match: {\r\n                    type: 'edit',\r\n                  },\r\n                  id: 'lines',\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PieChartRefresh;\r\n","const WIKIDATA_ENDPOINT = 'https://www.wikidata.org/w/api.php';\r\nconst WIKIPEDIA_ENDPOINT_SEARCH = 'https://en.wikipedia.org/w/api.php';\r\nconst DESCRIPTION_REST_API =\r\n  'https://en.wikipedia.org/api/rest_v1/page/summary/';\r\nconst DBPEDIA_SPOTLIGHT_API = 'api.dbpedia-spotlight.org/en/annotate';\r\nconst NUMBER_OF_RETRIES = 5;\r\nconst fetch = require('node-fetch');\r\nconst XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;\r\n\r\n/*\r\n  userSearch: gets a json list of the 20 most recent contributions made my a user, along with a key to get the next 20\r\n  '' - String\r\n  # - number\r\n  Json format:\r\n  {\r\n    userid: #,\r\n    user: '',\r\n    pageid: #,\r\n    revid: #,\r\n    parentid: #,\r\n    ns: #,\r\n    title: '',\r\n    timestamp: 'YYYY-MM-DDTHH:MM:SSZ',\r\n    comment: '',\r\n    size: #\r\n  }\r\n  @params {name} - User name\r\n  @returns {Promise, Promise} - first element contains a promise of a json list of contributions made by the user\r\n                                second element contains a key to get the next 20 contributions made by the user, -1 if end of list\r\n*/\r\nexport const userSearch = async name => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'usercontribs',\r\n    uclimit: 20,\r\n    ucuser: name,\r\n  };\r\n  let item = await wikipediaQuery(\r\n    WIKIPEDIA_ENDPOINT_SEARCH,\r\n    params,\r\n    NUMBER_OF_RETRIES\r\n  ).then(result =>\r\n    userContributionsSeperator(result.query.usercontribs, result)\r\n  );\r\n  return item;\r\n};\r\n\r\n/*\r\n  userSearchCont: gets a continued json list of the 20 most recent contributions made my a user, along with a key to get the next 20\r\n  '' - String\r\n  # - number\r\n  Json format:\r\n  {\r\n    userid: #,\r\n    user: '',\r\n    pageid: #,\r\n    revid: #,\r\n    parentid: #,\r\n    ns: #,\r\n    title: '',\r\n    timestamp: 'YYYY-MM-DDTHH:MM:SSZ',\r\n    comment: '',\r\n    size: #\r\n  }\r\n  @params {name, cont} - User name\r\n                         continue key\r\n  @returns {Promise, Promise} - first element contains a promise of a json list of contributions made by the user\r\n                                second element contains a key to get the next 20 contributions made by the user, -1 if end of list\r\n*/\r\nexport const userSearchCont = async (name, cont) => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'usercontribs',\r\n    uclimit: 20,\r\n    ucuser: name,\r\n    uccontinue: cont,\r\n  };\r\n  const item = await wikipediaQuery(\r\n    WIKIPEDIA_ENDPOINT_SEARCH,\r\n    params,\r\n    NUMBER_OF_RETRIES\r\n  ).then(result =>\r\n    userContributionsSeperator(result.query.usercontribs, result)\r\n  );\r\n  return item;\r\n};\r\n\r\n/*\r\n  pageRevisionsSearch: gets a json list of the last 20 page edits, along with a key to get to the next 20\r\n  '' - String\r\n  # - number\r\n  Json format:\r\n  {\r\n    revid: #,\r\n    parentid: #,\r\n    user: '',\r\n    anon: '',\r\n    timestamp: 'YYYY-MM-DDTHH:MM:SSZ',\r\n    comment: ''\r\n  }\r\n  @params {searchItem} - page query\r\n  @returns {Promise, Promise} - first element contains a promise of a json list of page edits\r\n                                second element contains a key to get the next 20 page edits, -1 if end of list\r\n*/\r\nexport const pageRevisionsSearch = async searchitem => {\r\n  let item = await getWikibaseItem(searchitem);\r\n  if (item === -1) {\r\n    return -1;\r\n  }\r\n  item = await getRevisionsOfPage(item);\r\n  return item;\r\n};\r\n\r\n/*\r\n  pageRevisionsSearchCont: gets a json list of the last 20 page edits, along with a key to get to the next 20\r\n  '' - String\r\n  # - number\r\n  Json format:\r\n  {\r\n    revid: #,\r\n    parentid: #,\r\n    user: '',\r\n    anon: '',\r\n    timestamp: 'YYYY-MM-DDTHH:MM:SSZ',\r\n    comment: ''\r\n  }\r\n  @params {searchItem, cont} - page query\r\n                               continue key\r\n  @returns {Promise, Promise} - first element contains a promise of a json list of page edits\r\n                                second element contains a key to get the next 20 page edits, -1 if end of list\r\n*/\r\nexport const pageRevisionsSearchCont = async (searchitem, cont) => {\r\n  let item = await getWikibaseItem(searchitem);\r\n  if (item === -1) {\r\n    return -1;\r\n  }\r\n  item = await getRevisionsOfPageCont(item, cont);\r\n  return item;\r\n};\r\n\r\n// ~ Helper Functions ---------------------------------------------------------\r\n\r\n/**\r\n * Returns a the response of a query to the Wikidata API endpoint\r\n *\r\n * @param {Object} params - Object of parameters to use when querying\r\n * @param {number} n - Number of times to retry if failure occurs\r\n * @returns {Promise.<Object>}\r\n */\r\nconst wikipediaQuery = async (endpoint, params, n) => {\r\n  try {\r\n    const paramsString = new URLSearchParams(params).toString();\r\n    const url = endpoint + '?' + paramsString + '&origin=*';\r\n    return await fetch(url).then(response => response.json());\r\n  } catch (err) {\r\n    if (n === 1) {\r\n      throw err;\r\n    }\r\n    return setTimeout(wikipediaQuery(endpoint, params, n - 1), 500);\r\n  }\r\n};\r\n\r\n//Helper function to return wikibase_item necessary\r\n//@param {json} - json straight from query\r\n//@returns {promise} returns -1 if it fails to find it and otherwise returns wikibase_item\r\nconst extraResult = async json1 => {\r\n  let temp = -1;\r\n  while (typeof json1[temp] === 'undefined') {\r\n    temp = temp + 1;\r\n  }\r\n  if (json1[temp].hasOwnProperty('pageprops')) {\r\n    return json1[temp].pageprops.wikibase_item;\r\n  }\r\n  return -1;\r\n};\r\n\r\n//Helper function to return revisions\r\n//@param {json} - json straight from query\r\n//@returns {promise} returns -1 if it fails to find it and otherwise returns revisions\r\nconst getRevisions = async json1 => {\r\n  let temp = 0;\r\n  while (typeof json1[temp] === 'undefined') {\r\n    temp = temp + 1;\r\n  }\r\n  if (json1[temp].hasOwnProperty('revisions')) {\r\n    return json1[temp].revisions;\r\n  }\r\n  return -1;\r\n};\r\n\r\n//Helper function to return revisions\r\n//@param {json} - json straight from query\r\n//@returns {promise} returns -1 if it fails to find it and otherwise returns revisions\r\nconst userContributionsSeperator = async (usercontribs, result) => {\r\n  if (result.hasOwnProperty('continue')) {\r\n    return [usercontribs, result['continue'].uccontinue];\r\n  } else {\r\n    return [usercontribs, -1];\r\n  }\r\n};\r\n\r\n//Grabs wikibase_id from a search\r\n//@param {string} searchItem - Item to search Qid for\r\n//@returns {Object} -1 or QID\r\nconst getWikibaseItem = async searchItem => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    prop: 'pageprops',\r\n    titles: searchItem,\r\n  };\r\n  return await wikipediaQuery(\r\n    WIKIPEDIA_ENDPOINT_SEARCH,\r\n    params,\r\n    NUMBER_OF_RETRIES\r\n  ).then(result => extraResult(result.query.pages));\r\n};\r\n//Grabs revisions from qid, past 20 revisions only due to limitations from api\r\n// @param {string} qid - id to search revisions for\r\n// @returns {Object} -1 or revisions in json\r\nconst getRevisionsOfPage = async qid => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    prop: 'revisions',\r\n    titles: qid,\r\n    rvprops: 'ids|timestamp|flags|comment|user',\r\n    rvlimit: 20,\r\n  };\r\n  const item = await wikipediaQuery(\r\n    WIKIDATA_ENDPOINT,\r\n    params,\r\n    NUMBER_OF_RETRIES\r\n  ).then(result => getRevisionsHelper(result.query.pages, result));\r\n  return item;\r\n};\r\n\r\n//Grabs revisions from qid, past 20 revisions only due to limitations from api\r\n// @param {string} qid - id to search revisions for\r\n// @param {string} cont - key to get next results\r\n// @returns {Object} -1 or revisions in json\r\nconst getRevisionsOfPageCont = async (qid, cont) => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    prop: 'revisions',\r\n    titles: qid,\r\n    rvprops: 'ids|timestamp|flags|comment|user',\r\n    rvlimit: 20,\r\n    rvcontinue: cont,\r\n  };\r\n  const item = await wikipediaQuery(\r\n    WIKIDATA_ENDPOINT,\r\n    params,\r\n    NUMBER_OF_RETRIES\r\n  ).then(result => getRevisionsHelper(result.query.pages, result));\r\n  return item;\r\n};\r\n\r\nconst getRevisionsHelper = async (pages, result) => {\r\n  if (result.hasOwnProperty('continue')) {\r\n    return [getRevisions(pages), result['continue'].rvcontinue];\r\n  } else {\r\n    return [getRevisions(pages), -1];\r\n  }\r\n};\r\n\r\n/*\r\n  getPrefixSearch: gets a prefix search of 10 items from an input string\r\n  '' - String\r\n  # - number\r\n  Json nested inside query.prefixsearch\r\n  Json format:\r\n  {\r\n    ns: #,\r\n    title: '',\r\n    pageid: #\r\n  }\r\n  @params {searchItem} - prefix search item\r\n  @returns {Promise} - promise of 10 prefix search results\r\n*/\r\nexport const getPrefixSearch = async searchItem => {\r\n  const params = {\r\n    action: 'query',\r\n    format: 'json',\r\n    list: 'prefixsearch',\r\n    pssearch: searchItem,\r\n  };\r\n  const item = await wikipediaQuery(\r\n    WIKIPEDIA_ENDPOINT_SEARCH,\r\n    params,\r\n    NUMBER_OF_RETRIES\r\n  ).then(result => {\r\n    return result;\r\n  });\r\n  return item;\r\n};\r\n\r\n/*\r\n  getPageDescription: gets a short and long description of page\r\n  @params {searchItem} - page search item\r\n  @returns {Promise, Promise} - first item contains a short description of the page\r\n                                second item contains a long description of the page\r\n*/\r\n\r\nexport const getPageDescription = async searchItem => {\r\n  const item = await wikipediaQuery(\r\n    DESCRIPTION_REST_API + searchItem,\r\n    NUMBER_OF_RETRIES\r\n  ).then(result => [result.description, result.extract]);\r\n  console.log(item);\r\n  return item;\r\n};\r\n\r\n/*\r\n  httpGet - helper function, similar to wikipediaQuery for getHyperlinkedDescription function\r\n  @params {endpoint, params, n} - api endpoint link\r\n                                  api parameters\r\n                                  number of retries\r\n  @returns {response} - html hypertext linked string\r\n*/\r\nconst httpGet = async (endpoint, params, n) => {\r\n  try {\r\n    const paramsString = new URLSearchParams(params).toString();\r\n    const url = endpoint + '?' + paramsString + '&origin=*';\r\n    const xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.open('GET', url, false);\r\n    xmlHttp.send(null);\r\n    return xmlHttp.responseText;\r\n  } catch (err) {\r\n    if (n === 1) {\r\n      throw err;\r\n    }\r\n    return setTimeout(httpGet(endpoint, params, n - 1), 500);\r\n  }\r\n};\r\n\r\n/*\r\n  getHyperlinkedDescription: using dbpedia spotlight, an input text is converted into a hyperlinked html text document\r\n  @params {text} - input text string to be converted\r\n  @returns {Promise} - output html file of the hyperlinked text\r\n*/\r\nexport const getHyperlinkedDescription = async text => {\r\n  const params = {\r\n    text: text,\r\n  };\r\n  const item = await httpGet(DBPEDIA_SPOTLIGHT_API, params, 1).then(\r\n    response => response\r\n  );\r\n  return item;\r\n};\r\n\r\n// test\r\n//Tahmid02016\r\n// const item = userSearch('Tahmid02016').then(str => {\r\n//   if (str[0]) {\r\n//     console.log(str[0]);\r\n//   }\r\n// });\r\n\r\n// let key = 0;\r\n// let i = 0;\r\n// const value = 'Albert Einstein';\r\n// const inter = setInterval(function() {\r\n//   if (i == 0) {\r\n//     const item = pageRevisionsSearch(value).then(str => {\r\n//       str[0].then(list => {\r\n//         console.log('first-call: ' + i);\r\n//         // console.log(list);\r\n//         i = i + 1;\r\n//       });\r\n//       console.log('Key ' + str[1]);\r\n//       key = str[1];\r\n//     });\r\n//   } else if (i > 0 && key != -1) {\r\n//     const item = pageRevisionsSearchCont(value, key).then(str => {\r\n//       str[0].then(list => {\r\n//         console.log('calls: ' + i);\r\n//         // console.log(list);\r\n//       });\r\n//       console.log('Key ' + str[1]);\r\n//       key = str[1];\r\n//     });\r\n//   } else if (key == -1) {\r\n//     console.log('FINISHED');\r\n//     clearInterval(inter);\r\n//   }\r\n// }, 2000);\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport PieChartRefresh from '../Components/PieChartRefresh';\r\nimport {\r\n  pageRevisionsSearch,\r\n  pageRevisionsSearchCont,\r\n} from '../Backend/searchingFunctionality';\r\nimport { getRecentActiveUsers } from '../Backend/APIWrapper';\r\n\r\nexport const NumberOfChangesSettings = {\r\n  getData: async function(searchValue) {\r\n    // console.log('here ' + searchValue);\r\n\r\n    if (searchValue) {\r\n      const data = await pageRevisionsSearch(searchValue).then(str => {\r\n        str[0].then(value => {\r\n          console.log('first-call ' + searchValue);\r\n          console.log('value over number: ');\r\n          console.log(value);\r\n          this.setState({ values: value });\r\n        });\r\n        this.setState({ keyValue: str[1] });\r\n      });\r\n      const myMap = new Map();\r\n      this.state.values.forEach(item => {\r\n        if (!myMap.has(item.user)) {\r\n          myMap.set(item.user, item);\r\n        }\r\n      });\r\n      for (const item of myMap.values()) {\r\n        item.id = item.revid;\r\n        item.label = item.user;\r\n        item.value = this.state.values.reduce(function(s, o) {\r\n          if (o.user === item.user) {\r\n            s++;\r\n          }\r\n          return s;\r\n        }, 0);\r\n      }\r\n      const array = [myMap.size];\r\n      let j = 0;\r\n      for (const item of myMap.values()) {\r\n        array[j++] = item;\r\n      }\r\n      this.setState({ singleArray: array });\r\n      return array;\r\n    }\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async function(searchValue) {\r\n    // console.log('Refresh ' + searchValue);\r\n    if (this.state.keyValue != -1) {\r\n      const data = await pageRevisionsSearchCont(\r\n        searchValue,\r\n        this.state.keyValue\r\n      ).then(str => {\r\n        str[0].then(value => {\r\n          console.log(value);\r\n          console.log('cont-call: ');\r\n          this.setState({ values: this.state.values.concat(value) });\r\n        });\r\n        this.setState({ keyValue: str[1] });\r\n      });\r\n      const myMap = new Map();\r\n      this.state.values.forEach(item => {\r\n        if (!myMap.has(item.user)) {\r\n          myMap.set(item.user, item);\r\n        }\r\n      });\r\n      for (const item of myMap.values()) {\r\n        item.id = item.revid;\r\n        item.label = item.user;\r\n        item.value = this.state.values.reduce(function(s, o) {\r\n          if (o.user === item.user) {\r\n            s++;\r\n          }\r\n          return s;\r\n        }, 0);\r\n      }\r\n      const array = [myMap.size];\r\n      let j = 0;\r\n      for (const item of myMap.values()) {\r\n        array[j++] = item;\r\n      }\r\n      this.setState({ singleArray: array });\r\n      return array;\r\n    }\r\n    return -1;\r\n  },\r\n  colorBy: 'type',\r\n  colors: 'set2',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/User:' + click.label);\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:');\r\n  },\r\n};\r\n\r\nclass NumberOfChanges extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n      value: '',\r\n      key: '',\r\n      recentChanges: [],\r\n      loading: false,\r\n      fullGraph: this.props.fullGraph,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  onclick(search) {\r\n    this.setState({ value: search });\r\n  }\r\n\r\n  handlePause = () => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.fullGraph) {\r\n      return (\r\n        <GraphPage\r\n          handlePause={this.handlePause}\r\n          paused={this.state.paused}\r\n          explanation={\r\n            <div>\r\n              {'The number of changes made by different users on this page.' +\r\n                ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\r\n              <p>\r\n                <img\r\n                  className=\"legend\"\r\n                  src={require('../legend.svg')}\r\n                  alt=\"Legend\"\r\n                />\r\n              </p>\r\n            </div>\r\n          }\r\n          graph={\r\n            <PieChartRefresh\r\n              fullGraph={this.state.fullGraph}\r\n              settings={NumberOfChangesSettings}\r\n              paused={this.state.paused}\r\n              recentChanges={this.state.recentChanges}\r\n              value={this.state.value}\r\n              loading={this.state.loading}\r\n            />\r\n          }\r\n          name=\"Number of Changes\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <PieChartRefresh\r\n          fullGraph={this.state.fullGraph}\r\n          settings={NumberOfChangesSettings}\r\n          paused={this.state.paused}\r\n          recentChanges={this.state.recentChanges}\r\n          value={this.state.value}\r\n          loading={this.state.loading}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default NumberOfChanges;\r\n","import React, { Component } from 'react';\r\nimport Navbar from '../Components/Navbar';\r\nimport GraphCard from '../Components/GraphCard';\r\nimport FeedData from '../Components/Feed';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\r\nimport PieChart from '../Components/PieChart';\r\nimport { MostActiveUsersGraphSettings } from './MostActiveUsers';\r\nimport { MostActivePagesGraphSettings } from './MostActivePages';\r\nimport { LargestRecentEditsSettings } from './LargestRecentEdits';\r\nimport { RecentEditSizeSettings } from './RecentEditSize';\r\nimport { ProportionFlaggedSettings } from './ProportionFlagged';\r\n\r\nimport { NumberOfChangesSettings } from './NumberOfChanges';\r\n\r\n//This is the dashboard page, it shows the feed and all of our graphs\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"HomePage\">\r\n        <Navbar />\r\n        <div className=\"row justify-content-left text-dark\">\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\r\n            <div className=\"feedContainer\">\r\n              <FeedData />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\r\n            <div className=\"deck-container\">\r\n              <CardDeck className=\"deck\">\r\n                <GraphCard\r\n                  title=\"Recent Edit Size\"\r\n                  pageLink=\"recent-edit-size\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <PieChart\r\n                      paused={true}\r\n                      fullGraph={false}\r\n                      settings={RecentEditSizeSettings}\r\n                    />\r\n                  }\r\n                />\r\n                <GraphCard\r\n                  title=\"Most Active Users\"\r\n                  pageLink=\"most-active-users\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <SimpleBarGraph\r\n                      paused={false}\r\n                      fullGraph={false}\r\n                      settings={MostActiveUsersGraphSettings}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n              <CardDeck className=\"deck\">\r\n                <GraphCard\r\n                  title=\"Most Active Pages\"\r\n                  pageLink=\"most-active-pages\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <SimpleBarGraph\r\n                      paused={false}\r\n                      fullGraph={false}\r\n                      settings={MostActivePagesGraphSettings}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n\r\n              <CardDeck className=\"deck\">\r\n                <GraphCard\r\n                  title=\"Largest Recent Edits\"\r\n                  pageLink=\"largest-recent-edits\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <PieChart\r\n                      paused={true}\r\n                      fullGraph={false}\r\n                      settings={LargestRecentEditsSettings}\r\n                    />\r\n                  }\r\n                />\r\n                <GraphCard\r\n                  title={ProportionFlaggedSettings.name}\r\n                  pageLink=\"proportion-flagged\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <PieChart\r\n                      paused={false}\r\n                      fullGraph={false}\r\n                      settings={ProportionFlaggedSettings}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport SimpleBarGraph from '../Components/SimpleBarGraph';\r\nimport { getMostEditsUsers } from '../Backend/APIWrapper';\r\n\r\nexport const UsersByMostEditsGraphSettings = {\r\n  getData: async function() {\r\n    return await getMostEditsUsers();\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: function() {\r\n    this.loadData();\r\n  },\r\n  keys: ['editcount'],\r\n  index: 'name',\r\n  xAxis: 'users',\r\n  yAxis: 'edit count',\r\n  colors: 'paired',\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/User:');\r\n  },\r\n};\r\n\r\nclass UsersByMostEditsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n    };\r\n  }\r\n\r\n  handlePause = event => {\r\n    this.setState({ paused: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <GraphPage\r\n        handlePause={this.handlePause}\r\n        paused={this.state.paused}\r\n        graph={\r\n          <SimpleBarGraph\r\n            fullGraph={true}\r\n            settings={UsersByMostEditsGraphSettings}\r\n            paused={this.state.paused}\r\n          />\r\n        }\r\n        name=\"Users By Most Edits\"\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default UsersByMostEditsPage;\r\n","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from '../Components/Navbar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nclass AboutPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n      studentList: [\r\n        {\r\n          firstName: 'Jeremie',\r\n          lastName: 'Sajeev Daniel',\r\n          year: '3rd Year ICS',\r\n          team: 'Backend Team',\r\n          github: 'https://github.com/JeremieSD',\r\n        },\r\n        {\r\n          firstName: 'Conor',\r\n          lastName: \"O'Neill\",\r\n          year: '3rd Year ICS',\r\n          team: 'Frontend Team',\r\n          github: 'https://github.com/conoro24',\r\n        },\r\n        {\r\n          firstName: 'Matteo',\r\n          lastName: 'McGuinness',\r\n          year: '2nd Year ICS',\r\n          team: 'Frontend Team',\r\n          github: 'https://github.com/m477301',\r\n        },\r\n        {\r\n          firstName: 'Emmet',\r\n          lastName: 'Morrin',\r\n          year: '2nd Year ICS',\r\n          team: 'Backend Team',\r\n          github: 'https://github.com/Unimuspanet',\r\n        },\r\n        {\r\n          firstName: 'Aoife',\r\n          lastName: 'Khan',\r\n          year: '2rd Year CSB',\r\n          team: 'Frontend Team',\r\n          github: 'https://github.com/aoife-K',\r\n        },\r\n        {\r\n          firstName: 'Xiaolei',\r\n          lastName: 'Zhang',\r\n          year: '2nd Year ICS',\r\n          team: 'Frontend Team',\r\n          github: 'https://github.com/Xiaoleiii',\r\n        },\r\n      ],\r\n      currentStudent: true,\r\n    };\r\n    this.setData = this.setData.bind(this);\r\n  }\r\n  setData = () => {\r\n    let list = [];\r\n    if (this.state.currentStudent) {\r\n      list = [\r\n        {\r\n          firstName: 'Brian',\r\n          lastName: 'Lynch',\r\n          year: '3rd Year CS',\r\n          team: 'Frontend Team',\r\n          github: 'https://github.com/brianlunch',\r\n        },\r\n        {\r\n          firstName: 'Isobel',\r\n          lastName: 'Mahon',\r\n          year: '3rd Year CS',\r\n          team: 'Frontend Team',\r\n          github: 'https://github.com/isobelm',\r\n        },\r\n        {\r\n          firstName: 'Odhran',\r\n          lastName: 'Mullen',\r\n          year: '3rd Year CSB',\r\n          team: 'Backend Team',\r\n          github: 'https://github.com/omullan',\r\n        },\r\n        {\r\n          firstName: 'Alex',\r\n          lastName: 'Mahon',\r\n          year: '2nd Year CS',\r\n          team: 'Frontend Team',\r\n          github: 'https://github.com/Juuiko',\r\n        },\r\n        {\r\n          firstName: 'Flora',\r\n          lastName: 'Molnar',\r\n          year: '2nd Year CSB',\r\n          team: 'Frontend Team',\r\n          github: 'https://github.com/flora-m',\r\n        },\r\n        {\r\n          firstName: 'Lexes',\r\n          lastName: 'Mantiquilla',\r\n          year: '2nd Year CS',\r\n          team: 'Backend Team',\r\n          github: 'https://github.com/lexesjan',\r\n        },\r\n      ];\r\n    } else {\r\n      list = [\r\n        {\r\n          firstName: 'Jeremie',\r\n          lastName: 'Sajeev Daniel',\r\n          year: '3rd Year ICS',\r\n          team: 'Backend Team',\r\n          github: 'https://github.com/JeremieSD',\r\n        },\r\n        {\r\n          firstName: 'Conor',\r\n          lastName: \"O'Neill\",\r\n          year: '3rd Year ICS',\r\n          team: 'Frontend Team',\r\n          github: 'https://github.com/conoro24',\r\n        },\r\n        {\r\n          firstName: 'Matteo',\r\n          lastName: 'McGuinness',\r\n          year: '2nd Year ICS',\r\n          team: 'Frontend Team',\r\n          github: 'https://github.com/m477301',\r\n        },\r\n        {\r\n          firstName: 'Emmet',\r\n          lastName: 'Morrin',\r\n          year: '2nd Year ICS',\r\n          team: 'Backend Team',\r\n          github: 'https://github.com/Unimuspanet',\r\n        },\r\n        {\r\n          firstName: 'Aoife',\r\n          lastName: 'Khan',\r\n          year: '2nd Year CSB',\r\n          team: 'Frontend Team',\r\n          github: 'https://github.com/aoife-K',\r\n        },\r\n        {\r\n          firstName: 'Xiaolei',\r\n          lastName: 'Zhang',\r\n          year: '2nd Year ICS',\r\n          team: 'Frontend Team',\r\n          github: 'https://github.com/Xiaoleiii',\r\n        },\r\n      ];\r\n    }\r\n    this.setState({\r\n      currentStudent: !this.state.currentStudent,\r\n      studentList: list,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"aboutPageContainer\">\r\n        <Navbar history={this.state.history} />\r\n        <div className=\" text-left\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6 col-sm-12  aboutPageContent\">\r\n              <div className=\"explainContainer text-left\">\r\n                <h3 className=\"text-blue\">Why we made our project</h3>\r\n                <p>\r\n                  We are a group of Computer Science students studying in\r\n                  Trinity College Dublin. We undertake a module in which we are\r\n                  given real world projects from a variety of individuals,\r\n                  researchers and businesses.\r\n                </p>\r\n                <p>\r\n                  Our clients were Fabrizio and Damien who work in the Trinity\r\n                  ADAPT research center and they tasked us to create a website\r\n                  that will visualise various changes to Wikidata in\r\n                  quasi-real-time. Its targeted users are researchers and should\r\n                  make it easier to identify spam and incorrect or malicious\r\n                  edits to Wikidata.\r\n                </p>\r\n              </div>\r\n              <br />\r\n              <div className=\" licenseContainer text-left\">\r\n                <h3 className=\"text-blue\">Licensing</h3>\r\n                <p>\r\n                  We have insured all libraries and all project dependencies\r\n                  licenses cover our web apps intended use.\r\n                </p>\r\n                <p>\r\n                  We have decided to use an{' '}\r\n                  <a href=\"https://opensource.org/licenses/MIT\">MIT license</a>{' '}\r\n                  for this project.\r\n                </p>\r\n                <p>\r\n                  More in depth information along with the projects source code\r\n                  can be found on the projects{' '}\r\n                  <a href=\"https://github.com/isobelm/Software-Engineering\">\r\n                    Github.\r\n                  </a>{' '}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 col-sm-12 profiles\">\r\n              <div className=\"client\">\r\n                <h3 className=\"text-red\">Clients</h3>\r\n                <div className=\"card-deck\">\r\n                  <div className=\"card card-profile\">\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title text-center \">Damien Graux</h5>\r\n                      <div className=\"text-center\">\r\n                        <a\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"GH aBlack\"\r\n                          href=\"https://dgraux.github.io/\"\r\n                        >\r\n                          <FontAwesomeIcon icon={faLink} />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card card-profile\">\r\n                    <div className=\"card-body\">\r\n                      <h5 className=\"card-title text-center\">\r\n                        Fabrizio Orlandi\r\n                      </h5>\r\n                      <div className=\"text-center\">\r\n                        <a\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"GH aBlack\"\r\n                          href=\"https://www.scss.tcd.ie/personnel/orlandif\"\r\n                        >\r\n                          <FontAwesomeIcon icon={faLink} />\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <br />\r\n              <div className=\"text-title\">\r\n                <h3 className=\"text-red\">Students</h3>\r\n                <button\r\n                  className=\"text-button text-title-button\"\r\n                  onClick={this.setData}\r\n                >\r\n                  {this.state.currentStudent\r\n                    ? 'see previous team'\r\n                    : 'see present team'}\r\n                </button>\r\n              </div>\r\n              <div className=\"card-deck  text-center\">\r\n                {this.state.studentList.slice(0, 3).map(function(item, key) {\r\n                  return (\r\n                    <div className=\"card card-profile\" key={key}>\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title text-center\">\r\n                          {item.firstName}\r\n                          <br /> {item.lastName}\r\n                        </h5>\r\n                        <p className=\"card-text\">\r\n                          <b>{item.year}</b>\r\n                          <br />\r\n                          {item.team}\r\n                        </p>\r\n                        <div className=\"text-center\">\r\n                          <a\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"GH aBlack\"\r\n                            href={item.github}\r\n                          >\r\n                            <FontAwesomeIcon icon={faGithub} />\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n              <div className=\"card-deck  text-center\">\r\n                {this.state.studentList.slice(3, 6).map(function(item, key) {\r\n                  return (\r\n                    <div className=\"card card-profile\" key={key}>\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title text-center\">\r\n                          {item.firstName}\r\n                          <br /> {item.lastName}\r\n                        </h5>\r\n                        <p className=\"card-text\">\r\n                          <b>{item.year}</b>\r\n                          <br />\r\n                          {item.team}\r\n                        </p>\r\n                        <div className=\"text-center\">\r\n                          <a\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"GH aBlack\"\r\n                            href={item.github}\r\n                          >\r\n                            <FontAwesomeIcon icon={faGithub} />\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutPage;\r\n","import React, { useState, useEffect } from 'react';\r\nconst SearchBar = props => {\r\n  const [search, setSearch] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [pub, setPub] = useState(false);\r\n  // const [results, setResults] = useState(null);\r\n\r\n  const loadData = value => {\r\n    if (props.settings.type == 0) {\r\n      const getData = props.settings.getData.bind(this);\r\n      // console.log('dataToBeFetched ');\r\n      getData(value).then(data => {\r\n        // console.log('data ' + data);\r\n        // setResults(data);\r\n        parseData(data);\r\n      });\r\n    }\r\n  };\r\n\r\n  const parseData = results => {\r\n    // console.log(results);\r\n    const values = results.query.prefixsearch;\r\n    setSuggestions([]);\r\n    values.map(obj => {\r\n      const title = obj.title;\r\n      const id = obj.pageid;\r\n      const sugg = { id, title };\r\n      setSuggestions(suggestions => {\r\n        return [...suggestions, sugg];\r\n      });\r\n    });\r\n    // console.log('finish');\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (search && !pub) {\r\n      // console.log(search);\r\n      loadData(search);\r\n    } else {\r\n      setSuggestions([]);\r\n      setPub(false);\r\n    }\r\n  }, [search]);\r\n\r\n  return (\r\n    <form autoComplete=\"off\" onSubmit={handleSubmit} style={{ height: '100%' }}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n        }}\r\n      >\r\n        <div\r\n          className=\"autoComplete\"\r\n          style={{\r\n            position: 'relative',\r\n            margin: '2rem',\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            id=\"input\"\r\n            name=\"input\"\r\n            value={search}\r\n            onChange={e => setSearch(e.target.value)}\r\n            style={{\r\n              backgroundColor: '#f1f1f1',\r\n              marginRight: '2rem',\r\n              width: '15rem',\r\n              borderStyle: 'solid',\r\n              borderColor: '#d4d4d4',\r\n            }}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              props.searchValue(search);\r\n            }}\r\n            style={{}}\r\n          />\r\n\r\n          {search &&\r\n            suggestions.map(suggestion => {\r\n              const { id, title } = suggestion;\r\n              return (\r\n                <div\r\n                  key={id}\r\n                  className=\"searchListSuggestion\"\r\n                  onClick={e => {\r\n                    setPub(true);\r\n                    setSearch(title);\r\n                    handleSubmit(e);\r\n                  }}\r\n                >\r\n                  {title}\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\r\nimport * as utils from '../Backend/searchingFunctionality';\r\n\r\nclass PageFeed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      recentChanges: [],\r\n      paused: false,\r\n      value: '',\r\n      cont: -1,\r\n      max: true,\r\n    };\r\n    this.togglePause = this.togglePause.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n    setInterval(\r\n      function() {\r\n        if (!this.state.paused && this.state.value && this.state.cont != -1) {\r\n          // console.log('timed task executes');\r\n          const item = utils.userSearch(this.state.value).then(str => {\r\n            if (str[0]) {\r\n              this.setState({\r\n                recentChanges: this.state.recentChanges.concat(str[0]),\r\n                cont: str[1],\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }.bind(this),\r\n      1000\r\n    );\r\n  }\r\n\r\n  onclick(search) {\r\n    // console.log(search);\r\n    this.setState({ value: search });\r\n    const item = utils.userSearch(search).then(str => {\r\n      if (str[0]) {\r\n        this.setState({ recentChanges: str[0], cont: str[1] });\r\n      }\r\n    });\r\n  }\r\n  togglePause() {\r\n    this.state.paused = !this.state.paused;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 className=\"text-blue text-left\">User Search</h3>\r\n        <form className=\"text-left\" onChange={this.togglePause}>\r\n          <label>\r\n            <input type=\"checkbox\" /> Paused\r\n          </label>\r\n        </form>\r\n        <ul className=\"search-list-page-group\">\r\n          {this.state.recentChanges.map((item, index) => (\r\n            <li className=\"list-group-item text-left\" key={index}>\r\n              <div>\r\n                {`Title: ${item.title}`}\r\n                <br />\r\n                {`Comment: ${item.comment}`}\r\n                <br />\r\n                {`Time: ${item.timestamp}`}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageFeed;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport PieChartRefresh from '../Components/PieChartRefresh';\r\nimport { userSearch, userSearchCont } from '../Backend/searchingFunctionality';\r\nimport { getRecentActiveUsers } from '../Backend/APIWrapper';\r\n\r\nexport const NumberOfChangesSettings = {\r\n  getData: async function(searchValue) {\r\n    if (searchValue) {\r\n      const data = await userSearch(searchValue).then(str => {\r\n        if (str[0]) {\r\n          // console.log('first-call ' + searchValue);\r\n          // console.log('value over number: ');\r\n          this.setState({ values: str[0] });\r\n          this.setState({ keyValue: str[1] });\r\n        }\r\n      });\r\n      if (this.state.keyValue != -1) {\r\n        console.log('I am here');\r\n        let myMap = new Map();\r\n        this.state.values.forEach(item => {\r\n          if (!myMap.has(item.title)) {\r\n            myMap.set(item.title, item);\r\n          }\r\n        });\r\n        for (let item of myMap.values()) {\r\n          item.id = item.revid;\r\n          item.label = item.title;\r\n          item.value = this.state.values.reduce(function(s, o) {\r\n            if (o.title === item.title) {\r\n              s++;\r\n            }\r\n            return s;\r\n          }, 0);\r\n        }\r\n        let array = [myMap.size];\r\n        let j = 0;\r\n        for (let item of myMap.values()) {\r\n          array[j++] = item;\r\n        }\r\n        this.setState({ singleArray: array });\r\n        return array;\r\n      }\r\n      return -1;\r\n    }\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async function(searchValue) {\r\n    // console.log('Refresh ' + searchValue);\r\n    if (this.state.keyValue != -1) {\r\n      const data = await userSearchCont(searchValue, this.state.keyValue).then(\r\n        str => {\r\n          if (str[0]) {\r\n            // console.log('cont-call ' + searchValue);\r\n            // console.log('value over number: ');\r\n            this.setState({ values: this.state.values.concat(str[0]) });\r\n            this.setState({ keyValue: str[1] });\r\n          }\r\n        }\r\n      );\r\n      const myMap = new Map();\r\n      this.state.values.forEach(item => {\r\n        if (!myMap.has(item.title)) {\r\n          myMap.set(item.title, item);\r\n        }\r\n      });\r\n      for (const item of myMap.values()) {\r\n        item.id = item.revid;\r\n        item.label = item.title;\r\n        item.value = this.state.values.reduce(function(s, o) {\r\n          if (o.title === item.title) {\r\n            s++;\r\n          }\r\n          return s;\r\n        }, 0);\r\n      }\r\n      const array = [myMap.size];\r\n      let j = 0;\r\n      for (const item of myMap.values()) {\r\n        array[j++] = item;\r\n      }\r\n      this.setState({ singleArray: array });\r\n      return array;\r\n    }\r\n    return -1;\r\n  },\r\n  colorBy: 'type',\r\n  colors: 'set2',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\r\n  },\r\n};\r\n\r\nclass NumberOfChanges extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n      value: '',\r\n      key: '',\r\n      recentChanges: [],\r\n      loading: false,\r\n      fullGraph: this.props.fullGraph,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  onclick(search) {\r\n    this.setState({ value: search });\r\n    if (search) {\r\n      this.setState({ loading: true });\r\n    } else {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  // handlePause = () => {\r\n  //   const paused = this.state.paused;\r\n  //   this.setState({ paused: !paused });\r\n  // };\r\n\r\n  render() {\r\n    if (this.state.fullGraph) {\r\n      return (\r\n        <GraphPage\r\n          handlePause={this.handlePause}\r\n          paused={this.state.paused}\r\n          explanation={\r\n            <div>\r\n              {'The number of changes made by this user on different pages.' +\r\n                ' Hover over a section to get a preview of the page, or click to open the page in a new tab.'}\r\n              <p>\r\n                <img\r\n                  className=\"legend\"\r\n                  src={require('../legend.svg')}\r\n                  alt=\"Legend\"\r\n                />\r\n              </p>\r\n            </div>\r\n          }\r\n          graph={\r\n            <PieChartRefresh\r\n              fullGraph={this.state.fullGraph}\r\n              settings={NumberOfChangesSettings}\r\n              paused={this.state.paused}\r\n              recentChanges={this.state.recentChanges}\r\n              value={this.state.value}\r\n              loading={this.state.loading}\r\n            />\r\n          }\r\n          name=\"Number of Changes\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <PieChartRefresh\r\n          fullGraph={this.state.fullGraph}\r\n          settings={NumberOfChangesSettings}\r\n          paused={this.state.paused}\r\n          recentChanges={this.state.recentChanges}\r\n          value={this.state.value}\r\n          loading={this.state.loading}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default NumberOfChanges;\r\n","import { ResponsiveCalendar } from '@nivo/calendar';\r\nimport React, { Component } from 'react';\r\n\r\nclass CalendarGraph extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n      data: null,\r\n      fullGraph: this.props.fullGraph,\r\n      value: this.props.value,\r\n      initialCall: true,\r\n      dataFinished: false,\r\n      changeValue: '',\r\n    };\r\n\r\n    // if (this.state.value) {\r\n    //   this.loadData();\r\n    // }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshInterval = setInterval(async () => {\r\n      if (!this.props.loading) {\r\n        this.setState({\r\n          loaded: false,\r\n          initialCall: true,\r\n          dataFinished: false,\r\n        });\r\n      }\r\n      // this.setState({ value: this.props.value });\r\n      if (this.state.changeValue != this.props.value) {\r\n        this.setState({\r\n          changeValue: this.props.value,\r\n          value: this.props.value,\r\n          dataFinished: false,\r\n          initialCall: true,\r\n        });\r\n      }\r\n      if (\r\n        this.state.initialCall &&\r\n        this.state.value &&\r\n        !this.state.dataFinished &&\r\n        this.props.loading\r\n      ) {\r\n        this.setState({ changeValue: this.state.value });\r\n        await this.refresh();\r\n      } else if (\r\n        !this.state.initialCall &&\r\n        this.state.value &&\r\n        !this.state.dataFinished &&\r\n        this.props.loading\r\n      ) {\r\n        await this.refreshCont();\r\n      }\r\n    }, this.props.settings.refreshTime);\r\n  }\r\n\r\n  refresh = async () => {\r\n    this.setState({ initialCall: false });\r\n    this.loadData();\r\n  };\r\n\r\n  refreshCont = async () => {\r\n    this.loadDataCont();\r\n  };\r\n\r\n  tooltip = function(click, url) {\r\n    return (\r\n      <div className=\"iframe-container\">\r\n        <iframe\r\n          src={url + click.indexValue}\r\n          className=\"iframe\"\r\n          title=\"tooltip-option-2\"\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  loadData = () => {\r\n    const getData = this.props.settings.getData.bind(this);\r\n    getData(this.props.value).then(data => {\r\n      // console.log(data);\r\n      const smlData = data;\r\n      this.setState({\r\n        loaded: true,\r\n        data: smlData,\r\n      });\r\n    });\r\n  };\r\n\r\n  loadDataCont = () => {\r\n    const getData = this.props.settings.refreshMethod.bind(this);\r\n    getData(this.props.value).then(data => {\r\n      if (data != -1) {\r\n        // console.log('New Data');\r\n        // console.log(data);\r\n        const smlData = data;\r\n        this.setState({\r\n          loaded: true,\r\n          data: smlData,\r\n        });\r\n      } else {\r\n        console.log('Error No Data');\r\n        this.setState({\r\n          dataFinished: true,\r\n          // value: '',\r\n          initialCall: true,\r\n          // loaded: false,\r\n          // data: null,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    let margin = {};\r\n    let classname = '';\r\n    if (this.state.fullGraph) {\r\n      margin = { top: 5, right: 60, bottom: 80, left: 80 };\r\n      classname = 'full-graph-container';\r\n      if (this.props.settings.onClick) {\r\n      }\r\n    } else {\r\n      margin = { top: 0, right: 0, bottom: 0, left: 0 };\r\n      classname = 'Graph-Container-Card';\r\n    }\r\n    return (\r\n      <div className={classname}>\r\n        {this.state.loaded === false ? (\r\n          'Loading...'\r\n        ) : (\r\n          <ResponsiveCalendar\r\n            data={this.state.data}\r\n            from=\"2020-01-01\"\r\n            to=\"2021-07-12\"\r\n            emptyColor=\"#eeeeee\"\r\n            colors={['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']}\r\n            margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\r\n            yearSpacing={40}\r\n            monthBorderColor=\"#ffffff\"\r\n            dayBorderWidth={2}\r\n            dayBorderColor=\"#ffffff\"\r\n            legends={[\r\n              {\r\n                anchor: 'bottom-right',\r\n                direction: 'row',\r\n                translateY: 36,\r\n                itemCount: 4,\r\n                itemWidth: 42,\r\n                itemHeight: 36,\r\n                itemsSpacing: 14,\r\n                itemDirection: 'right-to-left',\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default CalendarGraph;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport CalendarGraph from '../Components/CalendarGraph';\r\nimport { userSearch, userSearchCont } from '../Backend/searchingFunctionality';\r\n\r\nexport const UserContributionsOverTimeSettings = {\r\n  getData: async function(searchValue) {\r\n    const data = await userSearch(searchValue).then(str => {\r\n      if (str[0]) {\r\n        // console.log('first-call');\r\n        // console.log('value Over Time: ');\r\n        // console.log(value);\r\n        this.setState({ values: str[0] });\r\n        this.setState({ nextVals: str[0] });\r\n        this.setState({ keyValue: str[1] });\r\n        // console.log('key ' + this.state.keyValue);\r\n      }\r\n    });\r\n    const myMap = new Map();\r\n    let a = 0;\r\n    this.state.values.forEach(item => {\r\n      if (\r\n        !myMap.has(item.timestamp.slice(0, -10)) &&\r\n        item.timestamp.slice(0, -10) > '2020-01-01' &&\r\n        item.timestamp.slice(0, -10) < '2021-07-01'\r\n      ) {\r\n        myMap.set(item.timestamp.slice(0, -10), item);\r\n      }\r\n    });\r\n    for (const item of myMap.values()) {\r\n      item.day = item.timestamp.slice(0, -10);\r\n      item.value = this.state.values.reduce(function(s, o) {\r\n        if (o.timestamp.slice(0, -10) === item.day) {\r\n          s++;\r\n        }\r\n        return s;\r\n      }, 0);\r\n      if (a === 30) {\r\n        console.log(item.timestamp.slice(0, -10) + 'V:  ' + item.value);\r\n      }\r\n      a++;\r\n    }\r\n    const array = [myMap.size];\r\n    let j = 0;\r\n    for (const item of myMap.values()) {\r\n      array[j++] = item;\r\n    }\r\n    return array;\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async function(searchValue) {\r\n    // console.log('Refresh ' + searchValue);\r\n    if (this.state.keyValue != -1) {\r\n      const data = await userSearchCont(searchValue, this.state.keyValue).then(\r\n        str => {\r\n          // return str;\r\n          if (str[0]) {\r\n            // console.log('cont-call: ');\r\n            this.setState({ values: this.state.values.concat(str[0]) });\r\n          }\r\n          this.setState({ keyValue: str[1] });\r\n        }\r\n      );\r\n      const myMap = new Map();\r\n      this.state.values.forEach(item => {\r\n        if (\r\n          !myMap.has(item.timestamp.slice(0, -10)) &&\r\n          item.timestamp.slice(0, -10) > '2020-01-01' &&\r\n          item.timestamp.slice(0, -10) < '2021-07-01'\r\n        ) {\r\n          myMap.set(item.timestamp.slice(0, -10), item);\r\n        }\r\n      });\r\n      for (const item of myMap.values()) {\r\n        item.day = item.timestamp.slice(0, -10);\r\n        item.value = this.state.values.reduce(function(s, o) {\r\n          if (o.timestamp.slice(0, -10) === item.day) {\r\n            s++;\r\n          }\r\n          return s;\r\n        }, 0);\r\n      }\r\n      const array = [myMap.size];\r\n      let j = 0;\r\n      for (const item of myMap.values()) {\r\n        array[j++] = item;\r\n      }\r\n      return array;\r\n    }\r\n    return -1;\r\n  },\r\n  colorBy: 'type',\r\n  colors: 'set2',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\r\n  },\r\n};\r\n\r\nclass UserContributionsOverTime extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      paused: false,\r\n      value: '',\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  handlePause = event => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  onclick(search) {\r\n    // console.log('S ' + search);\r\n    this.setState({ value: search });\r\n    // console.log('V ' + this.state.value);\r\n    if (search) {\r\n      this.setState({ loading: true });\r\n    } else {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.fullGraph) {\r\n      return (\r\n        <GraphPage\r\n          handlePause={this.handlePause}\r\n          paused={this.state.paused}\r\n          explanation={\r\n            <div>\r\n              {'Revisions over time by this user.' +\r\n                ' Hover over a section to see the number of revisions made that day.'}\r\n              <p>\r\n                <img\r\n                  className=\"legend\"\r\n                  src={require('../legend.svg')}\r\n                  alt=\"Legend\"\r\n                />\r\n              </p>\r\n            </div>\r\n          }\r\n          graph={\r\n            <CalendarGraph\r\n              fullGraph={this.state.fullGraph}\r\n              settings={UserContributionsOverTimeSettings}\r\n              paused={this.state.paused}\r\n              value={this.state.value}\r\n              loading={this.state.loading}\r\n            />\r\n          }\r\n          name=\"User Contributions Over Time\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <CalendarGraph\r\n          fullGraph={this.state.fullGraph}\r\n          settings={UserContributionsOverTimeSettings}\r\n          paused={this.state.paused}\r\n          value={this.state.value}\r\n          loading={this.state.loading}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default UserContributionsOverTime;\r\n","import React, { Component } from 'react';\r\nimport Navbar from '../Components/Navbar';\r\nimport SearchBar from '../Components/SearchBar';\r\nimport UserFeed from '../Components/UserFeed';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport GraphCard from '../Components/GraphCard';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NumberOfChangesUser, {\r\n  NumberOfChangesSettings,\r\n} from './NumberOfChangesUser';\r\nimport * as utils from '../Backend/searchingFunctionality';\r\nimport UserContributionsOverTime, {\r\n  UserContributionsOverTimeSettings,\r\n} from './UserContributionsOverTime';\r\nimport CalendarGraph from '../Components/CalendarGraph';\r\n\r\nclass UsersSearchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n      value: '',\r\n      ifConfirm: true,\r\n      firmsList: [],\r\n      recentChanges: [],\r\n      invalidSearch: false,\r\n      loading: false,\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  //Match column mouse click events\r\n  onClick(value) {\r\n    this.setState({ invalidSearch: false });\r\n    this.checkUser(value).then(bool => {\r\n      if (bool) {\r\n        this.feed.onclick(value);\r\n        this.overTime.onclick(value);\r\n        this.changes.onclick(value);\r\n      } else {\r\n        this.setState({ invalidSearch: true });\r\n        // this.feed.onclick(\"\");\r\n        this.overTime.onclick('');\r\n        this.changes.onclick('');\r\n      }\r\n    });\r\n  }\r\n\r\n  checkUser = async searchValue => {\r\n    let data = false;\r\n    data = await utils.userSearch(searchValue).then(str => {\r\n      if (str[0]) {\r\n        if (str[1] != -1) {\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n    return data;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar history={this.state.history} />\r\n        <div className=\"row justify-content-left text-dark\">\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\r\n            <div className=\"feedContainer\">\r\n              <UserFeed\r\n                value={this.state.value}\r\n                onRef={ref => {\r\n                  this.feed = ref;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\r\n            <div>\r\n              <SearchBar\r\n                settings={SearchSettings}\r\n                searchValue={this.onClick.bind(this)}\r\n              />\r\n              {this.state.invalidSearch && <p>This User does not exist.</p>}\r\n              <CardDeck className=\"CardDeckRev\">\r\n                <GraphCard\r\n                  title=\"Number of Changes by User\"\r\n                  pageLink=\"number-of-changes-user\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <NumberOfChangesUser\r\n                      fullGraph={false}\r\n                      history={this.state.history}\r\n                      onRef={ref => {\r\n                        this.changes = ref;\r\n                      }}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n              <CardDeck className=\"CardDeckRev\">\r\n                <GraphCard\r\n                  title=\"User Contributions Over Time\"\r\n                  pageLink=\"user-contributions-over-time\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <UserContributionsOverTime\r\n                      fullGraph={false}\r\n                      history={this.state.history}\r\n                      onRef={ref => {\r\n                        this.overTime = ref;\r\n                      }}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SearchSettings = {\r\n  //   getData: async value => {\r\n  //     let data;\r\n  //     const item = await utils.getPrefixSearch(value).then(str => {\r\n  //       console.log(str);\r\n  //       data = str;\r\n  //     });\r\n  //     return \"data\";\r\n  //   },\r\n  type: 1,\r\n};\r\n\r\nexport default UsersSearchPage;\r\n","import React, { Component } from 'react';\r\nimport * as utils from '../Backend/searchingFunctionality';\r\n\r\nclass PageFeed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      recentChanges: [],\r\n      paused: false,\r\n      value: '',\r\n    };\r\n    this.togglePause = this.togglePause.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n    setInterval(\r\n      function() {\r\n        // console.log(\r\n        //   'timed task starts' + this.state.paused + '----' + this.state.value\r\n        // );\r\n        if (!this.state.paused && this.state.value) {\r\n          // console.log('timed task executes');\r\n          const item = utils.pageRevisionsSearch(this.state.value).then(str => {\r\n            if (str[0]) {\r\n              str[0].then(value => {\r\n                // console.log(value);\r\n                this.setState({ recentChanges: value });\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }.bind(this),\r\n      1000\r\n    );\r\n  }\r\n\r\n  onclick(search) {\r\n    // console.log(search);\r\n    this.setState({ value: search });\r\n    const item = utils.pageRevisionsSearch(search).then(str => {\r\n      if (str[0]) {\r\n        str[0].then(value => {\r\n          // console.log(value);\r\n          this.setState({ recentChanges: value });\r\n        });\r\n      }\r\n    });\r\n  }\r\n  togglePause() {\r\n    this.state.paused = !this.state.paused;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 className=\"text-blue text-left\">Page Revisions</h3>\r\n        <form className=\"text-left\" onChange={this.togglePause}>\r\n          <label>\r\n            <input type=\"checkbox\" /> Paused\r\n          </label>\r\n        </form>\r\n        <ul className=\"search-list-page-group\">\r\n          {this.state.recentChanges.map((item, index) => (\r\n            <li className=\"list-group-item text-left\" key={index}>\r\n              <div>\r\n                {`User: ${item.user}`}\r\n                <br />\r\n                {`Comment: ${item.comment}`}\r\n                <br />\r\n                {`Time: ${item.timestamp}`}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageFeed;\r\n","import React, { Component } from 'react';\r\nimport GraphPage from './GraphPage';\r\nimport CalendarGraph from '../Components/CalendarGraph';\r\nimport {\r\n  pageRevisionsSearch,\r\n  pageRevisionsSearchCont,\r\n} from '../Backend/searchingFunctionality';\r\n\r\nexport const PageRevisionsOverTimeSettings = {\r\n  getData: async function(searchValue) {\r\n    const data = await pageRevisionsSearch(searchValue).then(str => {\r\n      str[0].then(value => {\r\n        // console.log('first-call');\r\n        // console.log('value Over Time: ');\r\n        // console.log(value);\r\n        this.setState({ values: value });\r\n        this.setState({ nextVals: value });\r\n      });\r\n      this.setState({ keyValue: str[1] });\r\n      // console.log('key ' + this.state.keyValue);\r\n    });\r\n    const myMap = new Map();\r\n    const a = 0;\r\n    this.state.values.forEach(item => {\r\n      if (\r\n        !myMap.has(item.timestamp.slice(0, -10)) &&\r\n        item.timestamp.slice(0, -10) > '2020-01-01' &&\r\n        item.timestamp.slice(0, -10) < '2021-07-01'\r\n      ) {\r\n        myMap.set(item.timestamp.slice(0, -10), item);\r\n      }\r\n    });\r\n    for (const item of myMap.values()) {\r\n      item.day = item.timestamp.slice(0, -10);\r\n      item.value = this.state.values.reduce(function(s, o) {\r\n        if (o.timestamp.slice(0, -10) === item.day) {\r\n          s++;\r\n        }\r\n        return s;\r\n      }, 0);\r\n    }\r\n    const array = [myMap.size];\r\n    let j = 0;\r\n    for (const item of myMap.values()) {\r\n      array[j++] = item;\r\n    }\r\n    return array;\r\n  },\r\n  refreshTime: 2000,\r\n  refreshMethod: async function(searchValue) {\r\n    // console.log('Refresh ' + searchValue);\r\n    if (this.state.keyValue != -1) {\r\n      const data = await pageRevisionsSearchCont(\r\n        searchValue,\r\n        this.state.keyValue\r\n      ).then(str => {\r\n        // return str;\r\n        str[0].then(value => {\r\n          // console.log('cont-call: ');\r\n          this.setState({ values: this.state.values.concat(value) });\r\n        });\r\n        this.setState({ keyValue: str[1] });\r\n      });\r\n      const myMap = new Map();\r\n      this.state.values.forEach(item => {\r\n        if (\r\n          !myMap.has(item.timestamp.slice(0, -10)) &&\r\n          item.timestamp.slice(0, -10) > '2020-01-01' &&\r\n          item.timestamp.slice(0, -10) < '2021-07-01'\r\n        ) {\r\n          myMap.set(item.timestamp.slice(0, -10), item);\r\n        }\r\n      });\r\n      for (const item of myMap.values()) {\r\n        item.day = item.timestamp.slice(0, -10);\r\n        item.value = this.state.values.reduce(function(s, o) {\r\n          if (o.timestamp.slice(0, -10) === item.day) {\r\n            s++;\r\n          }\r\n          return s;\r\n        }, 0);\r\n      }\r\n      const array = [myMap.size];\r\n      let j = 0;\r\n      for (const item of myMap.values()) {\r\n        array[j++] = item;\r\n      }\r\n      return array;\r\n    }\r\n    return -1;\r\n  },\r\n  colorBy: 'type',\r\n  colors: 'set2',\r\n  onClick: function(click) {\r\n    window.open('https://www.wikidata.org/wiki/' + click.label, '_blank');\r\n  },\r\n  tooltip: function(click) {\r\n    return this.tooltip(click, 'https://www.wikidata.org/wiki/');\r\n  },\r\n};\r\n\r\nclass PageRevisionsOverTime extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: this.props.history,\r\n      fullGraph: this.props.fullGraph,\r\n      paused: false,\r\n      value: '',\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  handlePause = event => {\r\n    const paused = this.state.paused;\r\n    this.setState({ paused: !paused });\r\n  };\r\n\r\n  onclick(search) {\r\n    // console.log('S ' + search);\r\n    this.setState({ value: search });\r\n    // console.log('V ' + this.state.value);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.fullGraph) {\r\n      return (\r\n        <GraphPage\r\n          handlePause={this.handlePause}\r\n          paused={this.state.paused}\r\n          explanation={\r\n            <div>\r\n              {'Revisions over time for this page.' +\r\n                ' Hover over a section to see the number of revisions made that day.'}\r\n              <p>\r\n                <img\r\n                  className=\"legend\"\r\n                  src={require('../legend.svg')}\r\n                  alt=\"Legend\"\r\n                />\r\n              </p>\r\n            </div>\r\n          }\r\n          graph={\r\n            <CalendarGraph\r\n              fullGraph={true}\r\n              settings={PageRevisionsOverTimeSettings}\r\n              paused={this.state.paused}\r\n              value={this.state.value}\r\n            />\r\n          }\r\n          name=\"Page Revisions Over Time\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <CalendarGraph\r\n          fullGraph={this.state.fullGraph}\r\n          settings={PageRevisionsOverTimeSettings}\r\n          paused={this.state.paused}\r\n          value={this.state.value}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default PageRevisionsOverTime;\r\n","import React, { Component } from 'react';\r\nimport Navbar from '../Components/Navbar';\r\nimport SearchBar from '../Components/SearchBar';\r\nimport PageFeed from '../Components/PageFeed';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as utils from '../Backend/searchingFunctionality';\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport NumberOfChanges, { NumberOfChangesSettings } from './NumberOfChanges';\r\nimport GraphCard from '../Components/GraphCard';\r\nimport PageRevisionsOverTime, {\r\n  PageRevisionsOverTimeSettings,\r\n} from './PageRevisionsOverTime';\r\nimport CalendarGraph from '../Components/CalendarGraph';\r\n\r\nclass PageRevisionsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      history: this.props.history,\r\n      value: '',\r\n      ifConfirm: true,\r\n      firmsList: [],\r\n      recentChanges: [],\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  //Match column mouse click events\r\n  onClick(value) {\r\n    this.feed.onclick(value);\r\n    this.changes.onclick(value);\r\n    this.overTime.onclick(value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar history={this.state.history} />\r\n        <div className=\"row justify-content-left text-dark\">\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\r\n            <div className=\"feedContainer\">\r\n              <PageFeed\r\n                value={this.state.value}\r\n                onRef={ref => {\r\n                  this.feed = ref;\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\r\n            <div>\r\n              <SearchBar\r\n                settings={SearchSettings}\r\n                searchValue={this.onClick.bind(this)}\r\n              />\r\n              <CardDeck className=\"CardDeckRev\">\r\n                <GraphCard\r\n                  title=\"Number of Changes\"\r\n                  pageLink=\"number-of-changes\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <NumberOfChanges\r\n                      fullGraph={false}\r\n                      history={this.state.history}\r\n                      onRef={ref => {\r\n                        this.changes = ref;\r\n                      }}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n              <CardDeck className=\"CardDeckRev\">\r\n                <GraphCard\r\n                  title=\"Page Revisions Over Time\"\r\n                  pageLink=\"page-revisions-over-time\"\r\n                  history={this.state.history}\r\n                  graph={\r\n                    <PageRevisionsOverTime\r\n                      fullGraph={false}\r\n                      history={this.state.history}\r\n                      onRef={ref => {\r\n                        this.overTime = ref;\r\n                      }}\r\n                    />\r\n                  }\r\n                />\r\n              </CardDeck>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export const SearchSettings = {\r\n//   getData: async value => {\r\n//     let data;\r\n//     const item = await utils.getPrefixSearch(value).then(str => {\r\n//       console.log(str);\r\n//       data = str;\r\n//     });\r\n//     return data;\r\n//   },\r\n// };\r\n\r\nexport const SearchSettings = {\r\n  getData: async function(val) {\r\n    // console.log('dataFetch ' + val);\r\n    return await utils.getPrefixSearch(val);\r\n  },\r\n  type: 0,\r\n};\r\n\r\nexport default PageRevisionsPage;\r\n","import React, { Component } from 'react';\r\n// import { pageRevisionsSearch } from '../Backend/searchingFunctionality';\r\nimport { getPrefixSearch } from '../Backend/searchingFunctionality';\r\nimport SearchBar from '../Components/SearchBar';\r\n\r\nexport const searchSuggestions = {\r\n  getData: async function(val) {\r\n    console.log('dataFetch');\r\n    // return await pageRevisionsSearch(val);\r\n    return await getPrefixSearch(val);\r\n  },\r\n};\r\n\r\nclass TestComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { history: this.props.history, paused: false };\r\n  }\r\n\r\n  handlePause = event => {\r\n    this.setState({ paused: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <SearchBar settings={searchSuggestions} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TestComponent;\r\n","import React from 'react';\r\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\r\nimport HomePage from './Pages/HomePage';\r\nimport history from './Utils/History';\r\nimport FeedData from './Pages/FeedData';\r\nimport TestPage from './Pages/TestPage';\r\nimport UsersByMostEditsPage from './Pages/UsersByMostEditsPage';\r\nimport MostActiveUsers from './Pages/MostActiveUsers';\r\nimport MostActivePages from './Pages/MostActivePages';\r\nimport RecentEditSize from './Pages/RecentEditSize';\r\nimport LargestRecentEdits from './Pages/LargestRecentEdits';\r\nimport ProportionFlagged from './Pages/ProportionFlagged';\r\nimport AboutPage from './Pages/AboutPage';\r\nimport UsersSearchPage from './Pages/UsersSearchPage';\r\nimport PageRevisionsPage from './Pages/PageRevisionsPage';\r\nimport TestComponent from './Pages/TestComponent';\r\nimport PageRevisionsOverTime from './Pages/PageRevisionsOverTime';\r\nimport UserContributionsOverTime from './Pages/UserContributionsOverTime';\r\nimport NumberOfChanges from './Pages/NumberOfChanges';\r\nimport NumberOfChangesUser from './Pages/NumberOfChangesUser';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={process.env.PUBLIC_URL} history={history}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route exact path=\"/page\" component={TestPage} />\r\n          <Route exact path=\"/testComponent\" component={TestComponent} />\r\n          <Route\r\n            exact\r\n            path=\"/users-by-most-edits\"\r\n            component={UsersByMostEditsPage}\r\n          />\r\n          <Route exact path=\"/most-active-users\" component={MostActiveUsers} />\r\n          <Route exact path=\"/recent-edit-size\" component={RecentEditSize} />\r\n          <Route\r\n            exact\r\n            path=\"/largest-recent-edits\"\r\n            component={LargestRecentEdits}\r\n          />\r\n          <Route exact path=\"/most-active-pages\" component={MostActivePages} />\r\n          <Route\r\n            exact\r\n            path=\"/proportion-flagged\"\r\n            component={ProportionFlagged}\r\n          />\r\n          <Route exact path=\"/about-page\" component={AboutPage} />\r\n          <Route exact path=\"/feed\" component={FeedData} />\r\n          <Route exact path=\"/user-search\" component={UsersSearchPage} />\r\n          <Route exact path=\"/page-revisions\" component={PageRevisionsPage} />\r\n          <Route exact path=\"/number-of-changes\" component={NumberOfChanges} />\r\n          <Route\r\n            exact\r\n            path=\"/number-of-changes-user\"\r\n            component={NumberOfChangesUser}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/page-revisions-over-time\"\r\n            component={PageRevisionsOverTime}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/user-contributions-over-time\"\r\n            component={UserContributionsOverTime}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}